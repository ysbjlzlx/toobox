{"version":3,"file":"static/js/8452.3fc159fd.chunk.js","mappings":"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","sources":["components/placeholder/util.ts","components/placeholder/DummyImage.tsx","app/generator/image/ImageWrapper.tsx","components/placeholder/HrefLuImage.tsx","components/placeholder/PlaceholderImage.tsx","app/generator/image/page.tsx"],"sourcesContent":["import { PlaceholderConfig } from './index';\n\nconst defaultConfig = (): PlaceholderConfig => {\n  return {\n    width: 150,\n    height: 150,\n    suffix: '.png',\n    bgColor: '#cccccc',\n    textColor: '#969696',\n    text: '',\n  };\n};\n\nconst resolveConfig = (input: PlaceholderConfig): PlaceholderConfig => {\n  const config: PlaceholderConfig = defaultConfig();\n  if (input.width && input.width > 0) {\n    config.width = input.width;\n  }\n  if (input.height && input.height > 0) {\n    config.height = input.height;\n  }\n  if (input.suffix) {\n    config.suffix = input.suffix;\n  }\n  if (input.bgColor) {\n    config.bgColor = input.bgColor;\n  }\n  if (input.textColor) {\n    config.textColor = input.textColor;\n  }\n  if (input.text && input.text !== '') {\n    config.text = input.text;\n  }\n  return config;\n};\n\nexport { defaultConfig, resolveConfig };\n","import Image from 'mui-image';\nimport { useEffect, useState } from 'react';\nimport { PlaceholderConfig } from './index';\nimport { defaultConfig, resolveConfig } from './util';\n\nconst DummyImage = (input: PlaceholderConfig) => {\n  const [imgUrl, setImgUrl] = useState<string>('');\n  const [config, setConfig] = useState<PlaceholderConfig>(defaultConfig());\n\n  useEffect(() => {\n    setConfig(resolveConfig(input));\n  }, [input]);\n\n  useEffect(() => {\n    const url =\n      `https://dummyimage.com/${config.width}x${config.height}` +\n      `/${config.bgColor?.substring(1)}/${config.textColor?.substring(1)}` +\n      `?text=${encodeURIComponent(config.text || 'img')}`;\n    setImgUrl(url);\n  }, [config]);\n\n  return (\n    <Image\n      src={imgUrl}\n      style={{ width: `${config.width}px`, height: `${config.height}px` }}\n      alt={config.text || 'placeholder img'}\n    />\n  );\n};\n\nexport default DummyImage;\n","'use client';\n\nimport React, { FC } from 'react';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst ImageWrapper: FC<Props> = ({ children }) => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'inherit',\n      }}\n    >\n      {children}\n    </div>\n  );\n};\nexport default ImageWrapper;\n","import { Image } from 'antd';\nimport { useEffect, useState } from 'react';\nimport ImageWrapper from '../../app/generator/image/ImageWrapper';\nimport { PlaceholderConfig } from './index';\nimport { defaultConfig, resolveConfig } from './util';\n\nconst HrefLuImage = (input: PlaceholderConfig) => {\n  const [imgUrl, setImgUrl] = useState<string>('');\n  const [config, setConfig] = useState<PlaceholderConfig>(defaultConfig());\n\n  useEffect(() => {\n    setConfig(resolveConfig(input));\n  }, [input]);\n\n  useEffect(() => {\n    const url =\n      `https://iph.href.lu/${config.width}x${config.height}` +\n      `?bg=${config.bgColor?.substring(1)}` +\n      `&fg=${config.textColor?.substring(1)}` +\n      `&text=${encodeURIComponent(config.text || 'img')}`;\n    setImgUrl(url);\n  }, [config]);\n\n  return (\n    <ImageWrapper>\n      <Image\n        preview={false}\n        src={imgUrl}\n        width={config.width}\n        height={config.height}\n        style={{\n          width: `${config.width}px`,\n          height: `${config.height}px`,\n        }}\n        alt={config.text || 'placeholder img'}\n      />\n    </ImageWrapper>\n  );\n};\n\nexport default HrefLuImage;\n","import Image from 'mui-image';\nimport { useEffect, useState } from 'react';\nimport { PlaceholderConfig } from './index';\nimport { defaultConfig, resolveConfig } from './util';\n\nconst PlaceholderImage = (input: PlaceholderConfig) => {\n  const [imgUrl, setImgUrl] = useState<string>('');\n  const [config, setConfig] = useState<PlaceholderConfig>(defaultConfig());\n\n  useEffect(() => {\n    setConfig(resolveConfig(input));\n  }, [input]);\n\n  useEffect(() => {\n    const url =\n      `https://via.placeholder.com/${config.width}x${config.height}` +\n      `/${config.bgColor?.substring(1)}/${config.textColor?.substring(1)}` +\n      `?text=${encodeURIComponent(config.text || 'img')}` +\n      config.suffix;\n    setImgUrl(url);\n  }, [config]);\n\n  return (\n    <Image\n      src={imgUrl}\n      style={{ width: `${config.width}px`, height: `${config.height}px` }}\n      alt={config.text || 'placeholder img'}\n    />\n  );\n};\n\nexport default PlaceholderImage;\n","'use client';\n\nimport { PageContainer, ProForm, ProFormDigit, ProFormSelect, ProFormText } from '@ant-design/pro-components';\nimport { Box } from '@mui/material';\nimport type { TabsProps } from 'antd';\nimport { Col, ColorPicker, Form, Row, Tabs } from 'antd';\nimport { FC, useEffect, useState } from 'react';\n\nimport { PlaceholderConfig } from '../../../components/placeholder';\nimport DummyImage from '../../../components/placeholder/DummyImage';\nimport HrefLuImage from '../../../components/placeholder/HrefLuImage';\nimport PlaceholderImage from '../../../components/placeholder/PlaceholderImage';\n\nconst defaultValues = {\n  width: 320,\n  height: 320,\n  suffix: '.png',\n  bgColor: '#cccccc',\n  textColor: '#969696',\n  text: 'img',\n};\n\nconst suffixOptions = [\n  { label: '.png', value: '.png' },\n  { label: '.jpg', value: '.jpg' },\n  { label: '.gif', value: '.gif' },\n];\n\nconst PlaceholderImg: FC = () => {\n  const [form] = Form.useForm();\n  const [placeholderConfig, setPlaceholderConfig] = useState<PlaceholderConfig>(defaultValues);\n\n  const bgColor = Form.useWatch('bgColor', { form, preserve: true });\n  const textColor = Form.useWatch('textColor', { form, preserve: true });\n\n  useEffect(() => {\n    const values = form.getFieldsValue();\n    setPlaceholderConfig(values);\n  }, [bgColor, form, textColor]);\n\n  const tabsProps: TabsProps = {\n    defaultActiveKey: 'HrefLuImage',\n    items: [\n      {\n        key: 'HrefLuImage',\n        label: 'iph.href.lu',\n        children: <HrefLuImage {...placeholderConfig} />,\n      },\n      {\n        key: 'PlaceholderImage',\n        label: 'via.placeholder.com',\n        children: <PlaceholderImage {...placeholderConfig} />,\n      },\n      {\n        key: 'DummyImage',\n        label: 'dummyimage.com',\n        children: <DummyImage {...placeholderConfig} />,\n      },\n    ],\n  };\n  return (\n    <PageContainer>\n      <ProForm\n        submitter={false}\n        form={form}\n        initialValues={defaultValues}\n        onValuesChange={(changedValues, values) => {\n          setPlaceholderConfig(values);\n        }}\n      >\n        <Row gutter={16}>\n          <Col xs={24} sm={24} md={12} lg={8}>\n            <ProFormDigit label=\"宽度\" name=\"width\" />\n          </Col>\n          <Col xs={24} sm={24} md={12} lg={8}>\n            <ProFormDigit label=\"高度\" name=\"height\" />\n          </Col>\n          <Col xs={24} sm={24} md={12} lg={8}>\n            <ProFormSelect label=\"后缀名\" name=\"suffix\" options={suffixOptions} allowClear={false} />\n          </Col>\n          <Col xs={24} sm={24} md={12} lg={8}>\n            <ProFormText\n              label=\"背景颜色\"\n              name=\"bgColor\"\n              fieldProps={{\n                suffix: (\n                  <ColorPicker\n                    value={bgColor}\n                    onChange={(value, hex) => {\n                      form.setFieldValue('bgColor', hex);\n                    }}\n                  />\n                ),\n              }}\n              allowClear={false}\n            />\n          </Col>\n          <Col xs={24} sm={24} md={12} lg={8}>\n            <ProFormText\n              label=\"文本颜色\"\n              name=\"textColor\"\n              fieldProps={{\n                suffix: (\n                  <ColorPicker\n                    value={textColor}\n                    onChange={(value, hex) => {\n                      form.setFieldValue('textColor', hex);\n                    }}\n                  />\n                ),\n              }}\n              allowClear={false}\n            />\n          </Col>\n          <Col xs={24} sm={24} md={12} lg={8}>\n            <ProFormText label=\"文本\" name=\"text\" allowClear={false} fieldProps={{ style: { height: '42px' } }} />\n          </Col>\n        </Row>\n      </ProForm>\n      <Box>\n        <Tabs {...tabsProps} />\n      </Box>\n    </PageContainer>\n  );\n};\n\nexport default PlaceholderImg;\n"],"names":["resolveConfig","input","config","width","height","suffix","bgColor","textColor","text","_useState","useState","_useState2","_slicedToArray","imgUrl","setImgUrl","_useState3","_useState4","setConfig","useEffect","_config$bgColor","_config$textColor","url","concat","substring","encodeURIComponent","_jsx","Image","src","style","alt","_ref","children","display","justifyContent","alignItems","backgroundColor","ImageWrapper","preview","defaultValues","suffixOptions","label","value","_Form$useForm","Form","form","placeholderConfig","setPlaceholderConfig","preserve","values","getFieldsValue","tabsProps","defaultActiveKey","items","key","HrefLuImage","_objectSpread","PlaceholderImage","DummyImage","_jsxs","PageContainer","ProForm","submitter","initialValues","onValuesChange","changedValues","Row","gutter","Col","xs","sm","md","lg","ProFormDigit","name","ProFormSelect","options","allowClear","ProFormText","fieldProps","ColorPicker","onChange","hex","setFieldValue","Box","Tabs"],"sourceRoot":""}