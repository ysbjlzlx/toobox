{"version":3,"file":"static/js/601.fef203ed.chunk.js","mappings":"6OAUe,SAASA,EAAqB,GAAgC,IAA9BC,EAAO,EAAPA,QACvCC,GADyD,EAATC,WAC1CC,EAAAA,EAAAA,QAA0B,OACtC,GAAwBC,EAAAA,EAAAA,WAAkB,GAAM,eAAzCC,EAAI,KAAEC,EAAO,KAcpB,OAZAC,EAAAA,EAAAA,YAAU,WACR,GAAIN,EAAIO,QAAS,CACf,IAAMC,EAAY,IAAIC,IAAJ,CAAgBT,EAAIO,SACtCC,EAAUE,GAAG,WAAW,SAACC,GACvBN,GAAQ,EACV,IACAG,EAAUE,GAAG,SAAS,SAACC,GACrBC,QAAQC,MAAMF,EAChB,GACF,CACF,GAAG,KAGD,iCACE,SAAC,IAAc,CAACG,SAAS,MAAK,UAC5B,SAAC,IAAU,CAACC,IAAKf,EAAK,sBAAqBD,EAAS,aAAW,eAAc,UAC3E,SAAC,IAAW,SAIhB,SAAC,IAAQ,CAACK,KAAMA,EAAMY,QAAS,kBAAMX,GAAQ,EAAM,EAAEY,iBAAkB,IAAMC,QAAQ,+BAG3F,C,8MC/Be,SAASC,IACtB,OAA0BhB,EAAAA,EAAAA,UAAS,IAAG,eAA/BiB,EAAK,KAAEC,EAAQ,KACtB,GAA4BlB,EAAAA,EAAAA,UAAS,IAAG,eAAjCmB,EAAM,KAAEC,EAAS,KASxB,OACE,UAAC,IAAS,YACR,SAAC,IAAG,CAACC,GAAI,CAAEC,GAAI,GAAI,UACjB,SAAC,aAAc,CACbC,MAAON,EACPO,SAAU,SAACC,GACTP,EAASO,EAAMN,OAAOI,MACxB,EACAG,YAAY,eACZC,SAAU,CAAEC,QAAS,EAAGC,QAAS,IACjCC,WAAS,OAGb,SAAC,IAAG,CAACT,GAAI,CAAEC,GAAI,GAAI,UACjB,UAAC,IAAW,YACV,SAAC,IAAM,CAACS,QAvBD,WACb,IAAMC,EAAMC,EAAAA,IAAAA,OAAAA,UAAqBA,EAAAA,IAAAA,KAAAA,MAAehB,IAChDG,EAAUY,EACZ,EAoBgC,2BACxB,SAAC,IAAM,CAACD,QApBD,WACb,IAAMC,EAAMC,EAAAA,IAAAA,KAAAA,UAAmBA,EAAAA,IAAAA,OAAAA,MAAiBhB,IAChDG,EAAUY,EACZ,EAiBgC,gCAG5B,SAAC,IAAG,CAACX,GAAI,CAAEC,GAAI,GAAI,UACjB,SAAC,IAAS,CACRY,MAAM,eACNX,MAAOJ,EACPgB,WAAS,EACTC,WAAS,EACTR,QAAS,EACTC,QAAS,GACTQ,WAAY,CACVC,cAAc,SAAC,IAAoB,CAAC1C,QAASuB,WAMzD,C","sources":["components/ContentCopyAdornment.tsx","pages/Base64.tsx"],"sourcesContent":["import { ContentCopy } from '@mui/icons-material';\nimport { IconButton, InputAdornment, Snackbar } from '@mui/material';\nimport ClipboardJS from 'clipboard';\nimport { useEffect, useRef, useState } from 'react';\n\ninterface Props {\n  content?: string | undefined;\n  onSuccess?: Function | undefined;\n}\n\nexport default function ContentCopyAdornment({ content, onSuccess }: Props) {\n  const btn = useRef<HTMLButtonElement>(null);\n  const [open, setOpen] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (btn.current) {\n      const clipboard = new ClipboardJS(btn.current);\n      clipboard.on('success', (e) => {\n        setOpen(true);\n      });\n      clipboard.on('error', (e) => {\n        console.error(e);\n      });\n    }\n  }, []);\n\n  return (\n    <>\n      <InputAdornment position=\"end\">\n        <IconButton ref={btn} data-clipboard-text={content} aria-label=\"Copy content\">\n          <ContentCopy />\n        </IconButton>\n      </InputAdornment>\n\n      <Snackbar open={open} onClose={() => setOpen(false)} autoHideDuration={3000} message=\"复制成功\" />\n    </>\n  );\n}\n","import { Box, Button, ButtonGroup, Container, TextField } from '@mui/material';\nimport { Input } from 'antd';\nimport { enc } from 'crypto-js';\nimport { useState } from 'react';\nimport ContentCopyAdornment from '../components/ContentCopyAdornment';\n\nexport default function Base64() {\n  const [plain, setPlain] = useState('');\n  const [target, setTarget] = useState('');\n  const encode = () => {\n    const str = enc.Base64.stringify(enc.Utf8.parse(plain));\n    setTarget(str);\n  };\n  const decode = () => {\n    const str = enc.Utf8.stringify(enc.Base64.parse(plain));\n    setTarget(str);\n  };\n  return (\n    <Container>\n      <Box sx={{ mt: 2 }}>\n        <Input.TextArea\n          value={plain}\n          onChange={(event) => {\n            setPlain(event.target.value);\n          }}\n          placeholder=\"文本\"\n          autoSize={{ minRows: 5, maxRows: 10 }}\n          showCount\n        />\n      </Box>\n      <Box sx={{ mt: 2 }}>\n        <ButtonGroup>\n          <Button onClick={encode}>编码</Button>\n          <Button onClick={decode}>解码</Button>\n        </ButtonGroup>\n      </Box>\n      <Box sx={{ mt: 2 }}>\n        <TextField\n          label=\"结果\"\n          value={target}\n          fullWidth\n          multiline\n          minRows={5}\n          maxRows={10}\n          InputProps={{\n            endAdornment: <ContentCopyAdornment content={target} />,\n          }}\n        />\n      </Box>\n    </Container>\n  );\n}\n"],"names":["ContentCopyAdornment","content","btn","onSuccess","useRef","useState","open","setOpen","useEffect","current","clipboard","ClipboardJS","on","e","console","error","position","ref","onClose","autoHideDuration","message","Base64","plain","setPlain","target","setTarget","sx","mt","value","onChange","event","placeholder","autoSize","minRows","maxRows","showCount","onClick","str","enc","label","fullWidth","multiline","InputProps","endAdornment"],"sourceRoot":""}