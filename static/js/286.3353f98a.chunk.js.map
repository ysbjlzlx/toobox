{"version":3,"file":"static/js/286.3353f98a.chunk.js","mappings":"iPAUe,SAASA,EAAT,GAA8D,IAA9BC,EAA6B,EAA7BA,QACvCC,GADoE,EAApBC,WAC1CC,EAAAA,EAAAA,QAA0B,OACtC,GAAwBC,EAAAA,EAAAA,WAAkB,GAA1C,eAAOC,EAAP,KAAaC,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,GAAIN,EAAIO,QAAS,CACf,IAAMC,EAAY,IAAIC,IAAJ,CAAgBT,EAAIO,SACtCC,EAAUE,GAAG,WAAW,SAACC,GACvBN,GAAQ,EACT,IACDG,EAAUE,GAAG,SAAS,SAACC,GACrBC,QAAQC,MAAMF,EACf,GACF,CACF,GAAE,KAGD,iCACE,SAAC,IAAD,CAAgBG,SAAS,MAAzB,UACE,SAAC,IAAD,CAAYC,IAAKf,EAAK,sBAAqBD,EAAS,aAAW,eAA/D,UACE,SAAC,IAAD,SAIJ,SAAC,IAAD,CAAUK,KAAMA,EAAMY,QAAS,kBAAMX,GAAQ,EAAd,EAAsBY,iBAAkB,IAAMC,QAAQ,+BAG1F,C,wECnBD,IAVyB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAC1B,OACE,SAAC,IAAD,CAAgBL,SAAS,MAAzB,UACE,SAAC,IAAD,CAAY,aAAW,cAAcK,QAASA,EAA9C,UACE,SAAC,IAAD,OAIP,C,gJCeD,UAxBa,WACX,IAAMC,GAAgBlB,EAAAA,EAAAA,QAAO,MAC7B,GAAoCC,EAAAA,EAAAA,UAAiB,KAArD,eAAOkB,EAAP,KAAmBC,EAAnB,KACMC,GAAiBC,EAAAA,EAAAA,GAAQJ,GAM/B,OACE,UAAC,KAAD,CAAYK,MAAOJ,EAAnB,WACE,SAAC,IAAD,CAAKN,IAAKK,EAAV,UACE,SAAC,IAAD,CAASM,SAPM,SAACC,EAA8BF,GAClDH,EAAcG,EACf,EAKsC,aAAW,iBAA5C,UACE,SAAC,IAAD,CAAKG,MAAM,iBAAiBH,MAAM,WAItC,SAAC,IAAD,CAAUA,MAAOJ,EAAYQ,GAAI,CAAEC,OAAO,eAAD,QAA+B,OAAdP,QAAc,IAAdA,OAAA,EAAAA,EAAgBO,SAAU,GAA3C,QAAzC,UACE,SAAC,UAAD,QAIP,C,0JCUD,UAhCqB,WACnB,OAAkC3B,EAAAA,EAAAA,UAAiB,IAAnD,eAAO4B,EAAP,KAAkBC,EAAlB,MAEA1B,EAAAA,EAAAA,YAAU,WACR2B,GACD,GAAE,IAEH,IAAMA,EAAmB,WACvBD,EAAaE,MAAWC,cACzB,EAED,OACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAYC,QAAQ,KAApB,4BACA,SAAC,IAAD,CAAKP,GAAI,CAAEQ,GAAI,GAAf,UACE,SAAC,IAAD,CACET,MAAM,MACNH,MAAOM,EACPO,WAAS,EACTC,WAAY,CACVC,cACE,iCACE,SAAC,IAAD,CAAkBrB,QAASc,KAC3B,SAAC,IAAD,CAAsBlC,QAASgC,cAQ9C,C","sources":["components/ContentCopyAdornment.tsx","components/RefreshAdornment.tsx","pages/bson/Bson.tsx","pages/bson/BsonObjectId.tsx"],"sourcesContent":["import { ContentCopy } from '@mui/icons-material';\nimport { IconButton, InputAdornment, Snackbar } from '@mui/material';\nimport ClipboardJS from 'clipboard';\nimport { useEffect, useRef, useState } from 'react';\n\ninterface Props {\n  content?: string | undefined;\n  onSuccess?: Function | undefined;\n}\n\nexport default function ContentCopyAdornment({ content, onSuccess }: Props) {\n  const btn = useRef<HTMLButtonElement>(null);\n  const [open, setOpen] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (btn.current) {\n      const clipboard = new ClipboardJS(btn.current);\n      clipboard.on('success', (e) => {\n        setOpen(true);\n      });\n      clipboard.on('error', (e) => {\n        console.error(e);\n      });\n    }\n  }, []);\n\n  return (\n    <>\n      <InputAdornment position=\"end\">\n        <IconButton ref={btn} data-clipboard-text={content} aria-label=\"Copy content\">\n          <ContentCopy />\n        </IconButton>\n      </InputAdornment>\n\n      <Snackbar open={open} onClose={() => setOpen(false)} autoHideDuration={3000} message=\"复制成功\" />\n    </>\n  );\n}\n","import { Refresh as RefreshIcon } from '@mui/icons-material';\nimport { IconButton, InputAdornment } from '@mui/material';\nimport { MouseEventHandler } from 'react';\n\ninterface Props {\n  onClick: MouseEventHandler | undefined;\n}\n\nconst RefreshAdornment = ({ onClick }: Props) => {\n  return (\n    <InputAdornment position=\"end\">\n      <IconButton aria-label=\"Refresh hex\" onClick={onClick}>\n        <RefreshIcon />\n      </IconButton>\n    </InputAdornment>\n  );\n};\n\nexport default RefreshAdornment;\n","import { TabContext, TabList, TabPanel } from '@mui/lab';\nimport { Box, Tab } from '@mui/material';\nimport { useSize } from 'ahooks';\nimport React, { useRef, useState } from 'react';\n\nimport BsonObjectId from './BsonObjectId';\n\nconst Bson = () => {\n  const tabWrapperRef = useRef(null);\n  const [currentTab, setCurrentTab] = useState<string>('0');\n  const tabWrapperSize = useSize(tabWrapperRef);\n\n  const handleChange = (_event: React.SyntheticEvent, value: string) => {\n    setCurrentTab(value);\n  };\n\n  return (\n    <TabContext value={currentTab}>\n      <Box ref={tabWrapperRef}>\n        <TabList onChange={handleChange} aria-label=\"json tab panel\">\n          <Tab label=\"BSON Object ID\" value=\"0\" />\n        </TabList>\n      </Box>\n\n      <TabPanel value={currentTab} sx={{ height: `calc(100% - ${tabWrapperSize?.height || 48}px)` }}>\n        <BsonObjectId />\n      </TabPanel>\n    </TabContext>\n  );\n};\n\nexport default Bson;\n","import { Box, Container, TextField, Typography } from '@mui/material';\nimport ObjectID from 'bson-objectid';\nimport { useEffect, useState } from 'react';\n\nimport ContentCopyAdornment from '../../components/ContentCopyAdornment';\nimport RefreshAdornment from '../../components/RefreshAdornment';\n\nconst BsonObjectId = () => {\n  const [hexString, setHexString] = useState<string>('');\n\n  useEffect(() => {\n    refreshHexString();\n  }, []);\n\n  const refreshHexString = () => {\n    setHexString(ObjectID().toHexString());\n  };\n\n  return (\n    <Container>\n      <Typography variant=\"h2\">BSON ObjectID</Typography>\n      <Box sx={{ mt: 2 }}>\n        <TextField\n          label=\"hex\"\n          value={hexString}\n          fullWidth\n          InputProps={{\n            endAdornment: (\n              <>\n                <RefreshAdornment onClick={refreshHexString} />\n                <ContentCopyAdornment content={hexString} />\n              </>\n            ),\n          }}\n        />\n      </Box>\n    </Container>\n  );\n};\nexport default BsonObjectId;\n"],"names":["ContentCopyAdornment","content","btn","onSuccess","useRef","useState","open","setOpen","useEffect","current","clipboard","ClipboardJS","on","e","console","error","position","ref","onClose","autoHideDuration","message","onClick","tabWrapperRef","currentTab","setCurrentTab","tabWrapperSize","useSize","value","onChange","_event","label","sx","height","hexString","setHexString","refreshHexString","ObjectID","toHexString","variant","mt","fullWidth","InputProps","endAdornment"],"sourceRoot":""}