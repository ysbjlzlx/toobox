{"version":3,"file":"static/js/31.ac5162d3.chunk.js","mappings":"qOAmCA,EA9B0B,SAACA,GACzB,IAAMC,GAAeC,EAAAA,EAAAA,UACfC,GAAYD,EAAAA,EAAAA,UAyBlB,OAvBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,CACdC,OAAQL,EAAaM,QACrBP,MAAO,CAAC,GAKV,OAFAG,EAAUI,QAAU,IAAIC,EAAAA,GAAWH,GAE5B,WAEDF,EAAUI,UACZJ,EAAUI,QAAQE,UAClBN,EAAUI,aAAUG,EAEvB,CACF,GAAE,KAEHN,EAAAA,EAAAA,YAAU,WACgB,IAAD,EAAnBD,EAAUI,UACZ,UAAAJ,EAAUI,eAAV,SAAmBI,YAAYX,GAElC,GAAE,CAACA,KAEG,SAACY,EAAA,EAAD,CAAKC,IAAKZ,EAAca,OAAO,QACvC,ECcD,EAzCqB,WACnB,IAMA,GAAsCC,EAAAA,EAAAA,GAA0B,OAAQ,CAAEC,aANrD,CACnBC,KAAM,OACNC,QAAS,CACPC,KAAM,OAGV,eAAOC,EAAP,KAAoBC,EAApB,KAwBA,OACE,SAAC,EAAD,CACEJ,KAvBEG,GAAoC,SAArBA,EAAYH,KACtBK,EAAAA,GAAAA,KAELF,GAAoC,SAArBA,EAAYH,KACtBK,EAAAA,GAAAA,KAEFA,EAAAA,GAAAA,KAkBLJ,QAASE,EAAYF,QACrBK,SAhBa,SAACL,GAChBG,GAAe,SAACG,GACd,OAAO,kBAAKA,GAAZ,IAAsBN,QAASA,GAChC,GACF,EAaGO,aAXgB,SAACR,GACnBI,GAAe,SAACG,GACd,OAAO,kBAAKA,GAAZ,IAAsBP,KAAMA,GAC7B,GACF,GAUF,C","sources":["components/VanillaJSONEditor.tsx","pages/JSON.tsx"],"sourcesContent":["import { Box } from '@mui/material';\nimport { useEffect, useRef } from 'react';\n\nimport { JSONEditor, JSONEditorPropsOptional } from 'vanilla-jsoneditor';\n\nconst VanillaJSONEditor = (props: JSONEditorPropsOptional) => {\n  const containerRef = useRef<HTMLDivElement>();\n  const editorRef = useRef<JSONEditor>();\n\n  useEffect(() => {\n    const options = {\n      target: containerRef.current,\n      props: {},\n    };\n    // @ts-ignore\n    editorRef.current = new JSONEditor(options);\n\n    return () => {\n      // destroy editor\n      if (editorRef.current) {\n        editorRef.current.destroy();\n        editorRef.current = undefined;\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (editorRef.current) {\n      editorRef.current?.updateProps(props);\n    }\n  }, [props]);\n\n  return <Box ref={containerRef} height=\"100%\" />;\n};\n\nexport default VanillaJSONEditor;\n","import { useLocalStorageState } from 'ahooks';\nimport { FC } from 'react';\n\nimport { Content, Mode } from 'vanilla-jsoneditor';\nimport VanillaJSONEditor from '../components/VanillaJSONEditor';\n\nconst JSONBeta: FC = () => {\n  const defaultValue = {\n    mode: 'text',\n    content: {\n      text: '',\n    },\n  };\n  const [jsonStorage, setJsonStorage] = useLocalStorageState<any>('json', { defaultValue });\n\n  const resolveMode = (): Mode | undefined => {\n    if (jsonStorage && jsonStorage.mode === 'text') {\n      return Mode.text;\n    }\n    if (jsonStorage && jsonStorage.mode === 'tree') {\n      return Mode.tree;\n    }\n    return Mode.text;\n  };\n\n  const onChange = (content: Content) => {\n    setJsonStorage((oldValue: any) => {\n      return { ...oldValue, content: content };\n    });\n  };\n\n  const onChangMode = (mode: Mode) => {\n    setJsonStorage((oldValue: any) => {\n      return { ...oldValue, mode: mode };\n    });\n  };\n\n  return (\n    <VanillaJSONEditor\n      mode={resolveMode()}\n      content={jsonStorage.content}\n      onChange={onChange}\n      onChangeMode={onChangMode}\n    />\n  );\n};\n\nexport default JSONBeta;\n"],"names":["props","containerRef","useRef","editorRef","useEffect","options","target","current","JSONEditor","destroy","undefined","updateProps","Box","ref","height","useLocalStorageState","defaultValue","mode","content","text","jsonStorage","setJsonStorage","Mode","onChange","oldValue","onChangeMode"],"sourceRoot":""}