{"version":3,"file":"static/js/141.8324c306.chunk.js","mappings":"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","sources":["components/VanillaJSONEditor.tsx","pages/json/JsonEditor.tsx","pages/json/JsonToExcel.tsx","pages/json/JsonToYaml.tsx","pages/json/Json.tsx","utils/formatter.ts"],"sourcesContent":["import { Box } from '@mui/material';\nimport * as LosslessJSON from 'lossless-json';\nimport { useEffect, useRef } from 'react';\n\nimport { JSONEditor, JSONEditorPropsOptional } from 'vanilla-jsoneditor';\n\nconst VanillaJSONEditor = (props: JSONEditorPropsOptional) => {\n  const containerRef = useRef<HTMLDivElement>();\n  const editorRef = useRef<JSONEditor>();\n\n  useEffect(() => {\n    const options = {\n      target: containerRef.current,\n      props: {},\n    };\n    // @ts-ignore\n    editorRef.current = new JSONEditor(options);\n\n    return () => {\n      // destroy editor\n      if (editorRef.current) {\n        editorRef.current.destroy();\n        editorRef.current = undefined;\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (editorRef.current) {\n      // @ts-ignore\n      editorRef.current?.updateProps({ ...props, parser: LosslessJSON });\n    }\n  }, [props]);\n\n  return <Box ref={containerRef} height=\"100%\" />;\n};\n\nexport default VanillaJSONEditor;\n","import { useLocalStorageState } from 'ahooks';\nimport { FC } from 'react';\nimport { Content, Mode } from 'vanilla-jsoneditor';\n\nimport VanillaJSONEditor from '../../components/VanillaJSONEditor';\n\nconst JSONBeta: FC = () => {\n  const defaultValue = {\n    mode: 'text',\n    content: {\n      text: '',\n    },\n  };\n  const [jsonStorage, setJsonStorage] = useLocalStorageState<any>('json', { defaultValue });\n\n  const resolveMode = (): Mode | undefined => {\n    if (jsonStorage === undefined || jsonStorage === null) {\n      return Mode.text;\n    }\n    return jsonStorage.mode as Mode;\n  };\n\n  const onChange = (content: Content) => {\n    setJsonStorage((oldValue: any) => {\n      return { ...oldValue, content: content };\n    });\n  };\n\n  const onChangMode = (mode: Mode) => {\n    setJsonStorage((oldValue: any) => {\n      return { ...oldValue, mode: mode };\n    });\n  };\n\n  return (\n    <VanillaJSONEditor\n      mode={resolveMode()}\n      content={jsonStorage.content}\n      onChange={onChange}\n      onChangeMode={onChangMode}\n    />\n  );\n};\n\nexport default JSONBeta;\n","import { Box } from '@mui/material';\nimport JSON5 from 'json5';\nimport _ from 'lodash';\nimport { useEffect, useState } from 'react';\nimport AceEditor from 'react-ace';\nimport { AceOptions } from 'react-ace/types';\nimport ReactDataSheet from 'react-datasheet';\n\nimport 'ace-builds/src-min-noconflict/ext-searchbox';\nimport 'ace-builds/src-min-noconflict/mode-json5';\nimport 'ace-builds/src-min-noconflict/mode-yaml';\nimport 'ace-builds/src-min-noconflict/theme-textmate';\nimport 'react-datasheet/lib/react-datasheet.css';\n\nexport interface GridElement extends ReactDataSheet.Cell<GridElement, number | string | null> {\n  value: number | string | null;\n}\n\nconst JsonToExcel = () => {\n  const [json, setJson] = useState<string>('{}');\n  const [data, setData] = useState<GridElement[][]>([]);\n  const [jsonOptions] = useState<AceOptions>({\n    useWorker: false,\n    showLineNumbers: true,\n    tabSize: 2,\n    wrap: true,\n    fontSize: 14,\n  });\n  useEffect(() => {\n    try {\n      const result = JSON5.parse(json);\n      console.log(result);\n      if (Array.isArray(result)) {\n        let columns: any[] = [];\n        result.forEach((item) => {\n          const keys = Object.keys(item);\n          keys.forEach((key) => {\n            columns.push({ value: key, readOnly: true });\n          });\n        });\n        columns = _.uniqWith(columns, (a, b) => {\n          return a.value === b.value;\n        });\n\n        const rows: any[] = [];\n        result.forEach((item) => {\n          const row = columns.map((column) => {\n            const value = item[column.value] || null;\n            return { value, readOnly: true };\n          });\n          rows.push(row);\n        });\n        // @ts-ignore\n        setData([columns, ...rows]);\n      }\n    } catch (e) {\n      if (e instanceof SyntaxError) {\n        console.error(e.message);\n      }\n    }\n  }, [json]);\n\n  return (\n    <Box>\n      <Box sx={{ width: '100%', height: '300px' }}>\n        <AceEditor\n          theme=\"textmate\"\n          placeholder=\"JSON\"\n          setOptions={jsonOptions}\n          value={json}\n          onChange={setJson}\n          mode=\"json5\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </Box>\n      <Box sx={{ mt: 3, width: '100%' }}>\n        <ReactDataSheet data={data} valueRenderer={(cel) => cel.value} />\n      </Box>\n    </Box>\n  );\n};\n\nexport default JsonToExcel;\n","import { Box, Button, Grid } from '@mui/material';\nimport JSON5 from 'json5';\nimport { FC, useState } from 'react';\nimport AceEditor from 'react-ace';\nimport { AceOptions } from 'react-ace/types';\nimport YAML from 'yaml';\nimport { format, parser } from '../../utils/formatter';\n\nimport 'ace-builds/src-min-noconflict/ext-searchbox';\nimport 'ace-builds/src-min-noconflict/mode-json';\nimport 'ace-builds/src-min-noconflict/mode-yaml';\nimport 'ace-builds/src-min-noconflict/theme-textmate';\n\nconst JsonToYaml: FC = () => {\n  const [json, setJson] = useState<string>('');\n  const [yaml, setYaml] = useState<string>('');\n  const [jsonOptions] = useState<AceOptions>({\n    useWorker: false,\n    showLineNumbers: true,\n    tabSize: 2,\n    wrap: true,\n    fontSize: 14,\n  });\n  const [yamlOptions] = useState<AceOptions>({\n    useWorker: false,\n    showLineNumbers: true,\n    tabSize: 2,\n    wrap: true,\n    fontSize: 14,\n  });\n\n  const json2yaml = (value: string): string => {\n    if (!value || value === '') {\n      return value;\n    }\n    console.log(JSON5.parse(value));\n    return format(YAML.stringify(JSON5.parse(value)), 'yaml' as parser);\n  };\n\n  const json2yamlBtnClick = () => {\n    setYaml(json2yaml(json));\n  };\n\n  return (\n    <Box sx={{ height: '100%' }}>\n      <Box>\n        <Button onClick={json2yamlBtnClick}>JSON =&gt; YAML</Button>\n      </Box>\n      <Grid container sx={{ height: 'calc(100% - 37px)' }}>\n        <Grid item xs={12} md={6} sx={{ height: '100%' }}>\n          <AceEditor\n            theme=\"textmate\"\n            placeholder=\"JSON\"\n            setOptions={jsonOptions}\n            value={json}\n            onChange={setJson}\n            mode=\"json5\"\n            width=\"100%\"\n            height=\"100%\"\n          />\n        </Grid>\n        <Grid item xs={12} md={6} sx={{ height: '100%' }}>\n          <AceEditor\n            theme=\"textmate\"\n            placeholder=\"YAML\"\n            setOptions={yamlOptions}\n            value={yaml}\n            onChange={setYaml}\n            mode=\"yaml\"\n            width=\"100%\"\n            height=\"100%\"\n          />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default JsonToYaml;\n","import { TabContext, TabList, TabPanel } from '@mui/lab';\nimport { Box, Tab } from '@mui/material';\nimport { useSize } from 'ahooks';\nimport { useEffect, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSearchParams } from 'react-router-dom';\n\nimport * as React from 'react';\nimport JSON from './JsonEditor';\nimport JsonToExcel from './JsonToExcel';\nimport JsonToYaml from './JsonToYaml';\n\nconst Json = () => {\n  const tabWrapperRef = useRef(null);\n  const [currentTab, setCurrentTab] = useState<string>('json-editor');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const { t } = useTranslation();\n  const tabWrapperSize = useSize(tabWrapperRef);\n\n  const setTabSearchParam = (name: string) => {\n    searchParams.set('tab', name);\n    setSearchParams(searchParams);\n  };\n\n  useEffect(() => {\n    let tab = searchParams.get('tab');\n    if (!tab) {\n      searchParams.set('tab', 'json-editor');\n      setSearchParams(searchParams);\n    } else {\n      setCurrentTab(tab);\n    }\n  }, [searchParams, setSearchParams]);\n\n  const handleChange = (_event: React.SyntheticEvent, value: string) => {\n    setCurrentTab(value || 'json-editor');\n    setTabSearchParam(value || 'json-editor');\n  };\n\n  return (\n    <TabContext value={currentTab}>\n      <Box ref={tabWrapperRef}>\n        <TabList onChange={handleChange}>\n          <Tab value=\"json-editor\" label={t('JSON Editor')} />\n          <Tab value=\"json-to-yaml\" label={t('JSON to YAML')} />\n          <Tab value=\"json-to-excel\" label={t('JSON to Excel')} disabled />\n        </TabList>\n      </Box>\n\n      <TabPanel\n        value=\"json-editor\"\n        sx={{ height: `calc(100% - ${tabWrapperSize?.height || 48}px)`, padding: 0, paddingTop: '5px' }}\n      >\n        <JSON />\n      </TabPanel>\n\n      <TabPanel value=\"json-to-yaml\" sx={{ height: `calc(100% - ${tabWrapperSize?.height || 48}px)`, padding: 0 }}>\n        <JsonToYaml />\n      </TabPanel>\n\n      <TabPanel\n        value=\"json-to-excel\"\n        sx={{ height: `calc(100% - ${tabWrapperSize?.height || 48}px - 2px)`, padding: 0 }}\n      >\n        <JsonToExcel />\n      </TabPanel>\n    </TabContext>\n  );\n};\n\nexport default Json;\n","import prettierBabelPlugin from 'prettier/parser-babel';\nimport parserYaml from 'prettier/parser-yaml';\nimport prettier from 'prettier/standalone';\n\nexport type parser = 'json' | 'json5' | 'yaml';\nexport const format = (value: string, parser: parser) => {\n  try {\n    return prettier.format(value, {\n      parser,\n      plugins: [prettierBabelPlugin, parserYaml],\n    });\n  } catch (e) {\n    console.error(e);\n  }\n  return value;\n};\n"],"names":["props","containerRef","useRef","editorRef","useEffect","options","target","current","JSONEditor","destroy","undefined","updateProps","parser","LosslessJSON","Box","ref","height","useLocalStorageState","defaultValue","mode","content","text","jsonStorage","setJsonStorage","Mode","onChange","oldValue","onChangeMode","useState","json","setJson","data","setData","useWorker","showLineNumbers","tabSize","wrap","fontSize","jsonOptions","result","JSON5","console","log","Array","isArray","columns","forEach","item","Object","keys","key","push","value","readOnly","_","a","b","rows","row","map","column","e","SyntaxError","error","message","sx","width","theme","placeholder","setOptions","mt","valueRenderer","cel","yaml","setYaml","yamlOptions","Button","onClick","format","YAML","Grid","container","xs","md","tabWrapperRef","currentTab","setCurrentTab","useSearchParams","searchParams","setSearchParams","t","useTranslation","tabWrapperSize","useSize","tab","get","set","TabContext","TabList","_event","name","Tab","label","disabled","TabPanel","padding","paddingTop","prettier","plugins","prettierBabelPlugin","parserYaml"],"sourceRoot":""}