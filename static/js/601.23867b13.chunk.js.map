{"version":3,"file":"static/js/601.23867b13.chunk.js","mappings":"6OAUe,SAASA,EAAT,GAA8D,IAA9BC,EAA6B,EAA7BA,QACvCC,GADoE,EAApBC,WAC1CC,EAAAA,EAAAA,QAA0B,OACtC,GAAwBC,EAAAA,EAAAA,WAAkB,GAA1C,eAAOC,EAAP,KAAaC,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,GAAIN,EAAIO,QAAS,CACf,IAAMC,EAAY,IAAIC,IAAJ,CAAgBT,EAAIO,SACtCC,EAAUE,GAAG,WAAW,SAACC,GACvBN,GAAQ,EACT,IACDG,EAAUE,GAAG,SAAS,SAACC,GACrBC,QAAQC,MAAMF,EACf,GACF,CACF,GAAE,KAGD,iCACE,SAAC,IAAD,CAAgBG,SAAS,MAAzB,UACE,SAAC,IAAD,CAAYC,IAAKf,EAAK,sBAAqBD,EAAS,aAAW,eAA/D,UACE,SAAC,IAAD,SAIJ,SAAC,IAAD,CAAUK,KAAMA,EAAMY,QAAS,kBAAMX,GAAQ,EAAd,EAAsBY,iBAAkB,IAAMC,QAAQ,+BAG1F,C,mMChCc,SAASC,IACtB,OAA0BhB,EAAAA,EAAAA,UAAS,IAAnC,eAAOiB,EAAP,KAAcC,EAAd,KACA,GAA4BlB,EAAAA,EAAAA,UAAS,IAArC,eAAOmB,EAAP,KAAeC,EAAf,KASA,OACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAKC,GAAI,CAAEC,GAAI,GAAf,UACE,SAAC,IAAD,CACEC,MAAM,eACNC,MAAOP,EACPQ,SAAU,SAACC,GACTR,EAASQ,EAAMP,OAAOK,MACvB,EACDG,WAAS,EACTC,WAAS,EACTC,QAAS,EACTC,QAAS,QAGb,SAAC,IAAD,CAAKT,GAAI,CAAEC,GAAI,GAAf,UACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAQS,QAzBD,WACb,IAAMC,EAAMC,EAAAA,IAAAA,OAAAA,UAAqBA,EAAAA,IAAAA,KAAAA,MAAehB,IAChDG,EAAUY,EACX,EAsBO,2BACA,SAAC,IAAD,CAAQD,QAtBD,WACb,IAAMC,EAAMC,EAAAA,IAAAA,KAAAA,UAAmBA,EAAAA,IAAAA,OAAAA,MAAiBhB,IAChDG,EAAUY,EACX,EAmBO,gCAGJ,SAAC,IAAD,CAAKX,GAAI,CAAEC,GAAI,GAAf,UACE,SAAC,IAAD,CACEC,MAAM,eACNC,MAAOL,EACPQ,WAAS,EACTC,WAAS,EACTC,QAAS,EACTC,QAAS,GACTI,WAAY,CACVC,cAAc,SAAC,IAAD,CAAsBvC,QAASuB,WAMxD,C","sources":["components/ContentCopyAdornment.tsx","pages/Base64.tsx"],"sourcesContent":["import { ContentCopy } from '@mui/icons-material';\nimport { IconButton, InputAdornment, Snackbar } from '@mui/material';\nimport ClipboardJS from 'clipboard';\nimport { useEffect, useRef, useState } from 'react';\n\ninterface Props {\n  content?: string | undefined;\n  onSuccess?: Function | undefined;\n}\n\nexport default function ContentCopyAdornment({ content, onSuccess }: Props) {\n  const btn = useRef<HTMLButtonElement>(null);\n  const [open, setOpen] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (btn.current) {\n      const clipboard = new ClipboardJS(btn.current);\n      clipboard.on('success', (e) => {\n        setOpen(true);\n      });\n      clipboard.on('error', (e) => {\n        console.error(e);\n      });\n    }\n  }, []);\n\n  return (\n    <>\n      <InputAdornment position=\"end\">\n        <IconButton ref={btn} data-clipboard-text={content} aria-label=\"Copy content\">\n          <ContentCopy />\n        </IconButton>\n      </InputAdornment>\n\n      <Snackbar open={open} onClose={() => setOpen(false)} autoHideDuration={3000} message=\"复制成功\" />\n    </>\n  );\n}\n","import { Box, Button, ButtonGroup, Container, TextField } from '@mui/material';\nimport { enc } from 'crypto-js';\nimport { useState } from 'react';\nimport ContentCopyAdornment from '../components/ContentCopyAdornment';\n\nexport default function Base64() {\n  const [plain, setPlain] = useState('');\n  const [target, setTarget] = useState('');\n  const encode = () => {\n    const str = enc.Base64.stringify(enc.Utf8.parse(plain));\n    setTarget(str);\n  };\n  const decode = () => {\n    const str = enc.Utf8.stringify(enc.Base64.parse(plain));\n    setTarget(str);\n  };\n  return (\n    <Container>\n      <Box sx={{ mt: 2 }}>\n        <TextField\n          label=\"文本\"\n          value={plain}\n          onChange={(event) => {\n            setPlain(event.target.value);\n          }}\n          fullWidth\n          multiline\n          minRows={5}\n          maxRows={10}\n        />\n      </Box>\n      <Box sx={{ mt: 2 }}>\n        <ButtonGroup>\n          <Button onClick={encode}>编码</Button>\n          <Button onClick={decode}>解码</Button>\n        </ButtonGroup>\n      </Box>\n      <Box sx={{ mt: 2 }}>\n        <TextField\n          label=\"结果\"\n          value={target}\n          fullWidth\n          multiline\n          minRows={5}\n          maxRows={10}\n          InputProps={{\n            endAdornment: <ContentCopyAdornment content={target} />,\n          }}\n        />\n      </Box>\n    </Container>\n  );\n}\n"],"names":["ContentCopyAdornment","content","btn","onSuccess","useRef","useState","open","setOpen","useEffect","current","clipboard","ClipboardJS","on","e","console","error","position","ref","onClose","autoHideDuration","message","Base64","plain","setPlain","target","setTarget","sx","mt","label","value","onChange","event","fullWidth","multiline","minRows","maxRows","onClick","str","enc","InputProps","endAdornment"],"sourceRoot":""}