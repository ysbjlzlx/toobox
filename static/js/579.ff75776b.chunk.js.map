{"version":3,"file":"static/js/579.ff75776b.chunk.js","mappings":"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","sources":["pages/Placeholder.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from 'react';\nimport {\n  Box,\n  Container,\n  FormControl,\n  Grid,\n  ImageList,\n  ImageListItem,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n} from '@mui/material';\nimport { useForm, Controller } from 'react-hook-form';\n\ntype PlaceholderConfig = {\n  width: number;\n  height: number;\n  suffix: string;\n  bgColor: null | string;\n  textColor: null | string;\n  text: null | string;\n};\n\nconst defaultValues = {\n  width: 150,\n  height: 150,\n  suffix: '.png',\n  bgColor: '#cccccc',\n  textColor: '#969696',\n  text: '',\n};\n\nconst suffixOptions = [\n  { label: '.png', value: '.png' },\n  { label: '.jpg', value: '.jpg' },\n  { label: '.gif', value: '.gif' },\n];\n\nconst Placeholder: FC = () => {\n  const [placeholderConfig, setPlaceholderConfig] = useState<PlaceholderConfig>(defaultValues);\n  const [imgList, setImgList] = useState<Array<string>>([]);\n  const { register, handleSubmit, control } = useForm({\n    defaultValues: defaultValues,\n  });\n\n  useEffect(() => {\n    const v = viaPlaceholder(placeholderConfig);\n    const d = dummyImage(placeholderConfig);\n    setImgList([v, d]);\n  }, [placeholderConfig]);\n\n  const viaPlaceholder = (config: PlaceholderConfig) => {\n    let host = 'https://via.placeholder.com';\n    host = host + '/' + config.width;\n    if (config.height) {\n      host = host + 'x' + config.height;\n    }\n    host = host + '/' + config.bgColor?.substring(1);\n    host = host + '/' + config.textColor?.substring(1);\n    if (config.text && '' !== config.text) {\n      host = host + '?text=' + encodeURIComponent(config.text);\n    }\n    host = host + config.suffix;\n    return host;\n  };\n  const dummyImage = (config: PlaceholderConfig) => {\n    let host = 'https://dummyimage.com';\n    host = host + '/' + config.width;\n    if (config.height) {\n      host = host + 'x' + config.height;\n    }\n    host = host + '/' + config.bgColor?.substring(1);\n    host = host + '/' + config.textColor?.substring(1);\n    if (config.text && '' !== config.text) {\n      host = host + '?text=' + encodeURIComponent(config.text);\n    }\n    return host + config.suffix;\n  };\n  return (\n    <Container sx={{ mt: 2 }}>\n      <form onChange={handleSubmit(setPlaceholderConfig)}>\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <TextField type={'number'} label={'宽度'} fullWidth {...register('width')} />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField type={'number'} label={'高度'} fullWidth {...register('height')} />\n          </Grid>\n          <Grid item xs={4}>\n            <Controller\n              name={'suffix'}\n              control={control}\n              render={({ field }) => {\n                return (\n                  <FormControl fullWidth>\n                    <InputLabel>后缀名</InputLabel>\n                    <Select\n                      {...field}\n                      label={'后缀名'}\n                      onChange={(event) => {\n                        setPlaceholderConfig({ ...placeholderConfig, suffix: event.target.value });\n                      }}\n                    >\n                      {suffixOptions.map((item) => {\n                        return (\n                          <MenuItem key={item.label} value={item.value}>\n                            {item.label}\n                          </MenuItem>\n                        );\n                      })}\n                    </Select>\n                  </FormControl>\n                );\n              }}\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={2} sx={{ mt: 1 }}>\n          <Grid item xs={4}>\n            <TextField label={'背景颜色'} fullWidth {...register('bgColor')} disabled />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField label={'文本颜色'} fullWidth {...register('textColor')} disabled />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField label={'文本'} fullWidth {...register('text')} />\n          </Grid>\n        </Grid>\n      </form>\n\n      <Box sx={{ mt: 2 }}>\n        <ImageList>\n          {imgList.map((item) => (\n            <ImageListItem key={item}>\n              <img\n                style={{\n                  width: `${placeholderConfig.width}px`,\n                  height: `${placeholderConfig.height}px`,\n                }}\n                alt={placeholderConfig.text || 'placeholder'}\n                src={item}\n                loading=\"lazy\"\n              />\n            </ImageListItem>\n          ))}\n        </ImageList>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Placeholder;\n"],"names":["defaultValues","width","height","suffix","bgColor","textColor","text","suffixOptions","label","value","useState","placeholderConfig","setPlaceholderConfig","imgList","setImgList","useForm","register","handleSubmit","control","useEffect","v","viaPlaceholder","d","dummyImage","config","host","substring","encodeURIComponent","sx","mt","onChange","container","spacing","item","xs","type","fullWidth","name","render","field","event","target","map","disabled","style","alt","src","loading"],"sourceRoot":""}