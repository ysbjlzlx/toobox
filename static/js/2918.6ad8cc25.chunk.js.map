{"version":3,"file":"static/js/2918.6ad8cc25.chunk.js","mappings":"2QAmFA,UAjEoB,WAClB,IAAAA,GAAwBC,EAAAA,EAAAA,UAAiB,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAwBL,EAAAA,EAAAA,UAA0B,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA9CE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAsBT,EAAAA,EAAAA,UAAqB,CACzCU,WAAW,EACXC,iBAAiB,EACjBC,QAAS,EACTC,MAAM,EACNC,SAAU,KALLC,GAMLb,EAAAA,EAAAA,GAAAO,EAAA,GANgB,GAyClB,OAlCAO,EAAAA,EAAAA,YAAU,WACR,IACE,IAAMC,EAASC,IAAAA,MAAYf,GAE3B,GADAgB,QAAQC,IAAIH,GACRI,MAAMC,QAAQL,GAAS,CACzB,IAAIM,EAAiB,GACrBN,EAAOO,SAAQ,SAACC,GACDC,OAAOC,KAAKF,GACpBD,SAAQ,SAACI,GACZL,EAAQM,KAAK,CAAEC,MAAOF,EAAKG,UAAU,GACvC,GACF,IACAR,EAAUS,IAAAA,SAAWT,GAAS,SAACU,EAAGC,GAChC,OAAOD,EAAEH,QAAUI,EAAEJ,KACvB,IAEA,IAAMK,EAAc,GACpBlB,EAAOO,SAAQ,SAACC,GACd,IAAMW,EAAMb,EAAQc,KAAI,SAACC,GAEvB,MAAO,CAAER,MADKL,EAAKa,EAAOR,QAAU,KACpBC,UAAU,EAC5B,IACAI,EAAKN,KAAKO,EACZ,IAEA5B,EAAQ,CAACe,GAAOgB,OAAKJ,GACvB,CACF,CAAE,MAAOK,GACHA,aAAaC,aACftB,QAAQuB,MAAMF,EAAEG,QAEpB,CACF,GAAG,CAACxC,KAGFyC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAC,SAAA,EACFC,EAAAA,EAAAA,KAACF,EAAAA,EAAG,CAACG,GAAI,CAAEC,MAAO,OAAQC,OAAQ,SAAUJ,UAC1CC,EAAAA,EAAAA,KAACI,EAAAA,GAAS,CACRC,MAAM,WACNC,YAAY,OACZC,WAAYvC,EACZe,MAAO3B,EACPoD,SAAUnD,EACVoD,KAAK,QACLP,MAAM,OACNC,OAAO,YAGXH,EAAAA,EAAAA,KAACF,EAAAA,EAAG,CAACG,GAAI,CAAES,GAAI,EAAGR,MAAO,QAASH,UAChCC,EAAAA,EAAAA,KAACW,EAAAA,GAAc,CAACnD,KAAMA,EAAMoD,cAAe,SAACC,GAAG,OAAKA,EAAI9B,KAAK,QAIrE,C","sources":["app/json/json-to-excel/JsonToExcel.tsx"],"sourcesContent":["import { Box } from '@mui/material';\nimport JSON5 from 'json5';\nimport _ from 'lodash';\nimport { useEffect, useState } from 'react';\nimport AceEditor from 'react-ace';\nimport { AceOptions } from 'react-ace/types';\nimport ReactDataSheet from 'react-datasheet';\n\nimport 'ace-builds/src-min-noconflict/ext-searchbox';\nimport 'ace-builds/src-min-noconflict/mode-json5';\nimport 'ace-builds/src-min-noconflict/mode-yaml';\nimport 'ace-builds/src-min-noconflict/theme-textmate';\nimport 'react-datasheet/lib/react-datasheet.css';\n\nexport interface GridElement extends ReactDataSheet.Cell<GridElement, number | string | null> {\n  value: number | string | null;\n}\n\nconst JsonToExcel = () => {\n  const [json, setJson] = useState<string>('{}');\n  const [data, setData] = useState<GridElement[][]>([]);\n  const [jsonOptions] = useState<AceOptions>({\n    useWorker: false,\n    showLineNumbers: true,\n    tabSize: 2,\n    wrap: true,\n    fontSize: 14,\n  });\n  useEffect(() => {\n    try {\n      const result = JSON5.parse(json);\n      console.log(result);\n      if (Array.isArray(result)) {\n        let columns: any[] = [];\n        result.forEach((item) => {\n          const keys = Object.keys(item);\n          keys.forEach((key) => {\n            columns.push({ value: key, readOnly: true });\n          });\n        });\n        columns = _.uniqWith(columns, (a, b) => {\n          return a.value === b.value;\n        });\n\n        const rows: any[] = [];\n        result.forEach((item) => {\n          const row = columns.map((column) => {\n            const value = item[column.value] || null;\n            return { value, readOnly: true };\n          });\n          rows.push(row);\n        });\n        // @ts-ignore\n        setData([columns, ...rows]);\n      }\n    } catch (e) {\n      if (e instanceof SyntaxError) {\n        console.error(e.message);\n      }\n    }\n  }, [json]);\n\n  return (\n    <Box>\n      <Box sx={{ width: '100%', height: '300px' }}>\n        <AceEditor\n          theme=\"textmate\"\n          placeholder=\"JSON\"\n          setOptions={jsonOptions}\n          value={json}\n          onChange={setJson}\n          mode=\"json5\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </Box>\n      <Box sx={{ mt: 3, width: '100%' }}>\n        <ReactDataSheet data={data} valueRenderer={(cel) => cel.value} />\n      </Box>\n    </Box>\n  );\n};\n\nexport default JsonToExcel;\n"],"names":["_useState","useState","_useState2","_slicedToArray","json","setJson","_useState3","_useState4","data","setData","_useState5","useWorker","showLineNumbers","tabSize","wrap","fontSize","jsonOptions","useEffect","result","JSON5","console","log","Array","isArray","columns","forEach","item","Object","keys","key","push","value","readOnly","_","a","b","rows","row","map","column","concat","e","SyntaxError","error","message","_jsxs","Box","children","_jsx","sx","width","height","AceEditor","theme","placeholder","setOptions","onChange","mode","mt","ReactDataSheet","valueRenderer","cel"],"sourceRoot":""}