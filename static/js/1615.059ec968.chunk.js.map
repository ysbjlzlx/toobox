{"version":3,"file":"static/js/1615.059ec968.chunk.js","mappings":"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","sources":["stores/JsonTabStore.ts","components/VanillaJSONEditor.tsx","pages/json/JsonEditor.tsx","pages/json/Json.tsx"],"sourcesContent":["import _ from 'lodash';\nimport { create } from 'zustand';\nimport { createJSONStorage, persist } from 'zustand/middleware';\n\ninterface JsonTabStore {\n  jsonTabs: string[];\n  activeKey: string;\n  addJsonTab: (key: string) => void;\n  removeJsonTab: (key: string) => void;\n  setActiveKey: (key: string) => void;\n}\n\nconst useJsonTabStore = create<JsonTabStore>()(\n  persist(\n    (set, get) => ({\n      jsonTabs: ['0'],\n      activeKey: '0',\n\n      addJsonTab: (key: string) =>\n        set(() => {\n          return { jsonTabs: _.concat(get().jsonTabs, key) };\n        }),\n      removeJsonTab: (key: string) =>\n        set(() => {\n          return { jsonTabs: _.without(get().jsonTabs, key) };\n        }),\n      setActiveKey: (key: string) =>\n        set(() => {\n          return { activeKey: key };\n        }),\n    }),\n    { name: 'json-tab-store', storage: createJSONStorage(() => localStorage) },\n  ),\n);\n\nexport default useJsonTabStore;\n","import { Box } from '@mui/material';\nimport * as LosslessJSON from 'lossless-json';\nimport { useEffect, useRef } from 'react';\n\nimport { JSONEditor, JSONEditorPropsOptional } from 'vanilla-jsoneditor';\n\nconst VanillaJSONEditor = (props: JSONEditorPropsOptional) => {\n  const containerRef = useRef<HTMLDivElement>();\n  const editorRef = useRef<JSONEditor>();\n\n  useEffect(() => {\n    const options = {\n      target: containerRef.current,\n      props: {},\n    };\n    // @ts-ignore\n    editorRef.current = new JSONEditor(options);\n\n    return () => {\n      // destroy editor\n      if (editorRef.current) {\n        editorRef.current.destroy();\n        editorRef.current = undefined;\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (editorRef.current) {\n      // @ts-ignore\n      editorRef.current?.updateProps({ ...props, parser: LosslessJSON });\n    }\n  }, [props]);\n\n  return <Box ref={containerRef} height=\"100%\" />;\n};\n\nexport default VanillaJSONEditor;\n","import { useLocalStorageState } from 'ahooks';\nimport { FC } from 'react';\nimport { Content, Mode } from 'vanilla-jsoneditor';\n\nimport VanillaJSONEditor from '../../components/VanillaJSONEditor';\n\ninterface Props {\n  idx?: string;\n}\n\nconst JSONBeta: FC<Props> = (props) => {\n  const defaultValue = {\n    mode: 'text',\n    content: {\n      text: '',\n    },\n  };\n  const idx = props?.idx || '0';\n  const [jsonStorage, setJsonStorage] = useLocalStorageState<any>(`json-${idx}`, { defaultValue });\n\n  const resolveMode = (): Mode | undefined => {\n    if (jsonStorage === undefined || jsonStorage === null) {\n      return Mode.text;\n    }\n    return jsonStorage.mode as Mode;\n  };\n\n  const onChange = (content: Content) => {\n    setJsonStorage((oldValue: any) => {\n      return { ...oldValue, content: content };\n    });\n  };\n\n  const onChangMode = (mode: Mode) => {\n    setJsonStorage((oldValue: any) => {\n      return { ...oldValue, mode: mode };\n    });\n  };\n\n  return (\n    <VanillaJSONEditor\n      mode={resolveMode()}\n      content={jsonStorage.content}\n      onChange={onChange}\n      onChangeMode={onChangMode}\n    />\n  );\n};\n\nexport default JSONBeta;\n","import { Tabs } from 'antd';\nimport _ from 'lodash';\nimport { Tab } from 'rc-tabs/lib/interface';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\n\nimport useJsonTabStore from '../../stores/JsonTabStore';\nimport JsonEditor from './JsonEditor';\n\ntype TargetKey = React.MouseEvent | React.KeyboardEvent | string;\nconst Json = () => {\n  const { jsonTabs, activeKey, addJsonTab, removeJsonTab, setActiveKey } = useJsonTabStore();\n  const [items, setItems] = useState<Tab[]>([]);\n\n  useEffect(() => {\n    const item = jsonTabs.map((idx, i) => {\n      return {\n        key: idx,\n        label: 'JSON Editor - ' + idx,\n        closable: true,\n        children: <JsonEditor idx={idx} />,\n        style: {\n          height: `calc(100vh - 56px)`,\n        },\n      };\n    });\n    if (_.indexOf(jsonTabs, activeKey) === -1) {\n      const lastItem = _.last(item);\n      setActiveKey(lastItem?.key || '0');\n    }\n\n    setItems(item);\n  }, [jsonTabs, activeKey, setActiveKey]);\n\n  const onChange = (activeKey: string) => {\n    setActiveKey(activeKey);\n  };\n  const onEdit = (targetKey: React.MouseEvent | React.KeyboardEvent | string, action: 'add' | 'remove') => {\n    if (action === 'add') {\n      add();\n    } else {\n      remove(targetKey);\n    }\n  };\n\n  const add = () => {\n    let newActiveKey = '0';\n    if (jsonTabs && jsonTabs.length > 0) {\n      const keys = jsonTabs.map((i) => {\n        return Number(i);\n      });\n      const maxKey = Math.max(...keys);\n\n      newActiveKey = `${maxKey + 1}`;\n    }\n    addJsonTab(newActiveKey);\n    setActiveKey(newActiveKey);\n  };\n\n  const remove = (targetKey: TargetKey) => {\n    removeJsonTab(String(targetKey));\n    localStorage.removeItem(`json-${targetKey}`);\n    if (jsonTabs && jsonTabs.length <= 1) {\n      addJsonTab('0');\n    }\n  };\n\n  return <Tabs type=\"editable-card\" onChange={onChange} activeKey={activeKey} onEdit={onEdit} items={items} />;\n};\n\nexport default Json;\n"],"names":["create","persist","set","get","jsonTabs","activeKey","addJsonTab","key","_","removeJsonTab","setActiveKey","name","storage","createJSONStorage","localStorage","props","containerRef","useRef","editorRef","useEffect","options","target","current","JSONEditor","destroy","undefined","_editorRef$current","updateProps","_objectSpread","parser","LosslessJSON","_jsx","Box","ref","height","idx","_useLocalStorageState","useLocalStorageState","concat","defaultValue","mode","content","text","_useLocalStorageState2","_slicedToArray","jsonStorage","setJsonStorage","VanillaJSONEditor","Mode","onChange","oldValue","onChangeMode","_useJsonTabStore","useJsonTabStore","_useState","useState","_useState2","items","setItems","item","map","i","label","closable","children","JsonEditor","style","lastItem","add","newActiveKey","length","keys","Number","maxKey","Math","max","apply","_toConsumableArray","remove","targetKey","String","removeItem","Tabs","type","onEdit","action"],"sourceRoot":""}