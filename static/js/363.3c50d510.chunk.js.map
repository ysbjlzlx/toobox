{"version":3,"file":"static/js/363.3c50d510.chunk.js","mappings":"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","sources":["components/ContentCopyAdornment.tsx","pages/Hash.tsx","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import { ContentCopy } from '@mui/icons-material';\nimport { IconButton, InputAdornment, Snackbar } from '@mui/material';\nimport { useState } from 'react';\n// @ts-ignore\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\ninterface Props {\n  content?: string | undefined;\n  onCopy?: Function | undefined;\n}\n\nexport default function ContentCopyAdornment({ content, onCopy }: Props) {\n  const [open, setOpen] = useState<boolean>(false);\n  const handleOnCopy = (text: string, result: DataTransfer) => {\n    setOpen(true);\n    if (onCopy) {\n      onCopy(text, result);\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(!open);\n  };\n  return (\n    <>\n      <CopyToClipboard text={content} onCopy={handleOnCopy}>\n        <InputAdornment position=\"end\">\n          <IconButton aria-label=\"Copy content\">\n            <ContentCopy />\n          </IconButton>\n        </InputAdornment>\n      </CopyToClipboard>\n\n      <Snackbar open={open} onClose={handleClose} autoHideDuration={3000} message=\"复制成功\" />\n    </>\n  );\n}\n","import { Container, TextField } from '@mui/material';\nimport { MD5, SHA1, SHA256, SHA512 } from 'crypto-js';\nimport { ReactElement, useEffect, useState } from 'react';\nimport ContentCopyAdornment from '../components/ContentCopyAdornment';\n\ninterface HashResult {\n  md5?: string;\n  sha1?: string;\n  sha256?: string;\n  sha512?: string;\n}\n\nconst Hash = (): ReactElement => {\n  const defaultHashResult: HashResult = {\n    md5: '',\n    sha1: '',\n    sha256: '',\n    sha512: '',\n  };\n\n  const [plainText, setPlainText] = useState<string>('');\n  const [hashResult, setHashResult] = useState<HashResult | null>(defaultHashResult);\n  useEffect(() => {\n    if (!plainText || plainText === '') {\n      setHashResult((defaultHashResult) => defaultHashResult);\n      return;\n    }\n    const md5 = MD5(plainText).toString();\n    const sha1 = SHA1(plainText).toString();\n    const sha256 = SHA256(plainText).toString();\n    const sha512 = SHA512(plainText).toString();\n    setHashResult((hashResult) => {\n      return { ...hashResult, md5, sha1, sha256, sha512 };\n    });\n  }, [plainText]);\n  return (\n    <Container>\n      <TextField\n        label=\"原文\"\n        value={plainText}\n        onChange={(event) => {\n          setPlainText(event.target.value);\n        }}\n        helperText={plainText.length || ''}\n        fullWidth\n        margin=\"normal\"\n      />\n      <TextField\n        label=\"MD5\"\n        value={hashResult?.md5}\n        fullWidth\n        margin=\"normal\"\n        InputProps={{\n          endAdornment: <ContentCopyAdornment content={hashResult?.md5} />,\n        }}\n        helperText={hashResult?.md5?.length || ''}\n      />\n      <TextField\n        label=\"SHA1\"\n        value={hashResult?.sha1}\n        fullWidth\n        margin=\"normal\"\n        InputProps={{\n          endAdornment: <ContentCopyAdornment content={hashResult?.sha1} />,\n        }}\n        helperText={hashResult?.sha1?.length || ''}\n      />\n      <TextField\n        label=\"SHA256\"\n        value={hashResult?.sha256}\n        fullWidth\n        margin=\"normal\"\n        InputProps={{\n          endAdornment: <ContentCopyAdornment content={hashResult?.sha256} />,\n        }}\n        helperText={hashResult?.sha256?.length || ''}\n      />\n      <TextField\n        label=\"SHA512\"\n        value={hashResult?.sha512}\n        fullWidth\n        margin=\"normal\"\n        InputProps={{\n          endAdornment: <ContentCopyAdornment content={hashResult?.sha512} />,\n        }}\n        helperText={hashResult?.sha512?.length || ''}\n      />\n    </Container>\n  );\n};\n\nexport default Hash;\n","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["ContentCopyAdornment","content","onCopy","useState","open","setOpen","CopyToClipboard","text","result","position","onClose","autoHideDuration","message","plainText","setPlainText","md5","sha1","sha256","sha512","hashResult","setHashResult","useEffect","MD5","toString","SHA1","SHA256","SHA512","defaultHashResult","label","value","onChange","event","target","helperText","length","fullWidth","margin","InputProps","endAdornment","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","i","arguments","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty"],"sourceRoot":""}