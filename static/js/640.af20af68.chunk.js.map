{"version":3,"file":"static/js/640.af20af68.chunk.js","mappings":"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","sources":["components/VanillaJSONEditor.tsx","pages/json/JsonEditor.tsx","pages/json/JsonToYaml.tsx","pages/json/index.new.tsx"],"sourcesContent":["import { Box } from '@mui/material';\nimport { useEffect, useRef } from 'react';\n\nimport { JSONEditor, JSONEditorPropsOptional } from 'vanilla-jsoneditor';\n\nconst VanillaJSONEditor = (props: JSONEditorPropsOptional) => {\n  const containerRef = useRef<HTMLDivElement>();\n  const editorRef = useRef<JSONEditor>();\n\n  useEffect(() => {\n    const options = {\n      target: containerRef.current,\n      props: {},\n    };\n    // @ts-ignore\n    editorRef.current = new JSONEditor(options);\n\n    return () => {\n      // destroy editor\n      if (editorRef.current) {\n        editorRef.current.destroy();\n        editorRef.current = undefined;\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (editorRef.current) {\n      editorRef.current?.updateProps(props);\n    }\n  }, [props]);\n\n  return <Box ref={containerRef} height=\"100%\" />;\n};\n\nexport default VanillaJSONEditor;\n","import { useLocalStorageState } from 'ahooks';\nimport { FC } from 'react';\n\nimport { Content, Mode } from 'vanilla-jsoneditor';\nimport VanillaJSONEditor from '../../components/VanillaJSONEditor';\n\nconst JSONBeta: FC = () => {\n  const defaultValue = {\n    mode: 'text',\n    content: {\n      text: '',\n    },\n  };\n  const [jsonStorage, setJsonStorage] = useLocalStorageState<any>('json', { defaultValue });\n\n  const resolveMode = (): Mode | undefined => {\n    if (jsonStorage && jsonStorage.mode === 'text') {\n      return Mode.text;\n    }\n    if (jsonStorage && jsonStorage.mode === 'tree') {\n      return Mode.tree;\n    }\n    return Mode.text;\n  };\n\n  const onChange = (content: Content) => {\n    setJsonStorage((oldValue: any) => {\n      return { ...oldValue, content: content };\n    });\n  };\n\n  const onChangMode = (mode: Mode) => {\n    setJsonStorage((oldValue: any) => {\n      return { ...oldValue, mode: mode };\n    });\n  };\n\n  return (\n    <VanillaJSONEditor\n      mode={resolveMode()}\n      content={jsonStorage.content}\n      onChange={onChange}\n      onChangeMode={onChangMode}\n    />\n  );\n};\n\nexport default JSONBeta;\n","import { Box, Button, Grid } from '@mui/material';\nimport { FC, useState } from 'react';\n\nimport AceEditor from 'react-ace';\nimport { AceOptions } from 'react-ace/types';\n\nimport parserYaml from 'prettier/parser-yaml';\nimport prettier from 'prettier/standalone';\n\nimport YAML from 'yaml';\n\nimport 'ace-builds/src-min-noconflict/ext-searchbox';\nimport 'ace-builds/src-min-noconflict/mode-json';\nimport 'ace-builds/src-min-noconflict/mode-yaml';\nimport 'ace-builds/src-min-noconflict/theme-textmate';\n\nconst JsonToYaml: FC = () => {\n  const [json, setJson] = useState<string>('');\n  const [yaml, setYaml] = useState<string>('');\n  const [jsonOptions] = useState<AceOptions>({\n    useWorker: false,\n    showLineNumbers: true,\n    tabSize: 2,\n    wrap: true,\n    fontSize: 14,\n  });\n  const [yamlOptions] = useState<AceOptions>({\n    useWorker: false,\n    showLineNumbers: true,\n    tabSize: 2,\n    wrap: true,\n    fontSize: 14,\n  });\n\n  const json2yaml = (value: string): string => {\n    if (!value || value === '') {\n      return value;\n    }\n    try {\n      return prettier.format(YAML.stringify(JSON.parse(value)), {\n        parser: 'yaml',\n        plugins: [parserYaml],\n      });\n    } catch (e) {\n      if (e instanceof SyntaxError) {\n        console.warn(e);\n      } else {\n        console.warn(e);\n      }\n      return '';\n    }\n  };\n\n  const json2yamlBtnClick = () => {\n    setYaml(json2yaml(json));\n  };\n\n  return (\n    <Box sx={{ height: '100%' }}>\n      <Box>\n        <Button onClick={json2yamlBtnClick}>JSON =&gt; YAML</Button>\n      </Box>\n      <Grid container sx={{ height: 'calc(100% - 37px)' }}>\n        <Grid item xs={12} md={6} sx={{ height: '100%' }}>\n          <AceEditor\n            theme=\"textmate\"\n            placeholder=\"JSON\"\n            setOptions={jsonOptions}\n            value={json}\n            onChange={setJson}\n            mode=\"json\"\n            width=\"100%\"\n            height=\"100%\"\n          />\n        </Grid>\n        <Grid item xs={12} md={6} sx={{ height: '100%' }}>\n          <AceEditor\n            theme=\"textmate\"\n            placeholder=\"YAML\"\n            setOptions={yamlOptions}\n            value={yaml}\n            onChange={setYaml}\n            mode=\"yaml\"\n            width=\"100%\"\n            height=\"100%\"\n          />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default JsonToYaml;\n","import { Tabs, TabsValue } from '@mantine/core';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport JSON from './JsonEditor';\nimport JsonToYaml from './JsonToYaml';\n\nconst Json = () => {\n  const [currentTab, setCurrentTab] = useState<string>('json-editor');\n  const [tabWrapperHeight, setTabWrapperHeight] = useState<number>(48);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const tabWrapperRef = useCallback((node: HTMLDivElement) => {\n    if (node) {\n      setTabWrapperHeight(node.clientHeight);\n    }\n  }, []);\n\n  const setTabSearchParam = (name: string) => {\n    searchParams.set('tab', name);\n    setSearchParams(searchParams);\n  };\n\n  useEffect(() => {\n    let tab = searchParams.get('tab');\n    if (!tab) {\n      searchParams.set('tab', 'json-editor');\n      setSearchParams(searchParams);\n    } else {\n      setCurrentTab(tab);\n    }\n  }, [searchParams, setSearchParams]);\n\n  const handleChange = (value: TabsValue) => {\n    setCurrentTab(value || 'json-editor');\n    setTabSearchParam(value || 'json-editor');\n  };\n\n  return (\n    <Tabs variant=\"outline\" radius=\"md\" value={currentTab} onTabChange={handleChange} sx={{ height: '100%' }}>\n      <Tabs.List ref={tabWrapperRef}>\n        <Tabs.Tab value=\"json-editor\"> Json Editor </Tabs.Tab>\n        <Tabs.Tab value=\"json-to-yaml\"> Json To Yaml </Tabs.Tab>\n      </Tabs.List>\n\n      <Tabs.Panel value=\"json-editor\" sx={{ height: `calc(100% - ${tabWrapperHeight}px - 6px)`, marginTop: 5 }}>\n        <JSON />\n      </Tabs.Panel>\n\n      <Tabs.Panel value=\"json-to-yaml\" sx={{ height: `calc(100% - ${tabWrapperHeight}px - 1px)` }}>\n        <JsonToYaml />\n      </Tabs.Panel>\n    </Tabs>\n  );\n};\n\nexport default Json;\n"],"names":["props","containerRef","useRef","editorRef","useEffect","options","target","current","JSONEditor","destroy","undefined","updateProps","Box","ref","height","useLocalStorageState","defaultValue","mode","content","text","jsonStorage","setJsonStorage","Mode","onChange","oldValue","onChangeMode","useState","json","setJson","yaml","setYaml","useWorker","showLineNumbers","tabSize","wrap","fontSize","jsonOptions","yamlOptions","sx","Button","onClick","value","prettier","YAML","JSON","parse","parser","plugins","parserYaml","e","SyntaxError","console","warn","json2yaml","Grid","container","item","xs","md","theme","placeholder","setOptions","width","currentTab","setCurrentTab","tabWrapperHeight","setTabWrapperHeight","useSearchParams","searchParams","setSearchParams","tabWrapperRef","useCallback","node","clientHeight","tab","get","set","Tabs","variant","radius","onTabChange","name","Tab","marginTop"],"sourceRoot":""}