{"version":3,"file":"static/js/595.bda7d7e1.chunk.js","mappings":"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","sources":["components/InputColorPicker.tsx","components/placeholder/util.ts","components/placeholder/DummyImage.tsx","components/placeholder/HrefLuImage.tsx","components/placeholder/PlaceholderImage.tsx","pages/PlaceholderImg.tsx"],"sourcesContent":["import { Box, Popover, TextField } from '@mui/material';\nimport { bindPopover, bindTrigger, usePopupState } from 'material-ui-popup-state/hooks';\nimport { GithubPicker, TwitterPicker } from 'react-color';\n\ninterface InputColorPickerProps {\n  value: string;\n  onChange: (val: string) => void;\n  label?: string;\n  fullWidth?: boolean;\n  picker: 'GithubPicker' | 'TwitterPicker';\n}\n\nconst InputColorPicker = ({ value, onChange, picker, ...otherProps }: InputColorPickerProps) => {\n  const popupState = usePopupState({\n    variant: 'popover',\n    popupId: 'demoPopover',\n  });\n\n  return (\n    <Box>\n      <TextField\n        value={value}\n        onChange={(event) => onChange(event.target.value)}\n        {...otherProps}\n        {...bindTrigger(popupState)}\n      />\n      <Popover {...bindPopover(popupState)} anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}>\n        {picker === 'GithubPicker' && (\n          <Box sx={{ mt: '6px' }}>\n            <GithubPicker color={value} onChangeComplete={(color) => onChange(color.hex)} />\n          </Box>\n        )}\n        {picker === 'TwitterPicker' && (\n          <Box sx={{ mt: '10px' }}>\n            <TwitterPicker color={value} onChangeComplete={(color) => onChange(color.hex)} />\n          </Box>\n        )}\n      </Popover>\n    </Box>\n  );\n};\nexport default InputColorPicker;\n","import { PlaceholderConfig } from './index';\n\nconst defaultConfig = (): PlaceholderConfig => {\n  return {\n    width: 150,\n    height: 150,\n    suffix: '.png',\n    bgColor: '#cccccc',\n    textColor: '#969696',\n    text: '',\n  };\n};\n\nconst resolveConfig = (input: PlaceholderConfig): PlaceholderConfig => {\n  const config: PlaceholderConfig = defaultConfig();\n  if (input.width && input.width > 0) {\n    config.width = input.width;\n  }\n  if (input.height && input.height > 0) {\n    config.height = input.height;\n  }\n  if (input.suffix) {\n    config.suffix = input.suffix;\n  }\n  if (input.bgColor) {\n    config.bgColor = input.bgColor;\n  }\n  if (input.textColor) {\n    config.textColor = input.textColor;\n  }\n  if (input.text && input.text !== '') {\n    config.text = input.text;\n  }\n  return config;\n};\n\nexport { defaultConfig, resolveConfig };\n","import Image from 'mui-image';\nimport { useEffect, useState } from 'react';\nimport { PlaceholderConfig } from './index';\nimport { defaultConfig, resolveConfig } from './util';\n\nconst DummyImage = (input: PlaceholderConfig) => {\n  const [imgUrl, setImgUrl] = useState<string>('');\n  const [config, setConfig] = useState<PlaceholderConfig>(defaultConfig());\n\n  useEffect(() => {\n    setConfig(resolveConfig(input));\n  }, [input]);\n\n  useEffect(() => {\n    const url =\n      `https://dummyimage.com/${config.width}x${config.height}` +\n      `/${config.bgColor?.substring(1)}/${config.textColor?.substring(1)}` +\n      `?text=${encodeURIComponent(config.text || 'img')}`;\n    setImgUrl(url);\n  }, [config]);\n\n  return (\n    <Image\n      src={imgUrl}\n      style={{ width: `${config.width}px`, height: `${config.height}px` }}\n      alt={config.text || 'placeholder img'}\n    />\n  );\n};\n\nexport default DummyImage;\n","import Image from 'mui-image';\nimport { useEffect, useState } from 'react';\nimport { PlaceholderConfig } from './index';\nimport { defaultConfig, resolveConfig } from './util';\n\nconst HrefLuImage = (input: PlaceholderConfig) => {\n  const [imgUrl, setImgUrl] = useState<string>('');\n  const [config, setConfig] = useState<PlaceholderConfig>(defaultConfig());\n\n  useEffect(() => {\n    setConfig(resolveConfig(input));\n  }, [input]);\n\n  useEffect(() => {\n    const url =\n      `https://iph.href.lu/${config.width}x${config.height}` +\n      `?bg=${config.bgColor?.substring(1)}` +\n      `&fg=${config.textColor?.substring(1)}` +\n      `&text=${encodeURIComponent(config.text || 'img')}`;\n    setImgUrl(url);\n  }, [config]);\n\n  return (\n    <Image\n      src={imgUrl}\n      style={{ width: `${config.width}px`, height: `${config.height}px` }}\n      alt={config.text || 'placeholder img'}\n    />\n  );\n};\n\nexport default HrefLuImage;\n","import Image from 'mui-image';\nimport { useEffect, useState } from 'react';\nimport { PlaceholderConfig } from './index';\nimport { defaultConfig, resolveConfig } from './util';\n\nconst PlaceholderImage = (input: PlaceholderConfig) => {\n  const [imgUrl, setImgUrl] = useState<string>('');\n  const [config, setConfig] = useState<PlaceholderConfig>(defaultConfig());\n\n  useEffect(() => {\n    setConfig(resolveConfig(input));\n  }, [input]);\n\n  useEffect(() => {\n    const url =\n      `https://via.placeholder.com/${config.width}x${config.height}` +\n      `/${config.bgColor?.substring(1)}/${config.textColor?.substring(1)}` +\n      `?text=${encodeURIComponent(config.text || 'img')}` +\n      config.suffix;\n    setImgUrl(url);\n  }, [config]);\n\n  return (\n    <Image\n      src={imgUrl}\n      style={{ width: `${config.width}px`, height: `${config.height}px` }}\n      alt={config.text || 'placeholder img'}\n    />\n  );\n};\n\nexport default PlaceholderImage;\n","import { Box, Container, FormControl, Grid, InputLabel, MenuItem, Select, Tab, Tabs, TextField } from '@mui/material';\nimport React, { FC, useState } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\n\nimport InputColorPicker from '../components/InputColorPicker';\nimport { PlaceholderConfig } from '../components/placeholder';\nimport DummyImage from '../components/placeholder/DummyImage';\nimport HrefLuImage from '../components/placeholder/HrefLuImage';\nimport PlaceholderImage from '../components/placeholder/PlaceholderImage';\n\nconst defaultValues = {\n  width: 320,\n  height: 320,\n  suffix: '.png',\n  bgColor: '#cccccc',\n  textColor: '#969696',\n  text: 'img',\n};\n\nconst suffixOptions = [\n  { label: '.png', value: '.png' },\n  { label: '.jpg', value: '.jpg' },\n  { label: '.gif', value: '.gif' },\n];\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\n    </div>\n  );\n}\n\nfunction a11yProps(index: number) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst PlaceholderImg: FC = () => {\n  const [provider, setProvider] = useState<number>(0);\n  const [placeholderConfig, setPlaceholderConfig] = useState<PlaceholderConfig>(defaultValues);\n  const { register, handleSubmit, control, getValues, setValue } = useForm({ defaultValues });\n\n  return (\n    <Container sx={{ mt: 2 }}>\n      <form onChange={handleSubmit(setPlaceholderConfig)}>\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <TextField type=\"number\" label=\"宽度\" fullWidth {...register('width')} />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField type=\"number\" label=\"高度\" fullWidth {...register('height')} />\n          </Grid>\n          <Grid item xs={4}>\n            <Controller\n              name=\"suffix\"\n              control={control}\n              render={({ field }) => {\n                return (\n                  <FormControl fullWidth>\n                    <InputLabel>后缀名</InputLabel>\n                    <Select\n                      {...field}\n                      label=\"后缀名\"\n                      onChange={(event) => {\n                        setPlaceholderConfig({ ...placeholderConfig, suffix: event.target.value });\n                      }}\n                    >\n                      {suffixOptions.map((item) => {\n                        return (\n                          <MenuItem key={item.label} value={item.value}>\n                            {item.label}\n                          </MenuItem>\n                        );\n                      })}\n                    </Select>\n                  </FormControl>\n                );\n              }}\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={2} sx={{ mt: 1 }}>\n          <Grid item xs={4}>\n            <InputColorPicker\n              value={getValues('bgColor')}\n              onChange={(val: string) => {\n                setValue('bgColor', val);\n                setPlaceholderConfig({ ...placeholderConfig, bgColor: val });\n              }}\n              label=\"背景颜色\"\n              picker=\"GithubPicker\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <InputColorPicker\n              value={getValues('textColor')}\n              onChange={(color: string) => {\n                setValue('textColor', color);\n                setPlaceholderConfig({ ...placeholderConfig, textColor: color });\n              }}\n              label=\"文字颜色\"\n              picker=\"TwitterPicker\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField label=\"文本\" fullWidth {...register('text')} />\n          </Grid>\n        </Grid>\n      </form>\n      <Box>\n        <Tabs value={provider} onChange={(e, value) => setProvider(value)} aria-label=\"basic tabs example\">\n          <Tab label=\"iph.href.lu\" {...a11yProps(0)} />\n          <Tab label=\"via.placeholder.com\" {...a11yProps(1)} />\n          <Tab label=\"dummyimage.com\" {...a11yProps(2)} />\n        </Tabs>\n        <TabPanel value={provider} index={0}>\n          <HrefLuImage {...placeholderConfig} />\n        </TabPanel>\n        <TabPanel value={provider} index={1}>\n          <PlaceholderImage {...placeholderConfig} />\n        </TabPanel>\n        <TabPanel value={provider} index={2}>\n          <DummyImage {...placeholderConfig} />\n        </TabPanel>\n      </Box>\n    </Container>\n  );\n};\n\nexport default PlaceholderImg;\n"],"names":["value","onChange","picker","otherProps","popupState","usePopupState","variant","popupId","Box","TextField","event","target","bindTrigger","Popover","bindPopover","anchorOrigin","vertical","horizontal","sx","mt","color","onChangeComplete","hex","resolveConfig","input","config","width","height","suffix","bgColor","textColor","text","useState","imgUrl","setImgUrl","setConfig","useEffect","url","substring","encodeURIComponent","src","style","alt","defaultValues","suffixOptions","label","TabPanel","props","children","index","other","role","hidden","id","p","a11yProps","provider","setProvider","placeholderConfig","setPlaceholderConfig","useForm","register","handleSubmit","control","getValues","setValue","Container","Grid","container","spacing","item","xs","type","fullWidth","name","render","field","FormControl","InputLabel","Select","map","MenuItem","val","Tabs","e","Tab"],"sourceRoot":""}