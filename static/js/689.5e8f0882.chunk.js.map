{"version":3,"file":"static/js/689.5e8f0882.chunk.js","mappings":"gPAWA,EADoB,CARW,CAC7BA,IAAK,cACLC,IAAK,SAACC,GAEJ,OADAC,QAAQC,IAAIF,IACL,CACT,I,WCJIG,EAAa,SAACC,GAGlB,IAFA,IAAIC,EAAQ,EACRC,EAAOF,EAAIE,QACPA,EAAKC,OAAOC,MAAM,CACxB,IACwB,EADpBC,GAAS,EAAM,UACLH,EAAKI,OAAK,IAAxB,2BAA0B,CAAC,IAAlBC,EAAC,QACJC,EAAO,KAAKC,KAAKF,GACjBC,IAASH,GACXJ,IAEFI,EAASG,CACX,CAAC,+BACH,CACA,MAAM,eAAN,OAAsBP,EACxB,EAEMS,EAAiB,SAACC,GACtB,IAAIC,EAAMC,SAASC,cAAc,OAEjC,OADAF,EAAIG,YAAchB,EAAWY,EAAKK,MAAMhB,KACjC,CACLY,IAAAA,EACAK,OAAM,SAACA,GACDA,EAAOC,aAAYN,EAAIG,YAAchB,EAAWkB,EAAOD,MAAMhB,KACnE,EAEJ,E,WCyBA,EAzCkB,WAChB,IAAMmB,GAAYC,EAAAA,EAAAA,UACZxB,GAASwB,EAAAA,EAAAA,UAoCf,OAnCAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAcC,EAAAA,GAAAA,MAClB,CACE,IAAK,CACHC,OAAQ,SAGZ,CAAEC,MAAM,IAGJT,EAAQU,EAAAA,GAAAA,OAAmB,CAC/BC,WAAY,CACVC,EAAAA,IACAC,EAAAA,EAAAA,MACAC,EAAAA,GACAR,EDCCS,EAAAA,GAAAA,GAAarB,GCCdsB,EAAAA,GAAAA,GAAUC,EAAAA,IACVD,EAAAA,GAAAA,GAAUE,MASd,OAJAtC,EAAOuC,QAAU,IAAIZ,EAAAA,GAAW,CAC9BP,MAAAA,EACAoB,OAAQjB,EAAUgB,UAEb,WACgB,IAAD,EAAhBvC,EAAOuC,UACK,QAAd,EAAAvC,EAAOuC,eAAO,OAAd,EAAgBE,UAChBzC,EAAOuC,aAAUG,EAErB,CACF,GAAG,KAEI,SAACC,EAAA,EAAG,CAACC,IAAKrB,EAAWsB,GAAI,CAAEjB,OAAQ,SAC5C,C","sources":["pages/code/extensions/KeyBinds.ts","pages/code/extensions/WordCounter.ts","pages/code/index.tsx"],"sourcesContent":["import { KeyBinding } from '@codemirror/view';\n\nconst formatJson: KeyBinding = {\n  key: 'Alt-Shift-f',\n  run: (editor) => {\n    console.log(editor);\n    return true;\n  },\n};\n\nconst keyBindings = [formatJson];\nexport default keyBindings;\n","import { Text } from '@codemirror/state';\nimport { EditorView, Panel, showPanel } from '@codemirror/view';\n\nconst countWords = (doc: Text) => {\n  let count = 0;\n  let iter = doc.iter();\n  while (!iter.next().done) {\n    let inWord = false;\n    for (let s of iter.value) {\n      let word = /\\w/.test(s);\n      if (word && !inWord) {\n        count++;\n      }\n      inWord = word;\n    }\n  }\n  return `Word count: ${count}`;\n};\n\nconst wordCountPanel = (view: EditorView): Panel => {\n  let dom = document.createElement('div');\n  dom.textContent = countWords(view.state.doc);\n  return {\n    dom,\n    update(update) {\n      if (update.docChanged) dom.textContent = countWords(update.state.doc);\n    },\n  };\n};\n\nconst wordCounter = () => {\n  return showPanel.of(wordCountPanel);\n};\n\nexport { wordCounter };\n","import { defaultKeymap } from '@codemirror/commands';\nimport { json } from '@codemirror/lang-json';\nimport { EditorState } from '@codemirror/state';\nimport { oneDarkTheme } from '@codemirror/theme-one-dark';\nimport { EditorView, keymap } from '@codemirror/view';\nimport { Box } from '@mui/material';\nimport { basicSetup } from 'codemirror';\nimport { FC, useEffect, useRef } from 'react';\n\nimport keyBinds from './extensions/KeyBinds';\nimport { wordCounter } from './extensions/WordCounter';\n\nconst Index: FC = () => {\n  const container = useRef<HTMLDivElement>();\n  const editor = useRef<EditorView>();\n  useEffect(() => {\n    const customTheme = EditorView.theme(\n      {\n        '&': {\n          height: '100%',\n        },\n      },\n      { dark: true },\n    );\n\n    const state = EditorState.create({\n      extensions: [\n        basicSetup,\n        json(),\n        oneDarkTheme,\n        customTheme,\n        wordCounter(),\n        keymap.of(defaultKeymap),\n        keymap.of(keyBinds),\n      ],\n    });\n\n    // eslint-disable-next-line no-new\n    editor.current = new EditorView({\n      state,\n      parent: container.current,\n    });\n    return () => {\n      if (editor.current) {\n        editor.current?.destroy();\n        editor.current = undefined;\n      }\n    };\n  }, []);\n\n  return <Box ref={container} sx={{ height: '100%' }} />;\n};\n\nexport default Index;\n"],"names":["key","run","editor","console","log","countWords","doc","count","iter","next","done","inWord","value","s","word","test","wordCountPanel","view","dom","document","createElement","textContent","state","update","docChanged","container","useRef","useEffect","customTheme","EditorView","height","dark","EditorState","extensions","basicSetup","json","oneDarkTheme","showPanel","keymap","defaultKeymap","keyBinds","current","parent","destroy","undefined","Box","ref","sx"],"sourceRoot":""}