{"version":3,"file":"static/js/6514.fb39e248.chunk.js","mappings":"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","sources":["components/ColorPickerAdornment.tsx","components/placeholder/util.ts","components/placeholder/DummyImage.tsx","components/placeholder/HrefLuImage.tsx","components/placeholder/PlaceholderImage.tsx","pages/PlaceholderImg.tsx"],"sourcesContent":["import PaletteIcon from '@mui/icons-material/Palette';\nimport { Box, IconButton, InputAdornment, Popover } from '@mui/material';\nimport { bindPopover, bindTrigger, usePopupState } from 'material-ui-popup-state/hooks';\nimport { FC } from 'react';\nimport { CompactPicker } from 'react-color';\n\ninterface Props {\n  value: string;\n  onChange: (val: string) => void;\n}\n\nconst ColorPickerAdornment: FC<Props> = ({ value, onChange }) => {\n  const popupState = usePopupState({\n    variant: 'popover',\n    popupId: 'demoPopover',\n  });\n  return (\n    <>\n      <InputAdornment position=\"end\">\n        <IconButton {...bindTrigger(popupState)}>\n          <PaletteIcon sx={{ color: value }} />\n        </IconButton>\n      </InputAdornment>\n      <Popover {...bindPopover(popupState)} anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}>\n        <Box>\n          <CompactPicker\n            color={value}\n            onChangeComplete={(color) => {\n              onChange(color.hex);\n            }}\n          />\n        </Box>\n      </Popover>\n    </>\n  );\n};\n\nexport default ColorPickerAdornment;\n","import { PlaceholderConfig } from './index';\n\nconst defaultConfig = (): PlaceholderConfig => {\n  return {\n    width: 150,\n    height: 150,\n    suffix: '.png',\n    bgColor: '#cccccc',\n    textColor: '#969696',\n    text: '',\n  };\n};\n\nconst resolveConfig = (input: PlaceholderConfig): PlaceholderConfig => {\n  const config: PlaceholderConfig = defaultConfig();\n  if (input.width && input.width > 0) {\n    config.width = input.width;\n  }\n  if (input.height && input.height > 0) {\n    config.height = input.height;\n  }\n  if (input.suffix) {\n    config.suffix = input.suffix;\n  }\n  if (input.bgColor) {\n    config.bgColor = input.bgColor;\n  }\n  if (input.textColor) {\n    config.textColor = input.textColor;\n  }\n  if (input.text && input.text !== '') {\n    config.text = input.text;\n  }\n  return config;\n};\n\nexport { defaultConfig, resolveConfig };\n","import Image from 'mui-image';\nimport { useEffect, useState } from 'react';\nimport { PlaceholderConfig } from './index';\nimport { defaultConfig, resolveConfig } from './util';\n\nconst DummyImage = (input: PlaceholderConfig) => {\n  const [imgUrl, setImgUrl] = useState<string>('');\n  const [config, setConfig] = useState<PlaceholderConfig>(defaultConfig());\n\n  useEffect(() => {\n    setConfig(resolveConfig(input));\n  }, [input]);\n\n  useEffect(() => {\n    const url =\n      `https://dummyimage.com/${config.width}x${config.height}` +\n      `/${config.bgColor?.substring(1)}/${config.textColor?.substring(1)}` +\n      `?text=${encodeURIComponent(config.text || 'img')}`;\n    setImgUrl(url);\n  }, [config]);\n\n  return (\n    <Image\n      src={imgUrl}\n      style={{ width: `${config.width}px`, height: `${config.height}px` }}\n      alt={config.text || 'placeholder img'}\n    />\n  );\n};\n\nexport default DummyImage;\n","import Image from 'mui-image';\nimport { useEffect, useState } from 'react';\nimport { PlaceholderConfig } from './index';\nimport { defaultConfig, resolveConfig } from './util';\n\nconst HrefLuImage = (input: PlaceholderConfig) => {\n  const [imgUrl, setImgUrl] = useState<string>('');\n  const [config, setConfig] = useState<PlaceholderConfig>(defaultConfig());\n\n  useEffect(() => {\n    setConfig(resolveConfig(input));\n  }, [input]);\n\n  useEffect(() => {\n    const url =\n      `https://iph.href.lu/${config.width}x${config.height}` +\n      `?bg=${config.bgColor?.substring(1)}` +\n      `&fg=${config.textColor?.substring(1)}` +\n      `&text=${encodeURIComponent(config.text || 'img')}`;\n    setImgUrl(url);\n  }, [config]);\n\n  return (\n    <Image\n      src={imgUrl}\n      style={{ width: `${config.width}px`, height: `${config.height}px` }}\n      alt={config.text || 'placeholder img'}\n    />\n  );\n};\n\nexport default HrefLuImage;\n","import Image from 'mui-image';\nimport { useEffect, useState } from 'react';\nimport { PlaceholderConfig } from './index';\nimport { defaultConfig, resolveConfig } from './util';\n\nconst PlaceholderImage = (input: PlaceholderConfig) => {\n  const [imgUrl, setImgUrl] = useState<string>('');\n  const [config, setConfig] = useState<PlaceholderConfig>(defaultConfig());\n\n  useEffect(() => {\n    setConfig(resolveConfig(input));\n  }, [input]);\n\n  useEffect(() => {\n    const url =\n      `https://via.placeholder.com/${config.width}x${config.height}` +\n      `/${config.bgColor?.substring(1)}/${config.textColor?.substring(1)}` +\n      `?text=${encodeURIComponent(config.text || 'img')}` +\n      config.suffix;\n    setImgUrl(url);\n  }, [config]);\n\n  return (\n    <Image\n      src={imgUrl}\n      style={{ width: `${config.width}px`, height: `${config.height}px` }}\n      alt={config.text || 'placeholder img'}\n    />\n  );\n};\n\nexport default PlaceholderImage;\n","import { Box, Container, FormControl, Grid, InputLabel, MenuItem, Select, Tab, Tabs, TextField } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport React, { FC, useState } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\n\nimport ColorPickerAdornment from '../components/ColorPickerAdornment';\nimport { PlaceholderConfig } from '../components/placeholder';\nimport DummyImage from '../components/placeholder/DummyImage';\nimport HrefLuImage from '../components/placeholder/HrefLuImage';\nimport PlaceholderImage from '../components/placeholder/PlaceholderImage';\n\nconst ColorTextField = styled(TextField)({\n  '& .MuiOutlinedInput-root .MuiOutlinedInput-input': {\n    textTransform: 'uppercase',\n  },\n});\n\nconst defaultValues = {\n  width: 320,\n  height: 320,\n  suffix: '.png',\n  bgColor: '#cccccc',\n  textColor: '#969696',\n  text: 'img',\n};\n\nconst suffixOptions = [\n  { label: '.png', value: '.png' },\n  { label: '.jpg', value: '.jpg' },\n  { label: '.gif', value: '.gif' },\n];\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\n    </div>\n  );\n}\n\nfunction a11yProps(index: number) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst PlaceholderImg: FC = () => {\n  const [provider, setProvider] = useState<number>(0);\n  const [placeholderConfig, setPlaceholderConfig] = useState<PlaceholderConfig>(defaultValues);\n  const { register, handleSubmit, control, getValues, setValue } = useForm({ defaultValues });\n\n  return (\n    <Container sx={{ mt: 2 }}>\n      <form onChange={handleSubmit(setPlaceholderConfig)}>\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <TextField type=\"number\" label=\"宽度\" fullWidth {...register('width')} />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField type=\"number\" label=\"高度\" fullWidth {...register('height')} />\n          </Grid>\n          <Grid item xs={4}>\n            <Controller\n              name=\"suffix\"\n              control={control}\n              render={({ field }) => {\n                return (\n                  <FormControl fullWidth>\n                    <InputLabel>后缀名</InputLabel>\n                    <Select\n                      {...field}\n                      label=\"后缀名\"\n                      onChange={(event) => {\n                        setPlaceholderConfig({ ...placeholderConfig, suffix: event.target.value });\n                      }}\n                    >\n                      {suffixOptions.map((item) => {\n                        return (\n                          <MenuItem key={item.label} value={item.value}>\n                            {item.label}\n                          </MenuItem>\n                        );\n                      })}\n                    </Select>\n                  </FormControl>\n                );\n              }}\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={2} sx={{ mt: 1 }}>\n          <Grid item xs={4}>\n            <ColorTextField\n              label=\"背景颜色\"\n              fullWidth\n              {...register('bgColor')}\n              InputProps={{\n                endAdornment: (\n                  <ColorPickerAdornment\n                    value={getValues('bgColor')}\n                    onChange={(color) => {\n                      setValue('bgColor', color);\n                      setPlaceholderConfig({ ...placeholderConfig, bgColor: color });\n                    }}\n                  />\n                ),\n              }}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <ColorTextField\n              label=\"文本颜色\"\n              fullWidth\n              {...register('textColor')}\n              InputProps={{\n                endAdornment: (\n                  <ColorPickerAdornment\n                    value={getValues('textColor')}\n                    onChange={(color) => {\n                      setValue('textColor', color);\n                      setPlaceholderConfig({ ...placeholderConfig, textColor: color });\n                    }}\n                  />\n                ),\n              }}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField label=\"文本\" fullWidth {...register('text')} />\n          </Grid>\n        </Grid>\n      </form>\n      <Box>\n        <Tabs value={provider} onChange={(e, value) => setProvider(value)} aria-label=\"basic tabs example\">\n          <Tab label=\"iph.href.lu\" {...a11yProps(0)} />\n          <Tab label=\"via.placeholder.com\" {...a11yProps(1)} />\n          <Tab label=\"dummyimage.com\" {...a11yProps(2)} />\n        </Tabs>\n        <TabPanel value={provider} index={0}>\n          <HrefLuImage {...placeholderConfig} />\n        </TabPanel>\n        <TabPanel value={provider} index={1}>\n          <PlaceholderImage {...placeholderConfig} />\n        </TabPanel>\n        <TabPanel value={provider} index={2}>\n          <DummyImage {...placeholderConfig} />\n        </TabPanel>\n      </Box>\n    </Container>\n  );\n};\n\nexport default PlaceholderImg;\n"],"names":["value","onChange","popupState","usePopupState","variant","popupId","InputAdornment","position","IconButton","bindTrigger","Palette","sx","color","Popover","bindPopover","anchorOrigin","vertical","horizontal","Box","onChangeComplete","hex","resolveConfig","input","config","width","height","suffix","bgColor","textColor","text","useState","imgUrl","setImgUrl","setConfig","useEffect","url","substring","encodeURIComponent","src","style","alt","ColorTextField","styled","TextField","textTransform","defaultValues","suffixOptions","label","TabPanel","props","children","index","other","role","hidden","id","p","a11yProps","provider","setProvider","placeholderConfig","setPlaceholderConfig","useForm","register","handleSubmit","control","getValues","setValue","Container","mt","Grid","container","spacing","item","xs","type","fullWidth","name","render","field","FormControl","InputLabel","Select","event","target","map","MenuItem","InputProps","endAdornment","Tabs","e","Tab"],"sourceRoot":""}