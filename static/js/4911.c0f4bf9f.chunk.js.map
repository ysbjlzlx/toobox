{"version":3,"file":"static/js/4911.c0f4bf9f.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Button/buttonClasses.js","../node_modules/@mui/material/Button/Button.js","../node_modules/@mui/material/ButtonGroup/ButtonGroupContext.js","../node_modules/@mui/material/styles/useTheme.js","../node_modules/ace-builds/src-min-noconflict/mode-yaml.js","../node_modules/ace-builds/src-min-noconflict/theme-textmate.js","../node_modules/yaml/browser/dist/nodes/Node.js","../node_modules/yaml/browser/dist/visit.js","../node_modules/yaml/browser/dist/doc/directives.js","../node_modules/yaml/browser/dist/doc/anchors.js","../node_modules/yaml/browser/dist/nodes/Alias.js","../node_modules/yaml/browser/dist/nodes/toJS.js","../node_modules/yaml/browser/dist/nodes/Scalar.js","../node_modules/yaml/browser/dist/doc/createNode.js","../node_modules/yaml/browser/dist/nodes/Collection.js","../node_modules/yaml/browser/dist/stringify/stringifyComment.js","../node_modules/yaml/browser/dist/stringify/foldFlowLines.js","../node_modules/yaml/browser/dist/stringify/stringifyString.js","../node_modules/yaml/browser/dist/stringify/stringify.js","../node_modules/yaml/browser/dist/log.js","../node_modules/yaml/browser/dist/nodes/addPairToJSMap.js","../node_modules/yaml/browser/dist/nodes/Pair.js","../node_modules/yaml/browser/dist/stringify/stringifyPair.js","../node_modules/yaml/browser/dist/stringify/stringifyCollection.js","../node_modules/yaml/browser/dist/nodes/YAMLMap.js","../node_modules/yaml/browser/dist/schema/common/map.js","../node_modules/yaml/browser/dist/nodes/YAMLSeq.js","../node_modules/yaml/browser/dist/schema/common/seq.js","../node_modules/yaml/browser/dist/schema/common/string.js","../node_modules/yaml/browser/dist/schema/common/null.js","../node_modules/yaml/browser/dist/schema/core/bool.js","../node_modules/yaml/browser/dist/stringify/stringifyNumber.js","../node_modules/yaml/browser/dist/schema/core/float.js","../node_modules/yaml/browser/dist/schema/core/int.js","../node_modules/yaml/browser/dist/schema/core/schema.js","../node_modules/yaml/browser/dist/schema/json/schema.js","../node_modules/yaml/browser/dist/schema/yaml-1.1/binary.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/yaml/browser/dist/schema/yaml-1.1/pairs.js","../node_modules/yaml/browser/dist/schema/yaml-1.1/omap.js","../node_modules/yaml/browser/dist/schema/yaml-1.1/bool.js","../node_modules/yaml/browser/dist/schema/yaml-1.1/float.js","../node_modules/yaml/browser/dist/schema/yaml-1.1/int.js","../node_modules/yaml/browser/dist/schema/yaml-1.1/set.js","../node_modules/yaml/browser/dist/schema/yaml-1.1/timestamp.js","../node_modules/yaml/browser/dist/schema/yaml-1.1/schema.js","../node_modules/yaml/browser/dist/schema/tags.js","../node_modules/yaml/browser/dist/schema/Schema.js","../node_modules/yaml/browser/dist/stringify/stringifyDocument.js","../node_modules/yaml/browser/dist/doc/applyReviver.js","../node_modules/yaml/browser/dist/doc/Document.js","../node_modules/yaml/browser/dist/errors.js","../node_modules/yaml/browser/dist/compose/resolve-props.js","../node_modules/yaml/browser/dist/compose/util-contains-newline.js","../node_modules/yaml/browser/dist/compose/util-flow-indent-check.js","../node_modules/yaml/browser/dist/compose/util-map-includes.js","../node_modules/yaml/browser/dist/compose/resolve-block-map.js","../node_modules/yaml/browser/dist/compose/resolve-end.js","../node_modules/yaml/browser/dist/compose/resolve-flow-collection.js","../node_modules/yaml/browser/dist/compose/compose-collection.js","../node_modules/yaml/browser/dist/compose/resolve-block-seq.js","../node_modules/yaml/browser/dist/compose/resolve-block-scalar.js","../node_modules/yaml/browser/dist/compose/resolve-flow-scalar.js","../node_modules/yaml/browser/dist/compose/compose-scalar.js","../node_modules/yaml/browser/dist/compose/util-empty-scalar-position.js","../node_modules/yaml/browser/dist/compose/compose-node.js","../node_modules/yaml/browser/dist/compose/compose-doc.js","../node_modules/yaml/browser/dist/compose/composer.js","../node_modules/yaml/browser/dist/parse/cst-scalar.js","../node_modules/yaml/browser/dist/parse/cst-stringify.js","../node_modules/yaml/browser/dist/parse/cst-visit.js","../node_modules/yaml/browser/dist/parse/cst.js","../node_modules/yaml/browser/dist/parse/lexer.js","../node_modules/yaml/browser/dist/parse/line-counter.js","../node_modules/yaml/browser/dist/parse/parser.js","../node_modules/yaml/browser/dist/public-api.js","../node_modules/yaml/browser/index.js"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiButton', slot);\n}\nconst buttonClasses = generateUtilityClasses('MuiButton', ['root', 'text', 'textInherit', 'textPrimary', 'textSecondary', 'textSuccess', 'textError', 'textInfo', 'textWarning', 'outlined', 'outlinedInherit', 'outlinedPrimary', 'outlinedSecondary', 'outlinedSuccess', 'outlinedError', 'outlinedInfo', 'outlinedWarning', 'contained', 'containedInherit', 'containedPrimary', 'containedSecondary', 'containedSuccess', 'containedError', 'containedInfo', 'containedWarning', 'disableElevation', 'focusVisible', 'disabled', 'colorInherit', 'textSizeSmall', 'textSizeMedium', 'textSizeLarge', 'outlinedSizeSmall', 'outlinedSizeMedium', 'outlinedSizeLarge', 'containedSizeSmall', 'containedSizeMedium', 'containedSizeLarge', 'sizeMedium', 'sizeSmall', 'sizeLarge', 'fullWidth', 'startIcon', 'endIcon', 'iconSizeSmall', 'iconSizeMedium', 'iconSizeLarge']);\nexport default buttonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"color\", \"component\", \"className\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { internal_resolveProps as resolveProps } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport buttonClasses, { getButtonUtilityClass } from './buttonClasses';\nimport ButtonGroupContext from '../ButtonGroup/ButtonGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    disableElevation,\n    fullWidth,\n    size,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `${variant}${capitalize(color)}`, `size${capitalize(size)}`, `${variant}Size${capitalize(size)}`, color === 'inherit' && 'colorInherit', disableElevation && 'disableElevation', fullWidth && 'fullWidth'],\n    label: ['label'],\n    startIcon: ['startIcon', `iconSize${capitalize(size)}`],\n    endIcon: ['endIcon', `iconSize${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst commonIconStyles = ownerState => _extends({}, ownerState.size === 'small' && {\n  '& > *:nth-of-type(1)': {\n    fontSize: 18\n  }\n}, ownerState.size === 'medium' && {\n  '& > *:nth-of-type(1)': {\n    fontSize: 20\n  }\n}, ownerState.size === 'large' && {\n  '& > *:nth-of-type(1)': {\n    fontSize: 22\n  }\n});\nconst ButtonRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize(ownerState.color)}`], styles[`size${capitalize(ownerState.size)}`], styles[`${ownerState.variant}Size${capitalize(ownerState.size)}`], ownerState.color === 'inherit' && styles.colorInherit, ownerState.disableElevation && styles.disableElevation, ownerState.fullWidth && styles.fullWidth];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$palette$getCon, _theme$palette;\n  return _extends({}, theme.typography.button, {\n    minWidth: 64,\n    padding: '6px 16px',\n    borderRadius: (theme.vars || theme).shape.borderRadius,\n    transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color', 'color'], {\n      duration: theme.transitions.duration.short\n    }),\n    '&:hover': _extends({\n      textDecoration: 'none',\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }, ownerState.variant === 'text' && ownerState.color !== 'inherit' && {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }, ownerState.variant === 'outlined' && ownerState.color !== 'inherit' && {\n      border: `1px solid ${(theme.vars || theme).palette[ownerState.color].main}`,\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }, ownerState.variant === 'contained' && {\n      backgroundColor: (theme.vars || theme).palette.grey.A100,\n      boxShadow: (theme.vars || theme).shadows[4],\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        boxShadow: (theme.vars || theme).shadows[2],\n        backgroundColor: (theme.vars || theme).palette.grey[300]\n      }\n    }, ownerState.variant === 'contained' && ownerState.color !== 'inherit' && {\n      backgroundColor: (theme.vars || theme).palette[ownerState.color].dark,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: (theme.vars || theme).palette[ownerState.color].main\n      }\n    }),\n    '&:active': _extends({}, ownerState.variant === 'contained' && {\n      boxShadow: (theme.vars || theme).shadows[8]\n    }),\n    [`&.${buttonClasses.focusVisible}`]: _extends({}, ownerState.variant === 'contained' && {\n      boxShadow: (theme.vars || theme).shadows[6]\n    }),\n    [`&.${buttonClasses.disabled}`]: _extends({\n      color: (theme.vars || theme).palette.action.disabled\n    }, ownerState.variant === 'outlined' && {\n      border: `1px solid ${(theme.vars || theme).palette.action.disabledBackground}`\n    }, ownerState.variant === 'contained' && {\n      color: (theme.vars || theme).palette.action.disabled,\n      boxShadow: (theme.vars || theme).shadows[0],\n      backgroundColor: (theme.vars || theme).palette.action.disabledBackground\n    })\n  }, ownerState.variant === 'text' && {\n    padding: '6px 8px'\n  }, ownerState.variant === 'text' && ownerState.color !== 'inherit' && {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  }, ownerState.variant === 'outlined' && {\n    padding: '5px 15px',\n    border: '1px solid currentColor'\n  }, ownerState.variant === 'outlined' && ownerState.color !== 'inherit' && {\n    color: (theme.vars || theme).palette[ownerState.color].main,\n    border: theme.vars ? `1px solid rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.5)` : `1px solid ${alpha(theme.palette[ownerState.color].main, 0.5)}`\n  }, ownerState.variant === 'contained' && {\n    color: theme.vars ?\n    // this is safe because grey does not change between default light/dark mode\n    theme.vars.palette.text.primary : (_theme$palette$getCon = (_theme$palette = theme.palette).getContrastText) == null ? void 0 : _theme$palette$getCon.call(_theme$palette, theme.palette.grey[300]),\n    backgroundColor: (theme.vars || theme).palette.grey[300],\n    boxShadow: (theme.vars || theme).shadows[2]\n  }, ownerState.variant === 'contained' && ownerState.color !== 'inherit' && {\n    color: (theme.vars || theme).palette[ownerState.color].contrastText,\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].main\n  }, ownerState.color === 'inherit' && {\n    color: 'inherit',\n    borderColor: 'currentColor'\n  }, ownerState.size === 'small' && ownerState.variant === 'text' && {\n    padding: '4px 5px',\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === 'large' && ownerState.variant === 'text' && {\n    padding: '8px 11px',\n    fontSize: theme.typography.pxToRem(15)\n  }, ownerState.size === 'small' && ownerState.variant === 'outlined' && {\n    padding: '3px 9px',\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === 'large' && ownerState.variant === 'outlined' && {\n    padding: '7px 21px',\n    fontSize: theme.typography.pxToRem(15)\n  }, ownerState.size === 'small' && ownerState.variant === 'contained' && {\n    padding: '4px 10px',\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === 'large' && ownerState.variant === 'contained' && {\n    padding: '8px 22px',\n    fontSize: theme.typography.pxToRem(15)\n  }, ownerState.fullWidth && {\n    width: '100%'\n  });\n}, ({\n  ownerState\n}) => ownerState.disableElevation && {\n  boxShadow: 'none',\n  '&:hover': {\n    boxShadow: 'none'\n  },\n  [`&.${buttonClasses.focusVisible}`]: {\n    boxShadow: 'none'\n  },\n  '&:active': {\n    boxShadow: 'none'\n  },\n  [`&.${buttonClasses.disabled}`]: {\n    boxShadow: 'none'\n  }\n});\nconst ButtonStartIcon = styled('span', {\n  name: 'MuiButton',\n  slot: 'StartIcon',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.startIcon, styles[`iconSize${capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inherit',\n  marginRight: 8,\n  marginLeft: -4\n}, ownerState.size === 'small' && {\n  marginLeft: -2\n}, commonIconStyles(ownerState)));\nconst ButtonEndIcon = styled('span', {\n  name: 'MuiButton',\n  slot: 'EndIcon',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.endIcon, styles[`iconSize${capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inherit',\n  marginRight: -4,\n  marginLeft: 8\n}, ownerState.size === 'small' && {\n  marginRight: -2\n}, commonIconStyles(ownerState)));\nconst Button = /*#__PURE__*/React.forwardRef(function Button(inProps, ref) {\n  // props priority: `inProps` > `contextProps` > `themeDefaultProps`\n  const contextProps = React.useContext(ButtonGroupContext);\n  const resolvedProps = resolveProps(contextProps, inProps);\n  const props = useThemeProps({\n    props: resolvedProps,\n    name: 'MuiButton'\n  });\n  const {\n      children,\n      color = 'primary',\n      component = 'button',\n      className,\n      disabled = false,\n      disableElevation = false,\n      disableFocusRipple = false,\n      endIcon: endIconProp,\n      focusVisibleClassName,\n      fullWidth = false,\n      size = 'medium',\n      startIcon: startIconProp,\n      type,\n      variant = 'text'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disabled,\n    disableElevation,\n    disableFocusRipple,\n    fullWidth,\n    size,\n    type,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const startIcon = startIconProp && /*#__PURE__*/_jsx(ButtonStartIcon, {\n    className: classes.startIcon,\n    ownerState: ownerState,\n    children: startIconProp\n  });\n  const endIcon = endIconProp && /*#__PURE__*/_jsx(ButtonEndIcon, {\n    className: classes.endIcon,\n    ownerState: ownerState,\n    children: endIconProp\n  });\n  return /*#__PURE__*/_jsxs(ButtonRoot, _extends({\n    ownerState: ownerState,\n    className: clsx(contextProps.className, classes.root, className),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other, {\n    classes: classes,\n    children: [startIcon, children, endIcon]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'success', 'error', 'info', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, no elevation is used.\n   * @default false\n   */\n  disableElevation: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * If `true`, the button will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string]),\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['contained', 'outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default Button;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst ButtonGroupContext = /*#__PURE__*/React.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n  ButtonGroupContext.displayName = 'ButtonGroupContext';\n}\nexport default ButtonGroupContext;","import * as React from 'react';\nimport { useTheme as useThemeSystem } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nexport default function useTheme() {\n  const theme = useThemeSystem(defaultTheme);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n  return theme;\n}","ace.define(\"ace/mode/yaml_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(e,t,n){\"use strict\";var r=e(\"../lib/oop\"),i=e(\"./text_highlight_rules\").TextHighlightRules,s=function(){this.$rules={start:[{token:\"comment\",regex:\"#.*$\"},{token:\"list.markup\",regex:/^(?:-{3}|\\.{3})\\s*(?=#|$)/},{token:\"list.markup\",regex:/^\\s*[\\-?](?:$|\\s)/},{token:\"constant\",regex:\"!![\\\\w//]+\"},{token:\"constant.language\",regex:\"[&\\\\*][a-zA-Z0-9-_]+\"},{token:[\"meta.tag\",\"keyword\"],regex:/^(\\s*\\w[^\\s:]*?)(:(?=\\s|$))/},{token:[\"meta.tag\",\"keyword\"],regex:/(\\w[^\\s:]*?)(\\s*:(?=\\s|$))/},{token:\"keyword.operator\",regex:\"<<\\\\w*:\\\\w*\"},{token:\"keyword.operator\",regex:\"-\\\\s*(?=[{])\"},{token:\"string\",regex:'[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'},{token:\"string\",regex:/[|>][-+\\d]*(?:$|\\s+(?:$|#))/,onMatch:function(e,t,n,r){r=r.replace(/ #.*/,\"\");var i=/^ *((:\\s*)?-(\\s*[^|>])?)?/.exec(r)[0].replace(/\\S\\s*$/,\"\").length,s=parseInt(/\\d+[\\s+-]*$/.exec(r));return s?(i+=s-1,this.next=\"mlString\"):this.next=\"mlStringPre\",n.length?(n[0]=this.next,n[1]=i):(n.push(this.next),n.push(i)),this.token},next:\"mlString\"},{token:\"string\",regex:\"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"},{token:\"constant.numeric\",regex:/(\\b|[+\\-\\.])[\\d_]+(?:(?:\\.[\\d_]*)?(?:[eE][+\\-]?[\\d_]+)?)(?=[^\\d-\\w]|$)$/},{token:\"constant.numeric\",regex:/[+\\-]?\\.inf\\b|NaN\\b|0x[\\dA-Fa-f_]+|0b[10_]+/},{token:\"constant.language.boolean\",regex:\"\\\\b(?:true|false|TRUE|FALSE|True|False|yes|no)\\\\b\"},{token:\"paren.lparen\",regex:\"[[({]\"},{token:\"paren.rparen\",regex:\"[\\\\])}]\"},{token:\"text\",regex:/[^\\s,:\\[\\]\\{\\}]+/}],mlStringPre:[{token:\"indent\",regex:/^ *$/},{token:\"indent\",regex:/^ */,onMatch:function(e,t,n){var r=n[1];return r>=e.length?(this.next=\"start\",n.shift(),n.shift()):(n[1]=e.length-1,this.next=n[0]=\"mlString\"),this.token},next:\"mlString\"},{defaultToken:\"string\"}],mlString:[{token:\"indent\",regex:/^ *$/},{token:\"indent\",regex:/^ */,onMatch:function(e,t,n){var r=n[1];return r>=e.length?(this.next=\"start\",n.splice(0)):this.next=\"mlString\",this.token},next:\"mlString\"},{token:\"string\",regex:\".+\"}]},this.normalizeRules()};r.inherits(s,i),t.YamlHighlightRules=s}),ace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"],function(e,t,n){\"use strict\";var r=e(\"../range\").Range,i=function(){};(function(){this.checkOutdent=function(e,t){return/^\\s+$/.test(e)?/^\\s*\\}/.test(t):!1},this.autoOutdent=function(e,t){var n=e.getLine(t),i=n.match(/^(\\s*\\})/);if(!i)return 0;var s=i[1].length,o=e.findMatchingBracket({row:t,column:s});if(!o||o.row==t)return 0;var u=this.$getIndent(e.getLine(o.row));e.replace(new r(t,0,t,s-1),u)},this.$getIndent=function(e){return e.match(/^\\s*/)[0]}}).call(i.prototype),t.MatchingBraceOutdent=i}),ace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"],function(e,t,n){\"use strict\";var r=e(\"../../lib/oop\"),i=e(\"./fold_mode\").FoldMode,s=e(\"../../range\").Range,o=t.FoldMode=function(){};r.inherits(o,i),function(){this.getFoldWidgetRange=function(e,t,n){var r=this.indentationBlock(e,n);if(r)return r;var i=/\\S/,o=e.getLine(n),u=o.search(i);if(u==-1||o[u]!=\"#\")return;var a=o.length,f=e.getLength(),l=n,c=n;while(++n<f){o=e.getLine(n);var h=o.search(i);if(h==-1)continue;if(o[h]!=\"#\")break;c=n}if(c>l){var p=e.getLine(c).length;return new s(l,a,c,p)}},this.getFoldWidget=function(e,t,n){var r=e.getLine(n),i=r.search(/\\S/),s=e.getLine(n+1),o=e.getLine(n-1),u=o.search(/\\S/),a=s.search(/\\S/);if(i==-1)return e.foldWidgets[n-1]=u!=-1&&u<a?\"start\":\"\",\"\";if(u==-1){if(i==a&&r[i]==\"#\"&&s[i]==\"#\")return e.foldWidgets[n-1]=\"\",e.foldWidgets[n+1]=\"\",\"start\"}else if(u==i&&r[i]==\"#\"&&o[i]==\"#\"&&e.getLine(n-2).search(/\\S/)==-1)return e.foldWidgets[n-1]=\"start\",e.foldWidgets[n+1]=\"\",\"\";return u!=-1&&u<i?e.foldWidgets[n-1]=\"start\":e.foldWidgets[n-1]=\"\",i<a?\"start\":\"\"}}.call(o.prototype)}),ace.define(\"ace/mode/yaml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/yaml_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/folding/coffee\",\"ace/worker/worker_client\"],function(e,t,n){\"use strict\";var r=e(\"../lib/oop\"),i=e(\"./text\").Mode,s=e(\"./yaml_highlight_rules\").YamlHighlightRules,o=e(\"./matching_brace_outdent\").MatchingBraceOutdent,u=e(\"./folding/coffee\").FoldMode,a=e(\"../worker/worker_client\").WorkerClient,f=function(){this.HighlightRules=s,this.$outdent=new o,this.foldingRules=new u,this.$behaviour=this.$defaultBehaviour};r.inherits(f,i),function(){this.lineCommentStart=[\"#\"],this.getNextLineIndent=function(e,t,n){var r=this.$getIndent(t);if(e==\"start\"){var i=t.match(/^.*[\\{\\(\\[]\\s*$/);i&&(r+=n)}return r},this.checkOutdent=function(e,t,n){return this.$outdent.checkOutdent(t,n)},this.autoOutdent=function(e,t,n){this.$outdent.autoOutdent(t,n)},this.createWorker=function(e){var t=new a([\"ace\"],\"ace/mode/yaml_worker\",\"YamlWorker\");return t.attachToDocument(e.getDocument()),t.on(\"annotate\",function(t){e.setAnnotations(t.data)}),t.on(\"terminate\",function(){e.clearAnnotations()}),t},this.$id=\"ace/mode/yaml\"}.call(f.prototype),t.Mode=f});                (function() {\n                    ace.require([\"ace/mode/yaml\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            ","ace.define(\"ace/theme/textmate\",[\"require\",\"exports\",\"module\",\"ace/theme/textmate.css\",\"ace/lib/dom\"],function(e,t,n){\"use strict\";t.isDark=!1,t.cssClass=\"ace-tm\",t.cssText=e(\"./textmate.css\"),t.$id=\"ace/theme/textmate\";var r=e(\"../lib/dom\");r.importCssString(t.cssText,t.cssClass,!1)});                (function() {\n                    ace.require([\"ace/theme/textmate\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            ","const ALIAS = Symbol.for('yaml.alias');\nconst DOC = Symbol.for('yaml.document');\nconst MAP = Symbol.for('yaml.map');\nconst PAIR = Symbol.for('yaml.pair');\nconst SCALAR = Symbol.for('yaml.scalar');\nconst SEQ = Symbol.for('yaml.seq');\nconst NODE_TYPE = Symbol.for('yaml.node.type');\nconst isAlias = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === ALIAS;\nconst isDocument = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === DOC;\nconst isMap = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === MAP;\nconst isPair = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === PAIR;\nconst isScalar = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SCALAR;\nconst isSeq = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SEQ;\nfunction isCollection(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case MAP:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nfunction isNode(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case ALIAS:\n            case MAP:\n            case SCALAR:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nconst hasAnchor = (node) => (isScalar(node) || isCollection(node)) && !!node.anchor;\nclass NodeBase {\n    constructor(type) {\n        Object.defineProperty(this, NODE_TYPE, { value: type });\n    }\n    /** Create a copy of this node.  */\n    clone() {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n}\n\nexport { ALIAS, DOC, MAP, NODE_TYPE, NodeBase, PAIR, SCALAR, SEQ, hasAnchor, isAlias, isCollection, isDocument, isMap, isNode, isPair, isScalar, isSeq };\n","import { isDocument, isNode, isPair, isCollection, isMap, isSeq, isScalar, isAlias } from './nodes/Node.js';\n\nconst BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove node');\n/**\n * Apply a visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nfunction visit(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = visit_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        visit_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisit.SKIP = SKIP;\n/** Remove the current node */\nvisit.REMOVE = REMOVE;\nfunction visit_(key, node, visitor, path) {\n    const ctrl = callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visit_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = visit_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = visit_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = visit_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\n/**\n * Apply an async visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `Promise`: Must resolve to one of the following values\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nasync function visitAsync(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = await visitAsync_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        await visitAsync_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisitAsync.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisitAsync.SKIP = SKIP;\n/** Remove the current node */\nvisitAsync.REMOVE = REMOVE;\nasync function visitAsync_(key, node, visitor, path) {\n    const ctrl = await callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visitAsync_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = await visitAsync_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = await visitAsync_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = await visitAsync_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\nfunction initVisitor(visitor) {\n    if (typeof visitor === 'object' &&\n        (visitor.Collection || visitor.Node || visitor.Value)) {\n        return Object.assign({\n            Alias: visitor.Node,\n            Map: visitor.Node,\n            Scalar: visitor.Node,\n            Seq: visitor.Node\n        }, visitor.Value && {\n            Map: visitor.Value,\n            Scalar: visitor.Value,\n            Seq: visitor.Value\n        }, visitor.Collection && {\n            Map: visitor.Collection,\n            Seq: visitor.Collection\n        }, visitor);\n    }\n    return visitor;\n}\nfunction callVisitor(key, node, visitor, path) {\n    if (typeof visitor === 'function')\n        return visitor(key, node, path);\n    if (isMap(node))\n        return visitor.Map?.(key, node, path);\n    if (isSeq(node))\n        return visitor.Seq?.(key, node, path);\n    if (isPair(node))\n        return visitor.Pair?.(key, node, path);\n    if (isScalar(node))\n        return visitor.Scalar?.(key, node, path);\n    if (isAlias(node))\n        return visitor.Alias?.(key, node, path);\n    return undefined;\n}\nfunction replaceNode(key, path, node) {\n    const parent = path[path.length - 1];\n    if (isCollection(parent)) {\n        parent.items[key] = node;\n    }\n    else if (isPair(parent)) {\n        if (key === 'key')\n            parent.key = node;\n        else\n            parent.value = node;\n    }\n    else if (isDocument(parent)) {\n        parent.contents = node;\n    }\n    else {\n        const pt = isAlias(parent) ? 'alias' : 'scalar';\n        throw new Error(`Cannot replace node with ${pt} parent`);\n    }\n}\n\nexport { visit, visitAsync };\n","import { isNode } from '../nodes/Node.js';\nimport { visit } from '../visit.js';\n\nconst escapeChars = {\n    '!': '%21',\n    ',': '%2C',\n    '[': '%5B',\n    ']': '%5D',\n    '{': '%7B',\n    '}': '%7D'\n};\nconst escapeTagName = (tn) => tn.replace(/[!,[\\]{}]/g, ch => escapeChars[ch]);\nclass Directives {\n    constructor(yaml, tags) {\n        /**\n         * The directives-end/doc-start marker `---`. If `null`, a marker may still be\n         * included in the document's stringified representation.\n         */\n        this.docStart = null;\n        /** The doc-end marker `...`.  */\n        this.docEnd = false;\n        this.yaml = Object.assign({}, Directives.defaultYaml, yaml);\n        this.tags = Object.assign({}, Directives.defaultTags, tags);\n    }\n    clone() {\n        const copy = new Directives(this.yaml, this.tags);\n        copy.docStart = this.docStart;\n        return copy;\n    }\n    /**\n     * During parsing, get a Directives instance for the current document and\n     * update the stream state according to the current version's spec.\n     */\n    atDocument() {\n        const res = new Directives(this.yaml, this.tags);\n        switch (this.yaml.version) {\n            case '1.1':\n                this.atNextDocument = true;\n                break;\n            case '1.2':\n                this.atNextDocument = false;\n                this.yaml = {\n                    explicit: Directives.defaultYaml.explicit,\n                    version: '1.2'\n                };\n                this.tags = Object.assign({}, Directives.defaultTags);\n                break;\n        }\n        return res;\n    }\n    /**\n     * @param onError - May be called even if the action was successful\n     * @returns `true` on success\n     */\n    add(line, onError) {\n        if (this.atNextDocument) {\n            this.yaml = { explicit: Directives.defaultYaml.explicit, version: '1.1' };\n            this.tags = Object.assign({}, Directives.defaultTags);\n            this.atNextDocument = false;\n        }\n        const parts = line.trim().split(/[ \\t]+/);\n        const name = parts.shift();\n        switch (name) {\n            case '%TAG': {\n                if (parts.length !== 2) {\n                    onError(0, '%TAG directive should contain exactly two parts');\n                    if (parts.length < 2)\n                        return false;\n                }\n                const [handle, prefix] = parts;\n                this.tags[handle] = prefix;\n                return true;\n            }\n            case '%YAML': {\n                this.yaml.explicit = true;\n                if (parts.length !== 1) {\n                    onError(0, '%YAML directive should contain exactly one part');\n                    return false;\n                }\n                const [version] = parts;\n                if (version === '1.1' || version === '1.2') {\n                    this.yaml.version = version;\n                    return true;\n                }\n                else {\n                    const isValid = /^\\d+\\.\\d+$/.test(version);\n                    onError(6, `Unsupported YAML version ${version}`, isValid);\n                    return false;\n                }\n            }\n            default:\n                onError(0, `Unknown directive ${name}`, true);\n                return false;\n        }\n    }\n    /**\n     * Resolves a tag, matching handles to those defined in %TAG directives.\n     *\n     * @returns Resolved tag, which may also be the non-specific tag `'!'` or a\n     *   `'!local'` tag, or `null` if unresolvable.\n     */\n    tagName(source, onError) {\n        if (source === '!')\n            return '!'; // non-specific tag\n        if (source[0] !== '!') {\n            onError(`Not a valid tag: ${source}`);\n            return null;\n        }\n        if (source[1] === '<') {\n            const verbatim = source.slice(2, -1);\n            if (verbatim === '!' || verbatim === '!!') {\n                onError(`Verbatim tags aren't resolved, so ${source} is invalid.`);\n                return null;\n            }\n            if (source[source.length - 1] !== '>')\n                onError('Verbatim tags must end with a >');\n            return verbatim;\n        }\n        const [, handle, suffix] = source.match(/^(.*!)([^!]*)$/);\n        if (!suffix)\n            onError(`The ${source} tag has no suffix`);\n        const prefix = this.tags[handle];\n        if (prefix)\n            return prefix + decodeURIComponent(suffix);\n        if (handle === '!')\n            return source; // local tag\n        onError(`Could not resolve tag: ${source}`);\n        return null;\n    }\n    /**\n     * Given a fully resolved tag, returns its printable string form,\n     * taking into account current tag prefixes and defaults.\n     */\n    tagString(tag) {\n        for (const [handle, prefix] of Object.entries(this.tags)) {\n            if (tag.startsWith(prefix))\n                return handle + escapeTagName(tag.substring(prefix.length));\n        }\n        return tag[0] === '!' ? tag : `!<${tag}>`;\n    }\n    toString(doc) {\n        const lines = this.yaml.explicit\n            ? [`%YAML ${this.yaml.version || '1.2'}`]\n            : [];\n        const tagEntries = Object.entries(this.tags);\n        let tagNames;\n        if (doc && tagEntries.length > 0 && isNode(doc.contents)) {\n            const tags = {};\n            visit(doc.contents, (_key, node) => {\n                if (isNode(node) && node.tag)\n                    tags[node.tag] = true;\n            });\n            tagNames = Object.keys(tags);\n        }\n        else\n            tagNames = [];\n        for (const [handle, prefix] of tagEntries) {\n            if (handle === '!!' && prefix === 'tag:yaml.org,2002:')\n                continue;\n            if (!doc || tagNames.some(tn => tn.startsWith(prefix)))\n                lines.push(`%TAG ${handle} ${prefix}`);\n        }\n        return lines.join('\\n');\n    }\n}\nDirectives.defaultYaml = { explicit: false, version: '1.2' };\nDirectives.defaultTags = { '!!': 'tag:yaml.org,2002:' };\n\nexport { Directives };\n","import { isScalar, isCollection } from '../nodes/Node.js';\nimport { visit } from '../visit.js';\n\n/**\n * Verify that the input string is a valid anchor.\n *\n * Will throw on errors.\n */\nfunction anchorIsValid(anchor) {\n    if (/[\\x00-\\x19\\s,[\\]{}]/.test(anchor)) {\n        const sa = JSON.stringify(anchor);\n        const msg = `Anchor must not contain whitespace or control characters: ${sa}`;\n        throw new Error(msg);\n    }\n    return true;\n}\nfunction anchorNames(root) {\n    const anchors = new Set();\n    visit(root, {\n        Value(_key, node) {\n            if (node.anchor)\n                anchors.add(node.anchor);\n        }\n    });\n    return anchors;\n}\n/** Find a new anchor name with the given `prefix` and a one-indexed suffix. */\nfunction findNewAnchor(prefix, exclude) {\n    for (let i = 1; true; ++i) {\n        const name = `${prefix}${i}`;\n        if (!exclude.has(name))\n            return name;\n    }\n}\nfunction createNodeAnchors(doc, prefix) {\n    const aliasObjects = [];\n    const sourceObjects = new Map();\n    let prevAnchors = null;\n    return {\n        onAnchor: (source) => {\n            aliasObjects.push(source);\n            if (!prevAnchors)\n                prevAnchors = anchorNames(doc);\n            const anchor = findNewAnchor(prefix, prevAnchors);\n            prevAnchors.add(anchor);\n            return anchor;\n        },\n        /**\n         * With circular references, the source node is only resolved after all\n         * of its child nodes are. This is why anchors are set only after all of\n         * the nodes have been created.\n         */\n        setAnchors: () => {\n            for (const source of aliasObjects) {\n                const ref = sourceObjects.get(source);\n                if (typeof ref === 'object' &&\n                    ref.anchor &&\n                    (isScalar(ref.node) || isCollection(ref.node))) {\n                    ref.node.anchor = ref.anchor;\n                }\n                else {\n                    const error = new Error('Failed to resolve repeated object (this should not happen)');\n                    error.source = source;\n                    throw error;\n                }\n            }\n        },\n        sourceObjects\n    };\n}\n\nexport { anchorIsValid, anchorNames, createNodeAnchors, findNewAnchor };\n","import { anchorIsValid } from '../doc/anchors.js';\nimport { visit } from '../visit.js';\nimport { NodeBase, ALIAS, isAlias, isCollection, isPair } from './Node.js';\n\nclass Alias extends NodeBase {\n    constructor(source) {\n        super(ALIAS);\n        this.source = source;\n        Object.defineProperty(this, 'tag', {\n            set() {\n                throw new Error('Alias nodes cannot have tags');\n            }\n        });\n    }\n    /**\n     * Resolve the value of this alias within `doc`, finding the last\n     * instance of the `source` anchor before this node.\n     */\n    resolve(doc) {\n        let found = undefined;\n        visit(doc, {\n            Node: (_key, node) => {\n                if (node === this)\n                    return visit.BREAK;\n                if (node.anchor === this.source)\n                    found = node;\n            }\n        });\n        return found;\n    }\n    toJSON(_arg, ctx) {\n        if (!ctx)\n            return { source: this.source };\n        const { anchors, doc, maxAliasCount } = ctx;\n        const source = this.resolve(doc);\n        if (!source) {\n            const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n            throw new ReferenceError(msg);\n        }\n        const data = anchors.get(source);\n        /* istanbul ignore if */\n        if (!data || data.res === undefined) {\n            const msg = 'This should not happen: Alias anchor was not resolved?';\n            throw new ReferenceError(msg);\n        }\n        if (maxAliasCount >= 0) {\n            data.count += 1;\n            if (data.aliasCount === 0)\n                data.aliasCount = getAliasCount(doc, source, anchors);\n            if (data.count * data.aliasCount > maxAliasCount) {\n                const msg = 'Excessive alias count indicates a resource exhaustion attack';\n                throw new ReferenceError(msg);\n            }\n        }\n        return data.res;\n    }\n    toString(ctx, _onComment, _onChompKeep) {\n        const src = `*${this.source}`;\n        if (ctx) {\n            anchorIsValid(this.source);\n            if (ctx.options.verifyAliasOrder && !ctx.anchors.has(this.source)) {\n                const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n                throw new Error(msg);\n            }\n            if (ctx.implicitKey)\n                return `${src} `;\n        }\n        return src;\n    }\n}\nfunction getAliasCount(doc, node, anchors) {\n    if (isAlias(node)) {\n        const source = node.resolve(doc);\n        const anchor = anchors && source && anchors.get(source);\n        return anchor ? anchor.count * anchor.aliasCount : 0;\n    }\n    else if (isCollection(node)) {\n        let count = 0;\n        for (const item of node.items) {\n            const c = getAliasCount(doc, item, anchors);\n            if (c > count)\n                count = c;\n        }\n        return count;\n    }\n    else if (isPair(node)) {\n        const kc = getAliasCount(doc, node.key, anchors);\n        const vc = getAliasCount(doc, node.value, anchors);\n        return Math.max(kc, vc);\n    }\n    return 1;\n}\n\nexport { Alias };\n","import { hasAnchor } from './Node.js';\n\n/**\n * Recursively convert any node or its contents to native JavaScript\n *\n * @param value - The input value\n * @param arg - If `value` defines a `toJSON()` method, use this\n *   as its first argument\n * @param ctx - Conversion context, originally set in Document#toJS(). If\n *   `{ keep: true }` is not set, output should be suitable for JSON\n *   stringification.\n */\nfunction toJS(value, arg, ctx) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    if (Array.isArray(value))\n        return value.map((v, i) => toJS(v, String(i), ctx));\n    if (value && typeof value.toJSON === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        if (!ctx || !hasAnchor(value))\n            return value.toJSON(arg, ctx);\n        const data = { aliasCount: 0, count: 1, res: undefined };\n        ctx.anchors.set(value, data);\n        ctx.onCreate = res => {\n            data.res = res;\n            delete ctx.onCreate;\n        };\n        const res = value.toJSON(arg, ctx);\n        if (ctx.onCreate)\n            ctx.onCreate(res);\n        return res;\n    }\n    if (typeof value === 'bigint' && !ctx?.keep)\n        return Number(value);\n    return value;\n}\n\nexport { toJS };\n","import { NodeBase, SCALAR } from './Node.js';\nimport { toJS } from './toJS.js';\n\nconst isScalarValue = (value) => !value || (typeof value !== 'function' && typeof value !== 'object');\nclass Scalar extends NodeBase {\n    constructor(value) {\n        super(SCALAR);\n        this.value = value;\n    }\n    toJSON(arg, ctx) {\n        return ctx?.keep ? this.value : toJS(this.value, arg, ctx);\n    }\n    toString() {\n        return String(this.value);\n    }\n}\nScalar.BLOCK_FOLDED = 'BLOCK_FOLDED';\nScalar.BLOCK_LITERAL = 'BLOCK_LITERAL';\nScalar.PLAIN = 'PLAIN';\nScalar.QUOTE_DOUBLE = 'QUOTE_DOUBLE';\nScalar.QUOTE_SINGLE = 'QUOTE_SINGLE';\n\nexport { Scalar, isScalarValue };\n","import { Alias } from '../nodes/Alias.js';\nimport { isNode, isPair, MAP, SEQ, isDocument } from '../nodes/Node.js';\nimport { Scalar } from '../nodes/Scalar.js';\n\nconst defaultTagPrefix = 'tag:yaml.org,2002:';\nfunction findTagObject(value, tagName, tags) {\n    if (tagName) {\n        const match = tags.filter(t => t.tag === tagName);\n        const tagObj = match.find(t => !t.format) ?? match[0];\n        if (!tagObj)\n            throw new Error(`Tag ${tagName} not found`);\n        return tagObj;\n    }\n    return tags.find(t => t.identify?.(value) && !t.format);\n}\nfunction createNode(value, tagName, ctx) {\n    if (isDocument(value))\n        value = value.contents;\n    if (isNode(value))\n        return value;\n    if (isPair(value)) {\n        const map = ctx.schema[MAP].createNode?.(ctx.schema, null, ctx);\n        map.items.push(value);\n        return map;\n    }\n    if (value instanceof String ||\n        value instanceof Number ||\n        value instanceof Boolean ||\n        (typeof BigInt !== 'undefined' && value instanceof BigInt) // not supported everywhere\n    ) {\n        // https://tc39.es/ecma262/#sec-serializejsonproperty\n        value = value.valueOf();\n    }\n    const { aliasDuplicateObjects, onAnchor, onTagObj, schema, sourceObjects } = ctx;\n    // Detect duplicate references to the same object & use Alias nodes for all\n    // after first. The `ref` wrapper allows for circular references to resolve.\n    let ref = undefined;\n    if (aliasDuplicateObjects && value && typeof value === 'object') {\n        ref = sourceObjects.get(value);\n        if (ref) {\n            if (!ref.anchor)\n                ref.anchor = onAnchor(value);\n            return new Alias(ref.anchor);\n        }\n        else {\n            ref = { anchor: null, node: null };\n            sourceObjects.set(value, ref);\n        }\n    }\n    if (tagName?.startsWith('!!'))\n        tagName = defaultTagPrefix + tagName.slice(2);\n    let tagObj = findTagObject(value, tagName, schema.tags);\n    if (!tagObj) {\n        if (value && typeof value.toJSON === 'function') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            value = value.toJSON();\n        }\n        if (!value || typeof value !== 'object') {\n            const node = new Scalar(value);\n            if (ref)\n                ref.node = node;\n            return node;\n        }\n        tagObj =\n            value instanceof Map\n                ? schema[MAP]\n                : Symbol.iterator in Object(value)\n                    ? schema[SEQ]\n                    : schema[MAP];\n    }\n    if (onTagObj) {\n        onTagObj(tagObj);\n        delete ctx.onTagObj;\n    }\n    const node = tagObj?.createNode\n        ? tagObj.createNode(ctx.schema, value, ctx)\n        : new Scalar(value);\n    if (tagName)\n        node.tag = tagName;\n    if (ref)\n        ref.node = node;\n    return node;\n}\n\nexport { createNode };\n","import { createNode } from '../doc/createNode.js';\nimport { NodeBase, isNode, isPair, isCollection, isScalar } from './Node.js';\n\nfunction collectionFromPath(schema, path, value) {\n    let v = value;\n    for (let i = path.length - 1; i >= 0; --i) {\n        const k = path[i];\n        if (typeof k === 'number' && Number.isInteger(k) && k >= 0) {\n            const a = [];\n            a[k] = v;\n            v = a;\n        }\n        else {\n            v = new Map([[k, v]]);\n        }\n    }\n    return createNode(v, undefined, {\n        aliasDuplicateObjects: false,\n        keepUndefined: false,\n        onAnchor: () => {\n            throw new Error('This should not happen, please report a bug.');\n        },\n        schema,\n        sourceObjects: new Map()\n    });\n}\n// Type guard is intentionally a little wrong so as to be more useful,\n// as it does not cover untypable empty non-string iterables (e.g. []).\nconst isEmptyPath = (path) => path == null ||\n    (typeof path === 'object' && !!path[Symbol.iterator]().next().done);\nclass Collection extends NodeBase {\n    constructor(type, schema) {\n        super(type);\n        Object.defineProperty(this, 'schema', {\n            value: schema,\n            configurable: true,\n            enumerable: false,\n            writable: true\n        });\n    }\n    /**\n     * Create a copy of this collection.\n     *\n     * @param schema - If defined, overwrites the original's schema\n     */\n    clone(schema) {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (schema)\n            copy.schema = schema;\n        copy.items = copy.items.map(it => isNode(it) || isPair(it) ? it.clone(schema) : it);\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /**\n     * Adds a value to the collection. For `!!map` and `!!omap` the value must\n     * be a Pair instance or a `{ key, value }` object, which may not have a key\n     * that already exists in the map.\n     */\n    addIn(path, value) {\n        if (isEmptyPath(path))\n            this.add(value);\n        else {\n            const [key, ...rest] = path;\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.addIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n    /**\n     * Removes a value from the collection.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.delete(key);\n        const node = this.get(key, true);\n        if (isCollection(node))\n            return node.deleteIn(rest);\n        else\n            throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        const [key, ...rest] = path;\n        const node = this.get(key, true);\n        if (rest.length === 0)\n            return !keepScalar && isScalar(node) ? node.value : node;\n        else\n            return isCollection(node) ? node.getIn(rest, keepScalar) : undefined;\n    }\n    hasAllNullValues(allowScalar) {\n        return this.items.every(node => {\n            if (!isPair(node))\n                return false;\n            const n = node.value;\n            return (n == null ||\n                (allowScalar &&\n                    isScalar(n) &&\n                    n.value == null &&\n                    !n.commentBefore &&\n                    !n.comment &&\n                    !n.tag));\n        });\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     */\n    hasIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.has(key);\n        const node = this.get(key, true);\n        return isCollection(node) ? node.hasIn(rest) : false;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        const [key, ...rest] = path;\n        if (rest.length === 0) {\n            this.set(key, value);\n        }\n        else {\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.setIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n}\nCollection.maxFlowStringSingleLineLength = 60;\n\nexport { Collection, collectionFromPath, isEmptyPath };\n","/**\n * Stringifies a comment.\n *\n * Empty comment lines are left empty,\n * lines consisting of a single space are replaced by `#`,\n * and all other lines are prefixed with a `#`.\n */\nconst stringifyComment = (str) => str.replace(/^(?!$)(?: $)?/gm, '#');\nfunction indentComment(comment, indent) {\n    if (/^\\n+$/.test(comment))\n        return comment.substring(1);\n    return indent ? comment.replace(/^(?! *$)/gm, indent) : comment;\n}\nconst lineComment = (str, indent, comment) => str.endsWith('\\n')\n    ? indentComment(comment, indent)\n    : comment.includes('\\n')\n        ? '\\n' + indentComment(comment, indent)\n        : (str.endsWith(' ') ? '' : ' ') + comment;\n\nexport { indentComment, lineComment, stringifyComment };\n","const FOLD_FLOW = 'flow';\nconst FOLD_BLOCK = 'block';\nconst FOLD_QUOTED = 'quoted';\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n */\nfunction foldFlowLines(text, indent, mode = 'flow', { indentAtStart, lineWidth = 80, minContentWidth = 20, onFold, onOverflow } = {}) {\n    if (!lineWidth || lineWidth < 0)\n        return text;\n    const endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);\n    if (text.length <= endStep)\n        return text;\n    const folds = [];\n    const escapedFolds = {};\n    let end = lineWidth - indent.length;\n    if (typeof indentAtStart === 'number') {\n        if (indentAtStart > lineWidth - Math.max(2, minContentWidth))\n            folds.push(0);\n        else\n            end = lineWidth - indentAtStart;\n    }\n    let split = undefined;\n    let prev = undefined;\n    let overflow = false;\n    let i = -1;\n    let escStart = -1;\n    let escEnd = -1;\n    if (mode === FOLD_BLOCK) {\n        i = consumeMoreIndentedLines(text, i);\n        if (i !== -1)\n            end = i + endStep;\n    }\n    for (let ch; (ch = text[(i += 1)]);) {\n        if (mode === FOLD_QUOTED && ch === '\\\\') {\n            escStart = i;\n            switch (text[i + 1]) {\n                case 'x':\n                    i += 3;\n                    break;\n                case 'u':\n                    i += 5;\n                    break;\n                case 'U':\n                    i += 9;\n                    break;\n                default:\n                    i += 1;\n            }\n            escEnd = i;\n        }\n        if (ch === '\\n') {\n            if (mode === FOLD_BLOCK)\n                i = consumeMoreIndentedLines(text, i);\n            end = i + endStep;\n            split = undefined;\n        }\n        else {\n            if (ch === ' ' &&\n                prev &&\n                prev !== ' ' &&\n                prev !== '\\n' &&\n                prev !== '\\t') {\n                // space surrounded by non-space can be replaced with newline + indent\n                const next = text[i + 1];\n                if (next && next !== ' ' && next !== '\\n' && next !== '\\t')\n                    split = i;\n            }\n            if (i >= end) {\n                if (split) {\n                    folds.push(split);\n                    end = split + endStep;\n                    split = undefined;\n                }\n                else if (mode === FOLD_QUOTED) {\n                    // white-space collected at end may stretch past lineWidth\n                    while (prev === ' ' || prev === '\\t') {\n                        prev = ch;\n                        ch = text[(i += 1)];\n                        overflow = true;\n                    }\n                    // Account for newline escape, but don't break preceding escape\n                    const j = i > escEnd + 1 ? i - 2 : escStart - 1;\n                    // Bail out if lineWidth & minContentWidth are shorter than an escape string\n                    if (escapedFolds[j])\n                        return text;\n                    folds.push(j);\n                    escapedFolds[j] = true;\n                    end = j + endStep;\n                    split = undefined;\n                }\n                else {\n                    overflow = true;\n                }\n            }\n        }\n        prev = ch;\n    }\n    if (overflow && onOverflow)\n        onOverflow();\n    if (folds.length === 0)\n        return text;\n    if (onFold)\n        onFold();\n    let res = text.slice(0, folds[0]);\n    for (let i = 0; i < folds.length; ++i) {\n        const fold = folds[i];\n        const end = folds[i + 1] || text.length;\n        if (fold === 0)\n            res = `\\n${indent}${text.slice(0, end)}`;\n        else {\n            if (mode === FOLD_QUOTED && escapedFolds[fold])\n                res += `${text[fold]}\\\\`;\n            res += `\\n${indent}${text.slice(fold + 1, end)}`;\n        }\n    }\n    return res;\n}\n/**\n * Presumes `i + 1` is at the start of a line\n * @returns index of last newline in more-indented block\n */\nfunction consumeMoreIndentedLines(text, i) {\n    let ch = text[i + 1];\n    while (ch === ' ' || ch === '\\t') {\n        do {\n            ch = text[(i += 1)];\n        } while (ch && ch !== '\\n');\n        ch = text[i + 1];\n    }\n    return i;\n}\n\nexport { FOLD_BLOCK, FOLD_FLOW, FOLD_QUOTED, foldFlowLines };\n","import { Scalar } from '../nodes/Scalar.js';\nimport { foldFlowLines, FOLD_QUOTED, FOLD_FLOW, FOLD_BLOCK } from './foldFlowLines.js';\n\nconst getFoldOptions = (ctx) => ({\n    indentAtStart: ctx.indentAtStart,\n    lineWidth: ctx.options.lineWidth,\n    minContentWidth: ctx.options.minContentWidth\n});\n// Also checks for lines starting with %, as parsing the output as YAML 1.1 will\n// presume that's starting a new document.\nconst containsDocumentMarker = (str) => /^(%|---|\\.\\.\\.)/m.test(str);\nfunction lineLengthOverLimit(str, lineWidth, indentLength) {\n    if (!lineWidth || lineWidth < 0)\n        return false;\n    const limit = lineWidth - indentLength;\n    const strLen = str.length;\n    if (strLen <= limit)\n        return false;\n    for (let i = 0, start = 0; i < strLen; ++i) {\n        if (str[i] === '\\n') {\n            if (i - start > limit)\n                return true;\n            start = i + 1;\n            if (strLen - start <= limit)\n                return false;\n        }\n    }\n    return true;\n}\nfunction doubleQuotedString(value, ctx) {\n    const json = JSON.stringify(value);\n    if (ctx.options.doubleQuotedAsJSON)\n        return json;\n    const { implicitKey } = ctx;\n    const minMultiLineLength = ctx.options.doubleQuotedMinMultiLineLength;\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    let str = '';\n    let start = 0;\n    for (let i = 0, ch = json[i]; ch; ch = json[++i]) {\n        if (ch === ' ' && json[i + 1] === '\\\\' && json[i + 2] === 'n') {\n            // space before newline needs to be escaped to not be folded\n            str += json.slice(start, i) + '\\\\ ';\n            i += 1;\n            start = i;\n            ch = '\\\\';\n        }\n        if (ch === '\\\\')\n            switch (json[i + 1]) {\n                case 'u':\n                    {\n                        str += json.slice(start, i);\n                        const code = json.substr(i + 2, 4);\n                        switch (code) {\n                            case '0000':\n                                str += '\\\\0';\n                                break;\n                            case '0007':\n                                str += '\\\\a';\n                                break;\n                            case '000b':\n                                str += '\\\\v';\n                                break;\n                            case '001b':\n                                str += '\\\\e';\n                                break;\n                            case '0085':\n                                str += '\\\\N';\n                                break;\n                            case '00a0':\n                                str += '\\\\_';\n                                break;\n                            case '2028':\n                                str += '\\\\L';\n                                break;\n                            case '2029':\n                                str += '\\\\P';\n                                break;\n                            default:\n                                if (code.substr(0, 2) === '00')\n                                    str += '\\\\x' + code.substr(2);\n                                else\n                                    str += json.substr(i, 6);\n                        }\n                        i += 5;\n                        start = i + 1;\n                    }\n                    break;\n                case 'n':\n                    if (implicitKey ||\n                        json[i + 2] === '\"' ||\n                        json.length < minMultiLineLength) {\n                        i += 1;\n                    }\n                    else {\n                        // folding will eat first newline\n                        str += json.slice(start, i) + '\\n\\n';\n                        while (json[i + 2] === '\\\\' &&\n                            json[i + 3] === 'n' &&\n                            json[i + 4] !== '\"') {\n                            str += '\\n';\n                            i += 2;\n                        }\n                        str += indent;\n                        // space after newline needs to be escaped to not be folded\n                        if (json[i + 2] === ' ')\n                            str += '\\\\';\n                        i += 1;\n                        start = i + 1;\n                    }\n                    break;\n                default:\n                    i += 1;\n            }\n    }\n    str = start ? str + json.slice(start) : json;\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_QUOTED, getFoldOptions(ctx));\n}\nfunction singleQuotedString(value, ctx) {\n    if (ctx.options.singleQuote === false ||\n        (ctx.implicitKey && value.includes('\\n')) ||\n        /[ \\t]\\n|\\n[ \\t]/.test(value) // single quoted string can't have leading or trailing whitespace around newline\n    )\n        return doubleQuotedString(value, ctx);\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    const res = \"'\" + value.replace(/'/g, \"''\").replace(/\\n+/g, `$&\\n${indent}`) + \"'\";\n    return ctx.implicitKey\n        ? res\n        : foldFlowLines(res, indent, FOLD_FLOW, getFoldOptions(ctx));\n}\nfunction quotedString(value, ctx) {\n    const { singleQuote } = ctx.options;\n    let qs;\n    if (singleQuote === false)\n        qs = doubleQuotedString;\n    else {\n        const hasDouble = value.includes('\"');\n        const hasSingle = value.includes(\"'\");\n        if (hasDouble && !hasSingle)\n            qs = singleQuotedString;\n        else if (hasSingle && !hasDouble)\n            qs = doubleQuotedString;\n        else\n            qs = singleQuote ? singleQuotedString : doubleQuotedString;\n    }\n    return qs(value, ctx);\n}\nfunction blockString({ comment, type, value }, ctx, onComment, onChompKeep) {\n    const { blockQuote, commentString, lineWidth } = ctx.options;\n    // 1. Block can't end in whitespace unless the last line is non-empty.\n    // 2. Strings consisting of only whitespace are best rendered explicitly.\n    if (!blockQuote || /\\n[\\t ]+$/.test(value) || /^\\s*$/.test(value)) {\n        return quotedString(value, ctx);\n    }\n    const indent = ctx.indent ||\n        (ctx.forceBlockIndent || containsDocumentMarker(value) ? '  ' : '');\n    const literal = blockQuote === 'literal'\n        ? true\n        : blockQuote === 'folded' || type === Scalar.BLOCK_FOLDED\n            ? false\n            : type === Scalar.BLOCK_LITERAL\n                ? true\n                : !lineLengthOverLimit(value, lineWidth, indent.length);\n    if (!value)\n        return literal ? '|\\n' : '>\\n';\n    // determine chomping from whitespace at value end\n    let chomp;\n    let endStart;\n    for (endStart = value.length; endStart > 0; --endStart) {\n        const ch = value[endStart - 1];\n        if (ch !== '\\n' && ch !== '\\t' && ch !== ' ')\n            break;\n    }\n    let end = value.substring(endStart);\n    const endNlPos = end.indexOf('\\n');\n    if (endNlPos === -1) {\n        chomp = '-'; // strip\n    }\n    else if (value === end || endNlPos !== end.length - 1) {\n        chomp = '+'; // keep\n        if (onChompKeep)\n            onChompKeep();\n    }\n    else {\n        chomp = ''; // clip\n    }\n    if (end) {\n        value = value.slice(0, -end.length);\n        if (end[end.length - 1] === '\\n')\n            end = end.slice(0, -1);\n        end = end.replace(/\\n+(?!\\n|$)/g, `$&${indent}`);\n    }\n    // determine indent indicator from whitespace at value start\n    let startWithSpace = false;\n    let startEnd;\n    let startNlPos = -1;\n    for (startEnd = 0; startEnd < value.length; ++startEnd) {\n        const ch = value[startEnd];\n        if (ch === ' ')\n            startWithSpace = true;\n        else if (ch === '\\n')\n            startNlPos = startEnd;\n        else\n            break;\n    }\n    let start = value.substring(0, startNlPos < startEnd ? startNlPos + 1 : startEnd);\n    if (start) {\n        value = value.substring(start.length);\n        start = start.replace(/\\n+/g, `$&${indent}`);\n    }\n    const indentSize = indent ? '2' : '1'; // root is at -1\n    let header = (literal ? '|' : '>') + (startWithSpace ? indentSize : '') + chomp;\n    if (comment) {\n        header += ' ' + commentString(comment.replace(/ ?[\\r\\n]+/g, ' '));\n        if (onComment)\n            onComment();\n    }\n    if (literal) {\n        value = value.replace(/\\n+/g, `$&${indent}`);\n        return `${header}\\n${indent}${start}${value}${end}`;\n    }\n    value = value\n        .replace(/\\n+/g, '\\n$&')\n        .replace(/(?:^|\\n)([\\t ].*)(?:([\\n\\t ]*)\\n(?![\\n\\t ]))?/g, '$1$2') // more-indented lines aren't folded\n        //                ^ more-ind. ^ empty     ^ capture next empty lines only at end of indent\n        .replace(/\\n+/g, `$&${indent}`);\n    const body = foldFlowLines(`${start}${value}${end}`, indent, FOLD_BLOCK, getFoldOptions(ctx));\n    return `${header}\\n${indent}${body}`;\n}\nfunction plainString(item, ctx, onComment, onChompKeep) {\n    const { type, value } = item;\n    const { actualString, implicitKey, indent, indentStep, inFlow } = ctx;\n    if ((implicitKey && /[\\n[\\]{},]/.test(value)) ||\n        (inFlow && /[[\\]{},]/.test(value))) {\n        return quotedString(value, ctx);\n    }\n    if (!value ||\n        /^[\\n\\t ,[\\]{}#&*!|>'\"%@`]|^[?-]$|^[?-][ \\t]|[\\n:][ \\t]|[ \\t]\\n|[\\n\\t ]#|[\\n\\t :]$/.test(value)) {\n        // not allowed:\n        // - empty string, '-' or '?'\n        // - start with an indicator character (except [?:-]) or /[?-] /\n        // - '\\n ', ': ' or ' \\n' anywhere\n        // - '#' not preceded by a non-space char\n        // - end with ' ' or ':'\n        return implicitKey || inFlow || !value.includes('\\n')\n            ? quotedString(value, ctx)\n            : blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (!implicitKey &&\n        !inFlow &&\n        type !== Scalar.PLAIN &&\n        value.includes('\\n')) {\n        // Where allowed & type not set explicitly, prefer block style for multiline strings\n        return blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (containsDocumentMarker(value)) {\n        if (indent === '') {\n            ctx.forceBlockIndent = true;\n            return blockString(item, ctx, onComment, onChompKeep);\n        }\n        else if (implicitKey && indent === indentStep) {\n            return quotedString(value, ctx);\n        }\n    }\n    const str = value.replace(/\\n+/g, `$&\\n${indent}`);\n    // Verify that output will be parsed as a string, as e.g. plain numbers and\n    // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),\n    // and others in v1.1.\n    if (actualString) {\n        const test = (tag) => tag.default && tag.tag !== 'tag:yaml.org,2002:str' && tag.test?.test(str);\n        const { compat, tags } = ctx.doc.schema;\n        if (tags.some(test) || compat?.some(test))\n            return quotedString(value, ctx);\n    }\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_FLOW, getFoldOptions(ctx));\n}\nfunction stringifyString(item, ctx, onComment, onChompKeep) {\n    const { implicitKey, inFlow } = ctx;\n    const ss = typeof item.value === 'string'\n        ? item\n        : Object.assign({}, item, { value: String(item.value) });\n    let { type } = item;\n    if (type !== Scalar.QUOTE_DOUBLE) {\n        // force double quotes on control characters & unpaired surrogates\n        if (/[\\x00-\\x08\\x0b-\\x1f\\x7f-\\x9f\\u{D800}-\\u{DFFF}]/u.test(ss.value))\n            type = Scalar.QUOTE_DOUBLE;\n    }\n    const _stringify = (_type) => {\n        switch (_type) {\n            case Scalar.BLOCK_FOLDED:\n            case Scalar.BLOCK_LITERAL:\n                return implicitKey || inFlow\n                    ? quotedString(ss.value, ctx) // blocks are not valid inside flow containers\n                    : blockString(ss, ctx, onComment, onChompKeep);\n            case Scalar.QUOTE_DOUBLE:\n                return doubleQuotedString(ss.value, ctx);\n            case Scalar.QUOTE_SINGLE:\n                return singleQuotedString(ss.value, ctx);\n            case Scalar.PLAIN:\n                return plainString(ss, ctx, onComment, onChompKeep);\n            default:\n                return null;\n        }\n    };\n    let res = _stringify(type);\n    if (res === null) {\n        const { defaultKeyType, defaultStringType } = ctx.options;\n        const t = (implicitKey && defaultKeyType) || defaultStringType;\n        res = _stringify(t);\n        if (res === null)\n            throw new Error(`Unsupported default string type ${t}`);\n    }\n    return res;\n}\n\nexport { stringifyString };\n","import { anchorIsValid } from '../doc/anchors.js';\nimport { isPair, isAlias, isNode, isScalar, isCollection } from '../nodes/Node.js';\nimport { stringifyComment } from './stringifyComment.js';\nimport { stringifyString } from './stringifyString.js';\n\nfunction createStringifyContext(doc, options) {\n    const opt = Object.assign({\n        blockQuote: true,\n        commentString: stringifyComment,\n        defaultKeyType: null,\n        defaultStringType: 'PLAIN',\n        directives: null,\n        doubleQuotedAsJSON: false,\n        doubleQuotedMinMultiLineLength: 40,\n        falseStr: 'false',\n        flowCollectionPadding: true,\n        indentSeq: true,\n        lineWidth: 80,\n        minContentWidth: 20,\n        nullStr: 'null',\n        simpleKeys: false,\n        singleQuote: null,\n        trueStr: 'true',\n        verifyAliasOrder: true\n    }, doc.schema.toStringOptions, options);\n    let inFlow;\n    switch (opt.collectionStyle) {\n        case 'block':\n            inFlow = false;\n            break;\n        case 'flow':\n            inFlow = true;\n            break;\n        default:\n            inFlow = null;\n    }\n    return {\n        anchors: new Set(),\n        doc,\n        flowCollectionPadding: opt.flowCollectionPadding ? ' ' : '',\n        indent: '',\n        indentStep: typeof opt.indent === 'number' ? ' '.repeat(opt.indent) : '  ',\n        inFlow,\n        options: opt\n    };\n}\nfunction getTagObject(tags, item) {\n    if (item.tag) {\n        const match = tags.filter(t => t.tag === item.tag);\n        if (match.length > 0)\n            return match.find(t => t.format === item.format) ?? match[0];\n    }\n    let tagObj = undefined;\n    let obj;\n    if (isScalar(item)) {\n        obj = item.value;\n        const match = tags.filter(t => t.identify?.(obj));\n        tagObj =\n            match.find(t => t.format === item.format) ?? match.find(t => !t.format);\n    }\n    else {\n        obj = item;\n        tagObj = tags.find(t => t.nodeClass && obj instanceof t.nodeClass);\n    }\n    if (!tagObj) {\n        const name = obj?.constructor?.name ?? typeof obj;\n        throw new Error(`Tag not resolved for ${name} value`);\n    }\n    return tagObj;\n}\n// needs to be called before value stringifier to allow for circular anchor refs\nfunction stringifyProps(node, tagObj, { anchors, doc }) {\n    if (!doc.directives)\n        return '';\n    const props = [];\n    const anchor = (isScalar(node) || isCollection(node)) && node.anchor;\n    if (anchor && anchorIsValid(anchor)) {\n        anchors.add(anchor);\n        props.push(`&${anchor}`);\n    }\n    const tag = node.tag ? node.tag : tagObj.default ? null : tagObj.tag;\n    if (tag)\n        props.push(doc.directives.tagString(tag));\n    return props.join(' ');\n}\nfunction stringify(item, ctx, onComment, onChompKeep) {\n    if (isPair(item))\n        return item.toString(ctx, onComment, onChompKeep);\n    if (isAlias(item)) {\n        if (ctx.doc.directives)\n            return item.toString(ctx);\n        if (ctx.resolvedAliases?.has(item)) {\n            throw new TypeError(`Cannot stringify circular structure without alias nodes`);\n        }\n        else {\n            if (ctx.resolvedAliases)\n                ctx.resolvedAliases.add(item);\n            else\n                ctx.resolvedAliases = new Set([item]);\n            item = item.resolve(ctx.doc);\n        }\n    }\n    let tagObj = undefined;\n    const node = isNode(item)\n        ? item\n        : ctx.doc.createNode(item, { onTagObj: o => (tagObj = o) });\n    if (!tagObj)\n        tagObj = getTagObject(ctx.doc.schema.tags, node);\n    const props = stringifyProps(node, tagObj, ctx);\n    if (props.length > 0)\n        ctx.indentAtStart = (ctx.indentAtStart ?? 0) + props.length + 1;\n    const str = typeof tagObj.stringify === 'function'\n        ? tagObj.stringify(node, ctx, onComment, onChompKeep)\n        : isScalar(node)\n            ? stringifyString(node, ctx, onComment, onChompKeep)\n            : node.toString(ctx, onComment, onChompKeep);\n    if (!props)\n        return str;\n    return isScalar(node) || str[0] === '{' || str[0] === '['\n        ? `${props} ${str}`\n        : `${props}\\n${ctx.indent}${str}`;\n}\n\nexport { createStringifyContext, stringify };\n","function debug(logLevel, ...messages) {\n    if (logLevel === 'debug')\n        console.log(...messages);\n}\nfunction warn(logLevel, warning) {\n    if (logLevel === 'debug' || logLevel === 'warn') {\n        if (typeof process !== 'undefined' && process.emitWarning)\n            process.emitWarning(warning);\n        else\n            console.warn(warning);\n    }\n}\n\nexport { debug, warn };\n","import { warn } from '../log.js';\nimport { createStringifyContext } from '../stringify/stringify.js';\nimport { isAlias, isSeq, isScalar, isMap, isNode } from './Node.js';\nimport { Scalar } from './Scalar.js';\nimport { toJS } from './toJS.js';\n\nconst MERGE_KEY = '<<';\nfunction addPairToJSMap(ctx, map, { key, value }) {\n    if (ctx?.doc.schema.merge && isMergeKey(key)) {\n        value = isAlias(value) ? value.resolve(ctx.doc) : value;\n        if (isSeq(value))\n            for (const it of value.items)\n                mergeToJSMap(ctx, map, it);\n        else if (Array.isArray(value))\n            for (const it of value)\n                mergeToJSMap(ctx, map, it);\n        else\n            mergeToJSMap(ctx, map, value);\n    }\n    else {\n        const jsKey = toJS(key, '', ctx);\n        if (map instanceof Map) {\n            map.set(jsKey, toJS(value, jsKey, ctx));\n        }\n        else if (map instanceof Set) {\n            map.add(jsKey);\n        }\n        else {\n            const stringKey = stringifyKey(key, jsKey, ctx);\n            const jsValue = toJS(value, stringKey, ctx);\n            if (stringKey in map)\n                Object.defineProperty(map, stringKey, {\n                    value: jsValue,\n                    writable: true,\n                    enumerable: true,\n                    configurable: true\n                });\n            else\n                map[stringKey] = jsValue;\n        }\n    }\n    return map;\n}\nconst isMergeKey = (key) => key === MERGE_KEY ||\n    (isScalar(key) &&\n        key.value === MERGE_KEY &&\n        (!key.type || key.type === Scalar.PLAIN));\n// If the value associated with a merge key is a single mapping node, each of\n// its key/value pairs is inserted into the current mapping, unless the key\n// already exists in it. If the value associated with the merge key is a\n// sequence, then this sequence is expected to contain mapping nodes and each\n// of these nodes is merged in turn according to its order in the sequence.\n// Keys in mapping nodes earlier in the sequence override keys specified in\n// later mapping nodes. -- http://yaml.org/type/merge.html\nfunction mergeToJSMap(ctx, map, value) {\n    const source = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (!isMap(source))\n        throw new Error('Merge sources must be maps or map aliases');\n    const srcMap = source.toJSON(null, ctx, Map);\n    for (const [key, value] of srcMap) {\n        if (map instanceof Map) {\n            if (!map.has(key))\n                map.set(key, value);\n        }\n        else if (map instanceof Set) {\n            map.add(key);\n        }\n        else if (!Object.prototype.hasOwnProperty.call(map, key)) {\n            Object.defineProperty(map, key, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true\n            });\n        }\n    }\n    return map;\n}\nfunction stringifyKey(key, jsKey, ctx) {\n    if (jsKey === null)\n        return '';\n    if (typeof jsKey !== 'object')\n        return String(jsKey);\n    if (isNode(key) && ctx && ctx.doc) {\n        const strCtx = createStringifyContext(ctx.doc, {});\n        strCtx.anchors = new Set();\n        for (const node of ctx.anchors.keys())\n            strCtx.anchors.add(node.anchor);\n        strCtx.inFlow = true;\n        strCtx.inStringifyKey = true;\n        const strKey = key.toString(strCtx);\n        if (!ctx.mapKeyWarned) {\n            let jsonStr = JSON.stringify(strKey);\n            if (jsonStr.length > 40)\n                jsonStr = jsonStr.substring(0, 36) + '...\"';\n            warn(ctx.doc.options.logLevel, `Keys with collection values will be stringified due to JS Object restrictions: ${jsonStr}. Set mapAsMap: true to use object keys.`);\n            ctx.mapKeyWarned = true;\n        }\n        return strKey;\n    }\n    return JSON.stringify(jsKey);\n}\n\nexport { addPairToJSMap };\n","import { createNode } from '../doc/createNode.js';\nimport { stringifyPair } from '../stringify/stringifyPair.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { NODE_TYPE, PAIR, isNode } from './Node.js';\n\nfunction createPair(key, value, ctx) {\n    const k = createNode(key, undefined, ctx);\n    const v = createNode(value, undefined, ctx);\n    return new Pair(k, v);\n}\nclass Pair {\n    constructor(key, value = null) {\n        Object.defineProperty(this, NODE_TYPE, { value: PAIR });\n        this.key = key;\n        this.value = value;\n    }\n    clone(schema) {\n        let { key, value } = this;\n        if (isNode(key))\n            key = key.clone(schema);\n        if (isNode(value))\n            value = value.clone(schema);\n        return new Pair(key, value);\n    }\n    toJSON(_, ctx) {\n        const pair = ctx?.mapAsMap ? new Map() : {};\n        return addPairToJSMap(ctx, pair, this);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        return ctx?.doc\n            ? stringifyPair(this, ctx, onComment, onChompKeep)\n            : JSON.stringify(this);\n    }\n}\n\nexport { Pair, createPair };\n","import { isCollection, isNode, isScalar, isSeq } from '../nodes/Node.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyPair({ key, value }, ctx, onComment, onChompKeep) {\n    const { allNullValues, doc, indent, indentStep, options: { commentString, indentSeq, simpleKeys } } = ctx;\n    let keyComment = (isNode(key) && key.comment) || null;\n    if (simpleKeys) {\n        if (keyComment) {\n            throw new Error('With simple keys, key nodes cannot have comments');\n        }\n        if (isCollection(key)) {\n            const msg = 'With simple keys, collection cannot be used as a key value';\n            throw new Error(msg);\n        }\n    }\n    let explicitKey = !simpleKeys &&\n        (!key ||\n            (keyComment && value == null && !ctx.inFlow) ||\n            isCollection(key) ||\n            (isScalar(key)\n                ? key.type === Scalar.BLOCK_FOLDED || key.type === Scalar.BLOCK_LITERAL\n                : typeof key === 'object'));\n    ctx = Object.assign({}, ctx, {\n        allNullValues: false,\n        implicitKey: !explicitKey && (simpleKeys || !allNullValues),\n        indent: indent + indentStep\n    });\n    let keyCommentDone = false;\n    let chompKeep = false;\n    let str = stringify(key, ctx, () => (keyCommentDone = true), () => (chompKeep = true));\n    if (!explicitKey && !ctx.inFlow && str.length > 1024) {\n        if (simpleKeys)\n            throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n        explicitKey = true;\n    }\n    if (ctx.inFlow) {\n        if (allNullValues || value == null) {\n            if (keyCommentDone && onComment)\n                onComment();\n            return str === '' ? '?' : explicitKey ? `? ${str}` : str;\n        }\n    }\n    else if ((allNullValues && !simpleKeys) || (value == null && explicitKey)) {\n        str = `? ${str}`;\n        if (keyComment && !keyCommentDone) {\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        }\n        else if (chompKeep && onChompKeep)\n            onChompKeep();\n        return str;\n    }\n    if (keyCommentDone)\n        keyComment = null;\n    if (explicitKey) {\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        str = `? ${str}\\n${indent}:`;\n    }\n    else {\n        str = `${str}:`;\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n    }\n    let vsb, vcb, valueComment;\n    if (isNode(value)) {\n        vsb = !!value.spaceBefore;\n        vcb = value.commentBefore;\n        valueComment = value.comment;\n    }\n    else {\n        vsb = false;\n        vcb = null;\n        valueComment = null;\n        if (value && typeof value === 'object')\n            value = doc.createNode(value);\n    }\n    ctx.implicitKey = false;\n    if (!explicitKey && !keyComment && isScalar(value))\n        ctx.indentAtStart = str.length + 1;\n    chompKeep = false;\n    if (!indentSeq &&\n        indentStep.length >= 2 &&\n        !ctx.inFlow &&\n        !explicitKey &&\n        isSeq(value) &&\n        !value.flow &&\n        !value.tag &&\n        !value.anchor) {\n        // If indentSeq === false, consider '- ' as part of indentation where possible\n        ctx.indent = ctx.indent.substring(2);\n    }\n    let valueCommentDone = false;\n    const valueStr = stringify(value, ctx, () => (valueCommentDone = true), () => (chompKeep = true));\n    let ws = ' ';\n    if (keyComment || vsb || vcb) {\n        ws = vsb ? '\\n' : '';\n        if (vcb) {\n            const cs = commentString(vcb);\n            ws += `\\n${indentComment(cs, ctx.indent)}`;\n        }\n        if (valueStr === '' && !ctx.inFlow) {\n            if (ws === '\\n')\n                ws = '\\n\\n';\n        }\n        else {\n            ws += `\\n${ctx.indent}`;\n        }\n    }\n    else if (!explicitKey && isCollection(value)) {\n        const vs0 = valueStr[0];\n        const nl0 = valueStr.indexOf('\\n');\n        const hasNewline = nl0 !== -1;\n        const flow = ctx.inFlow ?? value.flow ?? value.items.length === 0;\n        if (hasNewline || !flow) {\n            let hasPropsLine = false;\n            if (hasNewline && (vs0 === '&' || vs0 === '!')) {\n                let sp0 = valueStr.indexOf(' ');\n                if (vs0 === '&' &&\n                    sp0 !== -1 &&\n                    sp0 < nl0 &&\n                    valueStr[sp0 + 1] === '!') {\n                    sp0 = valueStr.indexOf(' ', sp0 + 1);\n                }\n                if (sp0 === -1 || nl0 < sp0)\n                    hasPropsLine = true;\n            }\n            if (!hasPropsLine)\n                ws = `\\n${ctx.indent}`;\n        }\n    }\n    else if (valueStr === '' || valueStr[0] === '\\n') {\n        ws = '';\n    }\n    str += ws + valueStr;\n    if (ctx.inFlow) {\n        if (valueCommentDone && onComment)\n            onComment();\n    }\n    else if (valueComment && !valueCommentDone) {\n        str += lineComment(str, ctx.indent, commentString(valueComment));\n    }\n    else if (chompKeep && onChompKeep) {\n        onChompKeep();\n    }\n    return str;\n}\n\nexport { stringifyPair };\n","import { Collection } from '../nodes/Collection.js';\nimport { isNode, isPair } from '../nodes/Node.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyCollection(collection, ctx, options) {\n    const flow = ctx.inFlow ?? collection.flow;\n    const stringify = flow ? stringifyFlowCollection : stringifyBlockCollection;\n    return stringify(collection, ctx, options);\n}\nfunction stringifyBlockCollection({ comment, items }, ctx, { blockItemPrefix, flowChars, itemIndent, onChompKeep, onComment }) {\n    const { indent, options: { commentString } } = ctx;\n    const itemCtx = Object.assign({}, ctx, { indent: itemIndent, type: null });\n    let chompKeep = false; // flag for the preceding node's status\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (!chompKeep && item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, chompKeep);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (!chompKeep && ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, chompKeep);\n            }\n        }\n        chompKeep = false;\n        let str = stringify(item, itemCtx, () => (comment = null), () => (chompKeep = true));\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (chompKeep && comment)\n            chompKeep = false;\n        lines.push(blockItemPrefix + str);\n    }\n    let str;\n    if (lines.length === 0) {\n        str = flowChars.start + flowChars.end;\n    }\n    else {\n        str = lines[0];\n        for (let i = 1; i < lines.length; ++i) {\n            const line = lines[i];\n            str += line ? `\\n${indent}${line}` : '\\n';\n        }\n    }\n    if (comment) {\n        str += '\\n' + indentComment(commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    else if (chompKeep && onChompKeep)\n        onChompKeep();\n    return str;\n}\nfunction stringifyFlowCollection({ comment, items }, ctx, { flowChars, itemIndent, onComment }) {\n    const { indent, indentStep, flowCollectionPadding: fcPadding, options: { commentString } } = ctx;\n    itemIndent += indentStep;\n    const itemCtx = Object.assign({}, ctx, {\n        indent: itemIndent,\n        inFlow: true,\n        type: null\n    });\n    let reqNewline = false;\n    let linesAtValue = 0;\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, false);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, false);\n                if (ik.comment)\n                    reqNewline = true;\n            }\n            const iv = isNode(item.value) ? item.value : null;\n            if (iv) {\n                if (iv.comment)\n                    comment = iv.comment;\n                if (iv.commentBefore)\n                    reqNewline = true;\n            }\n            else if (item.value == null && ik && ik.comment) {\n                comment = ik.comment;\n            }\n        }\n        if (comment)\n            reqNewline = true;\n        let str = stringify(item, itemCtx, () => (comment = null));\n        if (i < items.length - 1)\n            str += ',';\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (!reqNewline && (lines.length > linesAtValue || str.includes('\\n')))\n            reqNewline = true;\n        lines.push(str);\n        linesAtValue = lines.length;\n    }\n    let str;\n    const { start, end } = flowChars;\n    if (lines.length === 0) {\n        str = start + end;\n    }\n    else {\n        if (!reqNewline) {\n            const len = lines.reduce((sum, line) => sum + line.length + 2, 2);\n            reqNewline = len > Collection.maxFlowStringSingleLineLength;\n        }\n        if (reqNewline) {\n            str = start;\n            for (const line of lines)\n                str += line ? `\\n${indentStep}${indent}${line}` : '\\n';\n            str += `\\n${indent}${end}`;\n        }\n        else {\n            str = `${start}${fcPadding}${lines.join(' ')}${fcPadding}${end}`;\n        }\n    }\n    if (comment) {\n        str += lineComment(str, commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    return str;\n}\nfunction addCommentBefore({ indent, options: { commentString } }, lines, comment, chompKeep) {\n    if (comment && chompKeep)\n        comment = comment.replace(/^\\n+/, '');\n    if (comment) {\n        const ic = indentComment(commentString(comment), indent);\n        lines.push(ic.trimStart()); // Avoid double indent on first line\n    }\n}\n\nexport { stringifyCollection };\n","import { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { Collection } from './Collection.js';\nimport { isPair, isScalar, MAP } from './Node.js';\nimport { Pair } from './Pair.js';\nimport { isScalarValue } from './Scalar.js';\n\nfunction findPair(items, key) {\n    const k = isScalar(key) ? key.value : key;\n    for (const it of items) {\n        if (isPair(it)) {\n            if (it.key === key || it.key === k)\n                return it;\n            if (isScalar(it.key) && it.key.value === k)\n                return it;\n        }\n    }\n    return undefined;\n}\nclass YAMLMap extends Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:map';\n    }\n    constructor(schema) {\n        super(MAP, schema);\n        this.items = [];\n    }\n    /**\n     * Adds a value to the collection.\n     *\n     * @param overwrite - If not set `true`, using a key that is already in the\n     *   collection will throw. Otherwise, overwrites the previous value.\n     */\n    add(pair, overwrite) {\n        let _pair;\n        if (isPair(pair))\n            _pair = pair;\n        else if (!pair || typeof pair !== 'object' || !('key' in pair)) {\n            // In TypeScript, this never happens.\n            _pair = new Pair(pair, pair?.value);\n        }\n        else\n            _pair = new Pair(pair.key, pair.value);\n        const prev = findPair(this.items, _pair.key);\n        const sortEntries = this.schema?.sortMapEntries;\n        if (prev) {\n            if (!overwrite)\n                throw new Error(`Key ${_pair.key} already set`);\n            // For scalars, keep the old node & its comments and anchors\n            if (isScalar(prev.value) && isScalarValue(_pair.value))\n                prev.value.value = _pair.value;\n            else\n                prev.value = _pair.value;\n        }\n        else if (sortEntries) {\n            const i = this.items.findIndex(item => sortEntries(_pair, item) < 0);\n            if (i === -1)\n                this.items.push(_pair);\n            else\n                this.items.splice(i, 0, _pair);\n        }\n        else {\n            this.items.push(_pair);\n        }\n    }\n    delete(key) {\n        const it = findPair(this.items, key);\n        if (!it)\n            return false;\n        const del = this.items.splice(this.items.indexOf(it), 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const it = findPair(this.items, key);\n        const node = it?.value;\n        return (!keepScalar && isScalar(node) ? node.value : node) ?? undefined;\n    }\n    has(key) {\n        return !!findPair(this.items, key);\n    }\n    set(key, value) {\n        this.add(new Pair(key, value), true);\n    }\n    /**\n     * @param ctx - Conversion context, originally set in Document#toJS()\n     * @param {Class} Type - If set, forces the returned collection type\n     * @returns Instance of Type, Map, or Object\n     */\n    toJSON(_, ctx, Type) {\n        const map = Type ? new Type() : ctx?.mapAsMap ? new Map() : {};\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const item of this.items)\n            addPairToJSMap(ctx, map, item);\n        return map;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        for (const item of this.items) {\n            if (!isPair(item))\n                throw new Error(`Map items must all be pairs; found ${JSON.stringify(item)} instead`);\n        }\n        if (!ctx.allNullValues && this.hasAllNullValues(false))\n            ctx = Object.assign({}, ctx, { allNullValues: true });\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '',\n            flowChars: { start: '{', end: '}' },\n            itemIndent: ctx.indent || '',\n            onChompKeep,\n            onComment\n        });\n    }\n}\n\nexport { YAMLMap, findPair };\n","import { isMap } from '../../nodes/Node.js';\nimport { createPair } from '../../nodes/Pair.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\n\nfunction createMap(schema, obj, ctx) {\n    const { keepUndefined, replacer } = ctx;\n    const map = new YAMLMap(schema);\n    const add = (key, value) => {\n        if (typeof replacer === 'function')\n            value = replacer.call(obj, key, value);\n        else if (Array.isArray(replacer) && !replacer.includes(key))\n            return;\n        if (value !== undefined || keepUndefined)\n            map.items.push(createPair(key, value, ctx));\n    };\n    if (obj instanceof Map) {\n        for (const [key, value] of obj)\n            add(key, value);\n    }\n    else if (obj && typeof obj === 'object') {\n        for (const key of Object.keys(obj))\n            add(key, obj[key]);\n    }\n    if (typeof schema.sortMapEntries === 'function') {\n        map.items.sort(schema.sortMapEntries);\n    }\n    return map;\n}\nconst map = {\n    collection: 'map',\n    createNode: createMap,\n    default: true,\n    nodeClass: YAMLMap,\n    tag: 'tag:yaml.org,2002:map',\n    resolve(map, onError) {\n        if (!isMap(map))\n            onError('Expected a mapping for this tag');\n        return map;\n    }\n};\n\nexport { map };\n","import { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { Collection } from './Collection.js';\nimport { SEQ, isScalar } from './Node.js';\nimport { isScalarValue } from './Scalar.js';\nimport { toJS } from './toJS.js';\n\nclass YAMLSeq extends Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:seq';\n    }\n    constructor(schema) {\n        super(SEQ, schema);\n        this.items = [];\n    }\n    add(value) {\n        this.items.push(value);\n    }\n    /**\n     * Removes a value from the collection.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     *\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return false;\n        const del = this.items.splice(idx, 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return undefined;\n        const it = this.items[idx];\n        return !keepScalar && isScalar(it) ? it.value : it;\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     */\n    has(key) {\n        const idx = asItemIndex(key);\n        return typeof idx === 'number' && idx < this.items.length;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     *\n     * If `key` does not contain a representation of an integer, this will throw.\n     * It may be wrapped in a `Scalar`.\n     */\n    set(key, value) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            throw new Error(`Expected a valid index, not ${key}.`);\n        const prev = this.items[idx];\n        if (isScalar(prev) && isScalarValue(value))\n            prev.value = value;\n        else\n            this.items[idx] = value;\n    }\n    toJSON(_, ctx) {\n        const seq = [];\n        if (ctx?.onCreate)\n            ctx.onCreate(seq);\n        let i = 0;\n        for (const item of this.items)\n            seq.push(toJS(item, String(i++), ctx));\n        return seq;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '- ',\n            flowChars: { start: '[', end: ']' },\n            itemIndent: (ctx.indent || '') + '  ',\n            onChompKeep,\n            onComment\n        });\n    }\n}\nfunction asItemIndex(key) {\n    let idx = isScalar(key) ? key.value : key;\n    if (idx && typeof idx === 'string')\n        idx = Number(idx);\n    return typeof idx === 'number' && Number.isInteger(idx) && idx >= 0\n        ? idx\n        : null;\n}\n\nexport { YAMLSeq };\n","import { createNode } from '../../doc/createNode.js';\nimport { isSeq } from '../../nodes/Node.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nfunction createSeq(schema, obj, ctx) {\n    const { replacer } = ctx;\n    const seq = new YAMLSeq(schema);\n    if (obj && Symbol.iterator in Object(obj)) {\n        let i = 0;\n        for (let it of obj) {\n            if (typeof replacer === 'function') {\n                const key = obj instanceof Set ? it : String(i++);\n                it = replacer.call(obj, key, it);\n            }\n            seq.items.push(createNode(it, undefined, ctx));\n        }\n    }\n    return seq;\n}\nconst seq = {\n    collection: 'seq',\n    createNode: createSeq,\n    default: true,\n    nodeClass: YAMLSeq,\n    tag: 'tag:yaml.org,2002:seq',\n    resolve(seq, onError) {\n        if (!isSeq(seq))\n            onError('Expected a sequence for this tag');\n        return seq;\n    }\n};\n\nexport { seq };\n","import { stringifyString } from '../../stringify/stringifyString.js';\n\nconst string = {\n    identify: value => typeof value === 'string',\n    default: true,\n    tag: 'tag:yaml.org,2002:str',\n    resolve: str => str,\n    stringify(item, ctx, onComment, onChompKeep) {\n        ctx = Object.assign({ actualString: true }, ctx);\n        return stringifyString(item, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { string };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nconst nullTag = {\n    identify: value => value == null,\n    createNode: () => new Scalar(null),\n    default: true,\n    tag: 'tag:yaml.org,2002:null',\n    test: /^(?:~|[Nn]ull|NULL)?$/,\n    resolve: () => new Scalar(null),\n    stringify: ({ source }, ctx) => typeof source === 'string' && nullTag.test.test(source)\n        ? source\n        : ctx.options.nullStr\n};\n\nexport { nullTag };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nconst boolTag = {\n    identify: value => typeof value === 'boolean',\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n    resolve: str => new Scalar(str[0] === 't' || str[0] === 'T'),\n    stringify({ source, value }, ctx) {\n        if (source && boolTag.test.test(source)) {\n            const sv = source[0] === 't' || source[0] === 'T';\n            if (value === sv)\n                return source;\n        }\n        return value ? ctx.options.trueStr : ctx.options.falseStr;\n    }\n};\n\nexport { boolTag };\n","function stringifyNumber({ format, minFractionDigits, tag, value }) {\n    if (typeof value === 'bigint')\n        return String(value);\n    const num = typeof value === 'number' ? value : Number(value);\n    if (!isFinite(num))\n        return isNaN(num) ? '.nan' : num < 0 ? '-.inf' : '.inf';\n    let n = JSON.stringify(value);\n    if (!format &&\n        minFractionDigits &&\n        (!tag || tag === 'tag:yaml.org,2002:float') &&\n        /^\\d/.test(n)) {\n        let i = n.indexOf('.');\n        if (i < 0) {\n            i = n.length;\n            n += '.';\n        }\n        let d = minFractionDigits - (n.length - i - 1);\n        while (d-- > 0)\n            n += '0';\n    }\n    return n;\n}\n\nexport { stringifyNumber };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF|nan|NaN|NAN))$/,\n    resolve: str => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)[eE][-+]?[0-9]+$/,\n    resolve: str => parseFloat(str),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+\\.[0-9]*)$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str));\n        const dot = str.indexOf('.');\n        if (dot !== -1 && str[str.length - 1] === '0')\n            node.minFractionDigits = str.length - dot - 1;\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nconst intResolve = (str, offset, radix, { intAsBigInt }) => (intAsBigInt ? BigInt(str) : parseInt(str.substring(offset), radix));\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value) && value >= 0)\n        return prefix + value.toString(radix);\n    return stringifyNumber(node);\n}\nconst intOct = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^0o[0-7]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 8, opt),\n    stringify: node => intStringify(node, 8, '0o')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^0x[0-9a-fA-F]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intHex, intOct };\n","import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { boolTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intOct, int, intHex } from './int.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    boolTag,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float\n];\n\nexport { schema };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { map } from '../common/map.js';\nimport { seq } from '../common/seq.js';\n\nfunction intIdentify(value) {\n    return typeof value === 'bigint' || Number.isInteger(value);\n}\nconst stringifyJSON = ({ value }) => JSON.stringify(value);\nconst jsonScalars = [\n    {\n        identify: value => typeof value === 'string',\n        default: true,\n        tag: 'tag:yaml.org,2002:str',\n        resolve: str => str,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => value == null,\n        createNode: () => new Scalar(null),\n        default: true,\n        tag: 'tag:yaml.org,2002:null',\n        test: /^null$/,\n        resolve: () => null,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => typeof value === 'boolean',\n        default: true,\n        tag: 'tag:yaml.org,2002:bool',\n        test: /^true|false$/,\n        resolve: str => str === 'true',\n        stringify: stringifyJSON\n    },\n    {\n        identify: intIdentify,\n        default: true,\n        tag: 'tag:yaml.org,2002:int',\n        test: /^-?(?:0|[1-9][0-9]*)$/,\n        resolve: (str, _onError, { intAsBigInt }) => intAsBigInt ? BigInt(str) : parseInt(str, 10),\n        stringify: ({ value }) => intIdentify(value) ? value.toString() : JSON.stringify(value)\n    },\n    {\n        identify: value => typeof value === 'number',\n        default: true,\n        tag: 'tag:yaml.org,2002:float',\n        test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n        resolve: str => parseFloat(str),\n        stringify: stringifyJSON\n    }\n];\nconst jsonError = {\n    default: true,\n    tag: '',\n    test: /^/,\n    resolve(str, onError) {\n        onError(`Unresolved plain scalar ${JSON.stringify(str)}`);\n        return str;\n    }\n};\nconst schema = [map, seq].concat(jsonScalars, jsonError);\n\nexport { schema };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyString } from '../../stringify/stringifyString.js';\n\nconst binary = {\n    identify: value => value instanceof Uint8Array,\n    default: false,\n    tag: 'tag:yaml.org,2002:binary',\n    /**\n     * Returns a Buffer in node and an Uint8Array in browsers\n     *\n     * To use the resulting buffer as an image, you'll want to do something like:\n     *\n     *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n     *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n     */\n    resolve(src, onError) {\n        if (typeof Buffer === 'function') {\n            return Buffer.from(src, 'base64');\n        }\n        else if (typeof atob === 'function') {\n            // On IE 11, atob() can't handle newlines\n            const str = atob(src.replace(/[\\n\\r]/g, ''));\n            const buffer = new Uint8Array(str.length);\n            for (let i = 0; i < str.length; ++i)\n                buffer[i] = str.charCodeAt(i);\n            return buffer;\n        }\n        else {\n            onError('This environment does not support reading binary tags; either Buffer or atob is required');\n            return src;\n        }\n    },\n    stringify({ comment, type, value }, ctx, onComment, onChompKeep) {\n        const buf = value; // checked earlier by binary.identify()\n        let str;\n        if (typeof Buffer === 'function') {\n            str =\n                buf instanceof Buffer\n                    ? buf.toString('base64')\n                    : Buffer.from(buf.buffer).toString('base64');\n        }\n        else if (typeof btoa === 'function') {\n            let s = '';\n            for (let i = 0; i < buf.length; ++i)\n                s += String.fromCharCode(buf[i]);\n            str = btoa(s);\n        }\n        else {\n            throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n        }\n        if (!type)\n            type = Scalar.BLOCK_LITERAL;\n        if (type !== Scalar.QUOTE_DOUBLE) {\n            const lineWidth = Math.max(ctx.options.lineWidth - ctx.indent.length, ctx.options.minContentWidth);\n            const n = Math.ceil(str.length / lineWidth);\n            const lines = new Array(n);\n            for (let i = 0, o = 0; i < n; ++i, o += lineWidth) {\n                lines[i] = str.substr(o, lineWidth);\n            }\n            str = lines.join(type === Scalar.BLOCK_LITERAL ? '\\n' : ' ');\n        }\n        return stringifyString({ comment, type, value: str }, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { binary };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { isSeq, isPair, isMap } from '../../nodes/Node.js';\nimport { Pair, createPair } from '../../nodes/Pair.js';\nimport { Scalar } from '../../nodes/Scalar.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nfunction resolvePairs(seq, onError) {\n    if (isSeq(seq)) {\n        for (let i = 0; i < seq.items.length; ++i) {\n            let item = seq.items[i];\n            if (isPair(item))\n                continue;\n            else if (isMap(item)) {\n                if (item.items.length > 1)\n                    onError('Each pair must have its own sequence indicator');\n                const pair = item.items[0] || new Pair(new Scalar(null));\n                if (item.commentBefore)\n                    pair.key.commentBefore = pair.key.commentBefore\n                        ? `${item.commentBefore}\\n${pair.key.commentBefore}`\n                        : item.commentBefore;\n                if (item.comment) {\n                    const cn = pair.value ?? pair.key;\n                    cn.comment = cn.comment\n                        ? `${item.comment}\\n${cn.comment}`\n                        : item.comment;\n                }\n                item = pair;\n            }\n            seq.items[i] = isPair(item) ? item : new Pair(item);\n        }\n    }\n    else\n        onError('Expected a sequence for this tag');\n    return seq;\n}\nfunction createPairs(schema, iterable, ctx) {\n    const { replacer } = ctx;\n    const pairs = new YAMLSeq(schema);\n    pairs.tag = 'tag:yaml.org,2002:pairs';\n    let i = 0;\n    if (iterable && Symbol.iterator in Object(iterable))\n        for (let it of iterable) {\n            if (typeof replacer === 'function')\n                it = replacer.call(iterable, String(i++), it);\n            let key, value;\n            if (Array.isArray(it)) {\n                if (it.length === 2) {\n                    key = it[0];\n                    value = it[1];\n                }\n                else\n                    throw new TypeError(`Expected [key, value] tuple: ${it}`);\n            }\n            else if (it && it instanceof Object) {\n                const keys = Object.keys(it);\n                if (keys.length === 1) {\n                    key = keys[0];\n                    value = it[key];\n                }\n                else\n                    throw new TypeError(`Expected { key: value } tuple: ${it}`);\n            }\n            else {\n                key = it;\n            }\n            pairs.items.push(createPair(key, value, ctx));\n        }\n    return pairs;\n}\nconst pairs = {\n    collection: 'seq',\n    default: false,\n    tag: 'tag:yaml.org,2002:pairs',\n    resolve: resolvePairs,\n    createNode: createPairs\n};\n\nexport { createPairs, pairs, resolvePairs };\n","import { YAMLSeq } from '../../nodes/YAMLSeq.js';\nimport { toJS } from '../../nodes/toJS.js';\nimport { isScalar, isPair } from '../../nodes/Node.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\nimport { resolvePairs, createPairs } from './pairs.js';\n\nclass YAMLOMap extends YAMLSeq {\n    constructor() {\n        super();\n        this.add = YAMLMap.prototype.add.bind(this);\n        this.delete = YAMLMap.prototype.delete.bind(this);\n        this.get = YAMLMap.prototype.get.bind(this);\n        this.has = YAMLMap.prototype.has.bind(this);\n        this.set = YAMLMap.prototype.set.bind(this);\n        this.tag = YAMLOMap.tag;\n    }\n    /**\n     * If `ctx` is given, the return type is actually `Map<unknown, unknown>`,\n     * but TypeScript won't allow widening the signature of a child method.\n     */\n    toJSON(_, ctx) {\n        if (!ctx)\n            return super.toJSON(_);\n        const map = new Map();\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const pair of this.items) {\n            let key, value;\n            if (isPair(pair)) {\n                key = toJS(pair.key, '', ctx);\n                value = toJS(pair.value, key, ctx);\n            }\n            else {\n                key = toJS(pair, '', ctx);\n            }\n            if (map.has(key))\n                throw new Error('Ordered maps must not include duplicate keys');\n            map.set(key, value);\n        }\n        return map;\n    }\n}\nYAMLOMap.tag = 'tag:yaml.org,2002:omap';\nconst omap = {\n    collection: 'seq',\n    identify: value => value instanceof Map,\n    nodeClass: YAMLOMap,\n    default: false,\n    tag: 'tag:yaml.org,2002:omap',\n    resolve(seq, onError) {\n        const pairs = resolvePairs(seq, onError);\n        const seenKeys = [];\n        for (const { key } of pairs.items) {\n            if (isScalar(key)) {\n                if (seenKeys.includes(key.value)) {\n                    onError(`Ordered maps must not include duplicate keys: ${key.value}`);\n                }\n                else {\n                    seenKeys.push(key.value);\n                }\n            }\n        }\n        return Object.assign(new YAMLOMap(), pairs);\n    },\n    createNode(schema, iterable, ctx) {\n        const pairs = createPairs(schema, iterable, ctx);\n        const omap = new YAMLOMap();\n        omap.items = pairs.items;\n        return omap;\n    }\n};\n\nexport { YAMLOMap, omap };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nfunction boolStringify({ value, source }, ctx) {\n    const boolObj = value ? trueTag : falseTag;\n    if (source && boolObj.test.test(source))\n        return source;\n    return value ? ctx.options.trueStr : ctx.options.falseStr;\n}\nconst trueTag = {\n    identify: value => value === true,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n    resolve: () => new Scalar(true),\n    stringify: boolStringify\n};\nconst falseTag = {\n    identify: value => value === false,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/i,\n    resolve: () => new Scalar(false),\n    stringify: boolStringify\n};\n\nexport { falseTag, trueTag };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?\\.(?:inf|Inf|INF|nan|NaN|NAN)$/,\n    resolve: (str) => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:[0-9][0-9_]*)?(?:\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n    resolve: (str) => parseFloat(str.replace(/_/g, '')),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:[0-9][0-9_]*)?\\.[0-9_]*$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str.replace(/_/g, '')));\n        const dot = str.indexOf('.');\n        if (dot !== -1) {\n            const f = str.substring(dot + 1).replace(/_/g, '');\n            if (f[f.length - 1] === '0')\n                node.minFractionDigits = f.length;\n        }\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nfunction intResolve(str, offset, radix, { intAsBigInt }) {\n    const sign = str[0];\n    if (sign === '-' || sign === '+')\n        offset += 1;\n    str = str.substring(offset).replace(/_/g, '');\n    if (intAsBigInt) {\n        switch (radix) {\n            case 2:\n                str = `0b${str}`;\n                break;\n            case 8:\n                str = `0o${str}`;\n                break;\n            case 16:\n                str = `0x${str}`;\n                break;\n        }\n        const n = BigInt(str);\n        return sign === '-' ? BigInt(-1) * n : n;\n    }\n    const n = parseInt(str, radix);\n    return sign === '-' ? -1 * n : n;\n}\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value)) {\n        const str = value.toString(radix);\n        return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n    }\n    return stringifyNumber(node);\n}\nconst intBin = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'BIN',\n    test: /^[-+]?0b[0-1_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 2, opt),\n    stringify: node => intStringify(node, 2, '0b')\n};\nconst intOct = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^[-+]?0[0-7_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 1, 8, opt),\n    stringify: node => intStringify(node, 8, '0')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9][0-9_]*$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^[-+]?0x[0-9a-fA-F_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intBin, intHex, intOct };\n","import { isMap, isPair, isScalar } from '../../nodes/Node.js';\nimport { createPair, Pair } from '../../nodes/Pair.js';\nimport { YAMLMap, findPair } from '../../nodes/YAMLMap.js';\n\nclass YAMLSet extends YAMLMap {\n    constructor(schema) {\n        super(schema);\n        this.tag = YAMLSet.tag;\n    }\n    add(key) {\n        let pair;\n        if (isPair(key))\n            pair = key;\n        else if (key &&\n            typeof key === 'object' &&\n            'key' in key &&\n            'value' in key &&\n            key.value === null)\n            pair = new Pair(key.key, null);\n        else\n            pair = new Pair(key, null);\n        const prev = findPair(this.items, pair.key);\n        if (!prev)\n            this.items.push(pair);\n    }\n    /**\n     * If `keepPair` is `true`, returns the Pair matching `key`.\n     * Otherwise, returns the value of that Pair's key.\n     */\n    get(key, keepPair) {\n        const pair = findPair(this.items, key);\n        return !keepPair && isPair(pair)\n            ? isScalar(pair.key)\n                ? pair.key.value\n                : pair.key\n            : pair;\n    }\n    set(key, value) {\n        if (typeof value !== 'boolean')\n            throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof value}`);\n        const prev = findPair(this.items, key);\n        if (prev && !value) {\n            this.items.splice(this.items.indexOf(prev), 1);\n        }\n        else if (!prev && value) {\n            this.items.push(new Pair(key));\n        }\n    }\n    toJSON(_, ctx) {\n        return super.toJSON(_, ctx, Set);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        if (this.hasAllNullValues(true))\n            return super.toString(Object.assign({}, ctx, { allNullValues: true }), onComment, onChompKeep);\n        else\n            throw new Error('Set items must all have null values');\n    }\n}\nYAMLSet.tag = 'tag:yaml.org,2002:set';\nconst set = {\n    collection: 'map',\n    identify: value => value instanceof Set,\n    nodeClass: YAMLSet,\n    default: false,\n    tag: 'tag:yaml.org,2002:set',\n    resolve(map, onError) {\n        if (isMap(map)) {\n            if (map.hasAllNullValues(true))\n                return Object.assign(new YAMLSet(), map);\n            else\n                onError('Set items must all have null values');\n        }\n        else\n            onError('Expected a mapping for this tag');\n        return map;\n    },\n    createNode(schema, iterable, ctx) {\n        const { replacer } = ctx;\n        const set = new YAMLSet(schema);\n        if (iterable && Symbol.iterator in Object(iterable))\n            for (let value of iterable) {\n                if (typeof replacer === 'function')\n                    value = replacer.call(iterable, value, value);\n                set.items.push(createPair(value, null, ctx));\n            }\n        return set;\n    }\n};\n\nexport { YAMLSet, set };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\n/** Internal types handle bigint as number, because TS can't figure it out. */\nfunction parseSexagesimal(str, asBigInt) {\n    const sign = str[0];\n    const parts = sign === '-' || sign === '+' ? str.substring(1) : str;\n    const num = (n) => asBigInt ? BigInt(n) : Number(n);\n    const res = parts\n        .replace(/_/g, '')\n        .split(':')\n        .reduce((res, p) => res * num(60) + num(p), num(0));\n    return (sign === '-' ? num(-1) * res : res);\n}\n/**\n * hhhh:mm:ss.sss\n *\n * Internal types handle bigint as number, because TS can't figure it out.\n */\nfunction stringifySexagesimal(node) {\n    let { value } = node;\n    let num = (n) => n;\n    if (typeof value === 'bigint')\n        num = n => BigInt(n);\n    else if (isNaN(value) || !isFinite(value))\n        return stringifyNumber(node);\n    let sign = '';\n    if (value < 0) {\n        sign = '-';\n        value *= num(-1);\n    }\n    const _60 = num(60);\n    const parts = [value % _60]; // seconds, including ms\n    if (value < 60) {\n        parts.unshift(0); // at least one : is required\n    }\n    else {\n        value = (value - parts[0]) / _60;\n        parts.unshift(value % _60); // minutes\n        if (value >= 60) {\n            value = (value - parts[0]) / _60;\n            parts.unshift(value); // hours\n        }\n    }\n    return (sign +\n        parts\n            .map(n => (n < 10 ? '0' + String(n) : String(n)))\n            .join(':')\n            .replace(/000000\\d*$/, '') // % 60 may introduce error\n    );\n}\nconst intTime = {\n    identify: value => typeof value === 'bigint' || Number.isInteger(value),\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,\n    resolve: (str, _onError, { intAsBigInt }) => parseSexagesimal(str, intAsBigInt),\n    stringify: stringifySexagesimal\n};\nconst floatTime = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*$/,\n    resolve: str => parseSexagesimal(str, false),\n    stringify: stringifySexagesimal\n};\nconst timestamp = {\n    identify: value => value instanceof Date,\n    default: true,\n    tag: 'tag:yaml.org,2002:timestamp',\n    // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n    // may be omitted altogether, resulting in a date format. In such a case, the time part is\n    // assumed to be 00:00:00Z (start of day, UTC).\n    test: RegExp('^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n        '(?:' + // time is optional\n        '(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n        '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n        '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n        ')?$'),\n    resolve(str) {\n        const match = str.match(timestamp.test);\n        if (!match)\n            throw new Error('!!timestamp expects a date, starting with yyyy-mm-dd');\n        const [, year, month, day, hour, minute, second] = match.map(Number);\n        const millisec = match[7] ? Number((match[7] + '00').substr(1, 3)) : 0;\n        let date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec);\n        const tz = match[8];\n        if (tz && tz !== 'Z') {\n            let d = parseSexagesimal(tz, false);\n            if (Math.abs(d) < 30)\n                d *= 60;\n            date -= 60000 * d;\n        }\n        return new Date(date);\n    },\n    stringify: ({ value }) => value.toISOString().replace(/((T00:00)?:00)?\\.000Z$/, '')\n};\n\nexport { floatTime, intTime, timestamp };\n","import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { binary } from './binary.js';\nimport { trueTag, falseTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intBin, intOct, int, intHex } from './int.js';\nimport { omap } from './omap.js';\nimport { pairs } from './pairs.js';\nimport { set } from './set.js';\nimport { intTime, floatTime, timestamp } from './timestamp.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    trueTag,\n    falseTag,\n    intBin,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float,\n    binary,\n    omap,\n    pairs,\n    set,\n    intTime,\n    floatTime,\n    timestamp\n];\n\nexport { schema };\n","import { map } from './common/map.js';\nimport { nullTag } from './common/null.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { boolTag } from './core/bool.js';\nimport { float, floatExp, floatNaN } from './core/float.js';\nimport { int, intHex, intOct } from './core/int.js';\nimport { schema } from './core/schema.js';\nimport { schema as schema$1 } from './json/schema.js';\nimport { binary } from './yaml-1.1/binary.js';\nimport { omap } from './yaml-1.1/omap.js';\nimport { pairs } from './yaml-1.1/pairs.js';\nimport { schema as schema$2 } from './yaml-1.1/schema.js';\nimport { set } from './yaml-1.1/set.js';\nimport { floatTime, intTime, timestamp } from './yaml-1.1/timestamp.js';\n\nconst schemas = new Map([\n    ['core', schema],\n    ['failsafe', [map, seq, string]],\n    ['json', schema$1],\n    ['yaml11', schema$2],\n    ['yaml-1.1', schema$2]\n]);\nconst tagsByName = {\n    binary,\n    bool: boolTag,\n    float,\n    floatExp,\n    floatNaN,\n    floatTime,\n    int,\n    intHex,\n    intOct,\n    intTime,\n    map,\n    null: nullTag,\n    omap,\n    pairs,\n    seq,\n    set,\n    timestamp\n};\nconst coreKnownTags = {\n    'tag:yaml.org,2002:binary': binary,\n    'tag:yaml.org,2002:omap': omap,\n    'tag:yaml.org,2002:pairs': pairs,\n    'tag:yaml.org,2002:set': set,\n    'tag:yaml.org,2002:timestamp': timestamp\n};\nfunction getTags(customTags, schemaName) {\n    let tags = schemas.get(schemaName);\n    if (!tags) {\n        if (Array.isArray(customTags))\n            tags = [];\n        else {\n            const keys = Array.from(schemas.keys())\n                .filter(key => key !== 'yaml11')\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown schema \"${schemaName}\"; use one of ${keys} or define customTags array`);\n        }\n    }\n    if (Array.isArray(customTags)) {\n        for (const tag of customTags)\n            tags = tags.concat(tag);\n    }\n    else if (typeof customTags === 'function') {\n        tags = customTags(tags.slice());\n    }\n    return tags.map(tag => {\n        if (typeof tag !== 'string')\n            return tag;\n        const tagObj = tagsByName[tag];\n        if (tagObj)\n            return tagObj;\n        const keys = Object.keys(tagsByName)\n            .map(key => JSON.stringify(key))\n            .join(', ');\n        throw new Error(`Unknown custom tag \"${tag}\"; use one of ${keys}`);\n    });\n}\n\nexport { coreKnownTags, getTags };\n","import { MAP, SCALAR, SEQ } from '../nodes/Node.js';\nimport { map } from './common/map.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { getTags, coreKnownTags } from './tags.js';\n\nconst sortMapEntriesByKey = (a, b) => a.key < b.key ? -1 : a.key > b.key ? 1 : 0;\nclass Schema {\n    constructor({ compat, customTags, merge, resolveKnownTags, schema, sortMapEntries, toStringDefaults }) {\n        this.compat = Array.isArray(compat)\n            ? getTags(compat, 'compat')\n            : compat\n                ? getTags(null, compat)\n                : null;\n        this.merge = !!merge;\n        this.name = (typeof schema === 'string' && schema) || 'core';\n        this.knownTags = resolveKnownTags ? coreKnownTags : {};\n        this.tags = getTags(customTags, this.name);\n        this.toStringOptions = toStringDefaults ?? null;\n        Object.defineProperty(this, MAP, { value: map });\n        Object.defineProperty(this, SCALAR, { value: string });\n        Object.defineProperty(this, SEQ, { value: seq });\n        // Used by createMap()\n        this.sortMapEntries =\n            typeof sortMapEntries === 'function'\n                ? sortMapEntries\n                : sortMapEntries === true\n                    ? sortMapEntriesByKey\n                    : null;\n    }\n    clone() {\n        const copy = Object.create(Schema.prototype, Object.getOwnPropertyDescriptors(this));\n        copy.tags = this.tags.slice();\n        return copy;\n    }\n}\n\nexport { Schema };\n","import { isNode } from '../nodes/Node.js';\nimport { createStringifyContext, stringify } from './stringify.js';\nimport { indentComment, lineComment } from './stringifyComment.js';\n\nfunction stringifyDocument(doc, options) {\n    const lines = [];\n    let hasDirectives = options.directives === true;\n    if (options.directives !== false && doc.directives) {\n        const dir = doc.directives.toString(doc);\n        if (dir) {\n            lines.push(dir);\n            hasDirectives = true;\n        }\n        else if (doc.directives.docStart)\n            hasDirectives = true;\n    }\n    if (hasDirectives)\n        lines.push('---');\n    const ctx = createStringifyContext(doc, options);\n    const { commentString } = ctx.options;\n    if (doc.commentBefore) {\n        if (lines.length !== 1)\n            lines.unshift('');\n        const cs = commentString(doc.commentBefore);\n        lines.unshift(indentComment(cs, ''));\n    }\n    let chompKeep = false;\n    let contentComment = null;\n    if (doc.contents) {\n        if (isNode(doc.contents)) {\n            if (doc.contents.spaceBefore && hasDirectives)\n                lines.push('');\n            if (doc.contents.commentBefore) {\n                const cs = commentString(doc.contents.commentBefore);\n                lines.push(indentComment(cs, ''));\n            }\n            // top-level block scalars need to be indented if followed by a comment\n            ctx.forceBlockIndent = !!doc.comment;\n            contentComment = doc.contents.comment;\n        }\n        const onChompKeep = contentComment ? undefined : () => (chompKeep = true);\n        let body = stringify(doc.contents, ctx, () => (contentComment = null), onChompKeep);\n        if (contentComment)\n            body += lineComment(body, '', commentString(contentComment));\n        if ((body[0] === '|' || body[0] === '>') &&\n            lines[lines.length - 1] === '---') {\n            // Top-level block scalars with a preceding doc marker ought to use the\n            // same line for their header.\n            lines[lines.length - 1] = `--- ${body}`;\n        }\n        else\n            lines.push(body);\n    }\n    else {\n        lines.push(stringify(doc.contents, ctx));\n    }\n    if (doc.directives?.docEnd) {\n        if (doc.comment) {\n            const cs = commentString(doc.comment);\n            if (cs.includes('\\n')) {\n                lines.push('...');\n                lines.push(indentComment(cs, ''));\n            }\n            else {\n                lines.push(`... ${cs}`);\n            }\n        }\n        else {\n            lines.push('...');\n        }\n    }\n    else {\n        let dc = doc.comment;\n        if (dc && chompKeep)\n            dc = dc.replace(/^\\n+/, '');\n        if (dc) {\n            if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '')\n                lines.push('');\n            lines.push(indentComment(commentString(dc), ''));\n        }\n    }\n    return lines.join('\\n') + '\\n';\n}\n\nexport { stringifyDocument };\n","/**\n * Applies the JSON.parse reviver algorithm as defined in the ECMA-262 spec,\n * in section 24.5.1.1 \"Runtime Semantics: InternalizeJSONProperty\" of the\n * 2021 edition: https://tc39.es/ecma262/#sec-json.parse\n *\n * Includes extensions for handling Map and Set objects.\n */\nfunction applyReviver(reviver, obj, key, val) {\n    if (val && typeof val === 'object') {\n        if (Array.isArray(val)) {\n            for (let i = 0, len = val.length; i < len; ++i) {\n                const v0 = val[i];\n                const v1 = applyReviver(reviver, val, String(i), v0);\n                if (v1 === undefined)\n                    delete val[i];\n                else if (v1 !== v0)\n                    val[i] = v1;\n            }\n        }\n        else if (val instanceof Map) {\n            for (const k of Array.from(val.keys())) {\n                const v0 = val.get(k);\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    val.delete(k);\n                else if (v1 !== v0)\n                    val.set(k, v1);\n            }\n        }\n        else if (val instanceof Set) {\n            for (const v0 of Array.from(val)) {\n                const v1 = applyReviver(reviver, val, v0, v0);\n                if (v1 === undefined)\n                    val.delete(v0);\n                else if (v1 !== v0) {\n                    val.delete(v0);\n                    val.add(v1);\n                }\n            }\n        }\n        else {\n            for (const [k, v0] of Object.entries(val)) {\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    delete val[k];\n                else if (v1 !== v0)\n                    val[k] = v1;\n            }\n        }\n    }\n    return reviver.call(obj, key, val);\n}\n\nexport { applyReviver };\n","import { Alias } from '../nodes/Alias.js';\nimport { isEmptyPath, collectionFromPath } from '../nodes/Collection.js';\nimport { NODE_TYPE, DOC, isNode, isCollection, isScalar } from '../nodes/Node.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { toJS } from '../nodes/toJS.js';\nimport { Schema } from '../schema/Schema.js';\nimport { stringify } from '../stringify/stringify.js';\nimport { stringifyDocument } from '../stringify/stringifyDocument.js';\nimport { anchorNames, findNewAnchor, createNodeAnchors } from './anchors.js';\nimport { applyReviver } from './applyReviver.js';\nimport { createNode } from './createNode.js';\nimport { Directives } from './directives.js';\n\nclass Document {\n    constructor(value, replacer, options) {\n        /** A comment before this Document */\n        this.commentBefore = null;\n        /** A comment immediately after this Document */\n        this.comment = null;\n        /** Errors encountered during parsing. */\n        this.errors = [];\n        /** Warnings encountered during parsing. */\n        this.warnings = [];\n        Object.defineProperty(this, NODE_TYPE, { value: DOC });\n        let _replacer = null;\n        if (typeof replacer === 'function' || Array.isArray(replacer)) {\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const opt = Object.assign({\n            intAsBigInt: false,\n            keepSourceTokens: false,\n            logLevel: 'warn',\n            prettyErrors: true,\n            strict: true,\n            uniqueKeys: true,\n            version: '1.2'\n        }, options);\n        this.options = opt;\n        let { version } = opt;\n        if (options?._directives) {\n            this.directives = options._directives.atDocument();\n            if (this.directives.yaml.explicit)\n                version = this.directives.yaml.version;\n        }\n        else\n            this.directives = new Directives({ version });\n        this.setSchema(version, options);\n        if (value === undefined)\n            this.contents = null;\n        else {\n            this.contents = this.createNode(value, _replacer, options);\n        }\n    }\n    /**\n     * Create a deep copy of this Document and its contents.\n     *\n     * Custom Node values that inherit from `Object` still refer to their original instances.\n     */\n    clone() {\n        const copy = Object.create(Document.prototype, {\n            [NODE_TYPE]: { value: DOC }\n        });\n        copy.commentBefore = this.commentBefore;\n        copy.comment = this.comment;\n        copy.errors = this.errors.slice();\n        copy.warnings = this.warnings.slice();\n        copy.options = Object.assign({}, this.options);\n        if (this.directives)\n            copy.directives = this.directives.clone();\n        copy.schema = this.schema.clone();\n        copy.contents = isNode(this.contents)\n            ? this.contents.clone(copy.schema)\n            : this.contents;\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** Adds a value to the document. */\n    add(value) {\n        if (assertCollection(this.contents))\n            this.contents.add(value);\n    }\n    /** Adds a value to the document. */\n    addIn(path, value) {\n        if (assertCollection(this.contents))\n            this.contents.addIn(path, value);\n    }\n    /**\n     * Create a new `Alias` node, ensuring that the target `node` has the required anchor.\n     *\n     * If `node` already has an anchor, `name` is ignored.\n     * Otherwise, the `node.anchor` value will be set to `name`,\n     * or if an anchor with that name is already present in the document,\n     * `name` will be used as a prefix for a new unique anchor.\n     * If `name` is undefined, the generated anchor will use 'a' as a prefix.\n     */\n    createAlias(node, name) {\n        if (!node.anchor) {\n            const prev = anchorNames(this);\n            node.anchor =\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                !name || prev.has(name) ? findNewAnchor(name || 'a', prev) : name;\n        }\n        return new Alias(node.anchor);\n    }\n    createNode(value, replacer, options) {\n        let _replacer = undefined;\n        if (typeof replacer === 'function') {\n            value = replacer.call({ '': value }, '', value);\n            _replacer = replacer;\n        }\n        else if (Array.isArray(replacer)) {\n            const keyToStr = (v) => typeof v === 'number' || v instanceof String || v instanceof Number;\n            const asStr = replacer.filter(keyToStr).map(String);\n            if (asStr.length > 0)\n                replacer = replacer.concat(asStr);\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const { aliasDuplicateObjects, anchorPrefix, flow, keepUndefined, onTagObj, tag } = options ?? {};\n        const { onAnchor, setAnchors, sourceObjects } = createNodeAnchors(this, \n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        anchorPrefix || 'a');\n        const ctx = {\n            aliasDuplicateObjects: aliasDuplicateObjects ?? true,\n            keepUndefined: keepUndefined ?? false,\n            onAnchor,\n            onTagObj,\n            replacer: _replacer,\n            schema: this.schema,\n            sourceObjects\n        };\n        const node = createNode(value, tag, ctx);\n        if (flow && isCollection(node))\n            node.flow = true;\n        setAnchors();\n        return node;\n    }\n    /**\n     * Convert a key and a value into a `Pair` using the current schema,\n     * recursively wrapping all values as `Scalar` or `Collection` nodes.\n     */\n    createPair(key, value, options = {}) {\n        const k = this.createNode(key, null, options);\n        const v = this.createNode(value, null, options);\n        return new Pair(k, v);\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        return assertCollection(this.contents) ? this.contents.delete(key) : false;\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        if (isEmptyPath(path)) {\n            if (this.contents == null)\n                return false;\n            this.contents = null;\n            return true;\n        }\n        return assertCollection(this.contents)\n            ? this.contents.deleteIn(path)\n            : false;\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    get(key, keepScalar) {\n        return isCollection(this.contents)\n            ? this.contents.get(key, keepScalar)\n            : undefined;\n    }\n    /**\n     * Returns item at `path`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        if (isEmptyPath(path))\n            return !keepScalar && isScalar(this.contents)\n                ? this.contents.value\n                : this.contents;\n        return isCollection(this.contents)\n            ? this.contents.getIn(path, keepScalar)\n            : undefined;\n    }\n    /**\n     * Checks if the document includes a value with the key `key`.\n     */\n    has(key) {\n        return isCollection(this.contents) ? this.contents.has(key) : false;\n    }\n    /**\n     * Checks if the document includes a value at `path`.\n     */\n    hasIn(path) {\n        if (isEmptyPath(path))\n            return this.contents !== undefined;\n        return isCollection(this.contents) ? this.contents.hasIn(path) : false;\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    set(key, value) {\n        if (this.contents == null) {\n            this.contents = collectionFromPath(this.schema, [key], value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.set(key, value);\n        }\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        if (isEmptyPath(path))\n            this.contents = value;\n        else if (this.contents == null) {\n            this.contents = collectionFromPath(this.schema, Array.from(path), value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.setIn(path, value);\n        }\n    }\n    /**\n     * Change the YAML version and schema used by the document.\n     * A `null` version disables support for directives, explicit tags, anchors, and aliases.\n     * It also requires the `schema` option to be given as a `Schema` instance value.\n     *\n     * Overrides all previously set schema options.\n     */\n    setSchema(version, options = {}) {\n        if (typeof version === 'number')\n            version = String(version);\n        let opt;\n        switch (version) {\n            case '1.1':\n                if (this.directives)\n                    this.directives.yaml.version = '1.1';\n                else\n                    this.directives = new Directives({ version: '1.1' });\n                opt = { merge: true, resolveKnownTags: false, schema: 'yaml-1.1' };\n                break;\n            case '1.2':\n            case 'next':\n                if (this.directives)\n                    this.directives.yaml.version = version;\n                else\n                    this.directives = new Directives({ version });\n                opt = { merge: false, resolveKnownTags: true, schema: 'core' };\n                break;\n            case null:\n                if (this.directives)\n                    delete this.directives;\n                opt = null;\n                break;\n            default: {\n                const sv = JSON.stringify(version);\n                throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${sv}`);\n            }\n        }\n        // Not using `instanceof Schema` to allow for duck typing\n        if (options.schema instanceof Object)\n            this.schema = options.schema;\n        else if (opt)\n            this.schema = new Schema(Object.assign(opt, options));\n        else\n            throw new Error(`With a null YAML version, the { schema: Schema } option is required`);\n    }\n    // json & jsonArg are only used from toJSON()\n    toJS({ json, jsonArg, mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        const ctx = {\n            anchors: new Map(),\n            doc: this,\n            keep: !json,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100,\n            stringify\n        };\n        const res = toJS(this.contents, jsonArg ?? '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n    /**\n     * A JSON representation of the document `contents`.\n     *\n     * @param jsonArg Used by `JSON.stringify` to indicate the array index or\n     *   property name.\n     */\n    toJSON(jsonArg, onAnchor) {\n        return this.toJS({ json: true, jsonArg, mapAsMap: false, onAnchor });\n    }\n    /** A YAML representation of the document. */\n    toString(options = {}) {\n        if (this.errors.length > 0)\n            throw new Error('Document with errors cannot be stringified');\n        if ('indent' in options &&\n            (!Number.isInteger(options.indent) || Number(options.indent) <= 0)) {\n            const s = JSON.stringify(options.indent);\n            throw new Error(`\"indent\" option must be a positive integer, not ${s}`);\n        }\n        return stringifyDocument(this, options);\n    }\n}\nfunction assertCollection(contents) {\n    if (isCollection(contents))\n        return true;\n    throw new Error('Expected a YAML collection as document contents');\n}\n\nexport { Document };\n","class YAMLError extends Error {\n    constructor(name, pos, code, message) {\n        super();\n        this.name = name;\n        this.code = code;\n        this.message = message;\n        this.pos = pos;\n    }\n}\nclass YAMLParseError extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLParseError', pos, code, message);\n    }\n}\nclass YAMLWarning extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLWarning', pos, code, message);\n    }\n}\nconst prettifyError = (src, lc) => (error) => {\n    if (error.pos[0] === -1)\n        return;\n    error.linePos = error.pos.map(pos => lc.linePos(pos));\n    const { line, col } = error.linePos[0];\n    error.message += ` at line ${line}, column ${col}`;\n    let ci = col - 1;\n    let lineStr = src\n        .substring(lc.lineStarts[line - 1], lc.lineStarts[line])\n        .replace(/[\\n\\r]+$/, '');\n    // Trim to max 80 chars, keeping col position near the middle\n    if (ci >= 60 && lineStr.length > 80) {\n        const trimStart = Math.min(ci - 39, lineStr.length - 79);\n        lineStr = '…' + lineStr.substring(trimStart);\n        ci -= trimStart - 1;\n    }\n    if (lineStr.length > 80)\n        lineStr = lineStr.substring(0, 79) + '…';\n    // Include previous line in context if pointing at line start\n    if (line > 1 && /^ *$/.test(lineStr.substring(0, ci))) {\n        // Regexp won't match if start is trimmed\n        let prev = src.substring(lc.lineStarts[line - 2], lc.lineStarts[line - 1]);\n        if (prev.length > 80)\n            prev = prev.substring(0, 79) + '…\\n';\n        lineStr = prev + lineStr;\n    }\n    if (/[^ ]/.test(lineStr)) {\n        let count = 1;\n        const end = error.linePos[1];\n        if (end && end.line === line && end.col > col) {\n            count = Math.min(end.col - col, 80 - ci);\n        }\n        const pointer = ' '.repeat(ci) + '^'.repeat(count);\n        error.message += `:\\n\\n${lineStr}\\n${pointer}\\n`;\n    }\n};\n\nexport { YAMLError, YAMLParseError, YAMLWarning, prettifyError };\n","function resolveProps(tokens, { flow, indicator, next, offset, onError, startOnNewline }) {\n    let spaceBefore = false;\n    let atNewline = startOnNewline;\n    let hasSpace = startOnNewline;\n    let comment = '';\n    let commentSep = '';\n    let hasNewline = false;\n    let hasNewlineAfterProp = false;\n    let reqSpace = false;\n    let anchor = null;\n    let tag = null;\n    let comma = null;\n    let found = null;\n    let start = null;\n    for (const token of tokens) {\n        if (reqSpace) {\n            if (token.type !== 'space' &&\n                token.type !== 'newline' &&\n                token.type !== 'comma')\n                onError(token.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n            reqSpace = false;\n        }\n        switch (token.type) {\n            case 'space':\n                // At the doc level, tabs at line start may be parsed\n                // as leading white space rather than indentation.\n                // In a flow collection, only the parser handles indent.\n                if (!flow &&\n                    atNewline &&\n                    indicator !== 'doc-start' &&\n                    token.source[0] === '\\t')\n                    onError(token, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n                hasSpace = true;\n                break;\n            case 'comment': {\n                if (!hasSpace)\n                    onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                const cb = token.source.substring(1) || ' ';\n                if (!comment)\n                    comment = cb;\n                else\n                    comment += commentSep + cb;\n                commentSep = '';\n                atNewline = false;\n                break;\n            }\n            case 'newline':\n                if (atNewline) {\n                    if (comment)\n                        comment += token.source;\n                    else\n                        spaceBefore = true;\n                }\n                else\n                    commentSep += token.source;\n                atNewline = true;\n                hasNewline = true;\n                if (anchor || tag)\n                    hasNewlineAfterProp = true;\n                hasSpace = true;\n                break;\n            case 'anchor':\n                if (anchor)\n                    onError(token, 'MULTIPLE_ANCHORS', 'A node can have at most one anchor');\n                if (token.source.endsWith(':'))\n                    onError(token.offset + token.source.length - 1, 'BAD_ALIAS', 'Anchor ending in : is ambiguous', true);\n                anchor = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            case 'tag': {\n                if (tag)\n                    onError(token, 'MULTIPLE_TAGS', 'A node can have at most one tag');\n                tag = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            }\n            case indicator:\n                // Could here handle preceding comments differently\n                if (anchor || tag)\n                    onError(token, 'BAD_PROP_ORDER', `Anchors and tags must be after the ${token.source} indicator`);\n                if (found)\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.source} in ${flow ?? 'collection'}`);\n                found = token;\n                atNewline = false;\n                hasSpace = false;\n                break;\n            case 'comma':\n                if (flow) {\n                    if (comma)\n                        onError(token, 'UNEXPECTED_TOKEN', `Unexpected , in ${flow}`);\n                    comma = token;\n                    atNewline = false;\n                    hasSpace = false;\n                    break;\n                }\n            // else fallthrough\n            default:\n                onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.type} token`);\n                atNewline = false;\n                hasSpace = false;\n        }\n    }\n    const last = tokens[tokens.length - 1];\n    const end = last ? last.offset + last.source.length : offset;\n    if (reqSpace &&\n        next &&\n        next.type !== 'space' &&\n        next.type !== 'newline' &&\n        next.type !== 'comma' &&\n        (next.type !== 'scalar' || next.source !== ''))\n        onError(next.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n    return {\n        comma,\n        found,\n        spaceBefore,\n        comment,\n        hasNewline,\n        hasNewlineAfterProp,\n        anchor,\n        tag,\n        end,\n        start: start ?? end\n    };\n}\n\nexport { resolveProps };\n","function containsNewline(key) {\n    if (!key)\n        return null;\n    switch (key.type) {\n        case 'alias':\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            if (key.source.includes('\\n'))\n                return true;\n            if (key.end)\n                for (const st of key.end)\n                    if (st.type === 'newline')\n                        return true;\n            return false;\n        case 'flow-collection':\n            for (const it of key.items) {\n                for (const st of it.start)\n                    if (st.type === 'newline')\n                        return true;\n                if (it.sep)\n                    for (const st of it.sep)\n                        if (st.type === 'newline')\n                            return true;\n                if (containsNewline(it.key) || containsNewline(it.value))\n                    return true;\n            }\n            return false;\n        default:\n            return true;\n    }\n}\n\nexport { containsNewline };\n","import { containsNewline } from './util-contains-newline.js';\n\nfunction flowIndentCheck(indent, fc, onError) {\n    if (fc?.type === 'flow-collection') {\n        const end = fc.end[0];\n        if (end.indent === indent &&\n            (end.source === ']' || end.source === '}') &&\n            containsNewline(fc)) {\n            const msg = 'Flow end indicator should be more indented than parent';\n            onError(end, 'BAD_INDENT', msg, true);\n        }\n    }\n}\n\nexport { flowIndentCheck };\n","import { isScalar } from '../nodes/Node.js';\n\nfunction mapIncludes(ctx, items, search) {\n    const { uniqueKeys } = ctx.options;\n    if (uniqueKeys === false)\n        return false;\n    const isEqual = typeof uniqueKeys === 'function'\n        ? uniqueKeys\n        : (a, b) => a === b ||\n            (isScalar(a) &&\n                isScalar(b) &&\n                a.value === b.value &&\n                !(a.value === '<<' && ctx.schema.merge));\n    return items.some(pair => isEqual(pair.key, search));\n}\n\nexport { mapIncludes };\n","import { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst startColMsg = 'All mapping items must start at the same column';\nfunction resolveBlockMap({ composeNode, composeEmptyNode }, ctx, bm, onError) {\n    const map = new YAMLMap(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bm.offset;\n    let commentEnd = null;\n    for (const collItem of bm.items) {\n        const { start, key, sep, value } = collItem;\n        // key properties\n        const keyProps = resolveProps(start, {\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            startOnNewline: true\n        });\n        const implicitKey = !keyProps.found;\n        if (implicitKey) {\n            if (key) {\n                if (key.type === 'block-seq')\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'A block sequence may not be used as an implicit map key');\n                else if ('indent' in key && key.indent !== bm.indent)\n                    onError(offset, 'BAD_INDENT', startColMsg);\n            }\n            if (!keyProps.anchor && !keyProps.tag && !sep) {\n                commentEnd = keyProps.end;\n                if (keyProps.comment) {\n                    if (map.comment)\n                        map.comment += '\\n' + keyProps.comment;\n                    else\n                        map.comment = keyProps.comment;\n                }\n                continue;\n            }\n            if (keyProps.hasNewlineAfterProp || containsNewline(key)) {\n                onError(key ?? start[start.length - 1], 'MULTILINE_IMPLICIT_KEY', 'Implicit keys need to be on a single line');\n            }\n        }\n        else if (keyProps.found?.indent !== bm.indent) {\n            onError(offset, 'BAD_INDENT', startColMsg);\n        }\n        // key value\n        const keyStart = keyProps.end;\n        const keyNode = key\n            ? composeNode(ctx, key, keyProps, onError)\n            : composeEmptyNode(ctx, keyStart, start, null, keyProps, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bm.indent, key, onError);\n        if (mapIncludes(ctx, map.items, keyNode))\n            onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n        // value properties\n        const valueProps = resolveProps(sep ?? [], {\n            indicator: 'map-value-ind',\n            next: value,\n            offset: keyNode.range[2],\n            onError,\n            startOnNewline: !key || key.type === 'block-scalar'\n        });\n        offset = valueProps.end;\n        if (valueProps.found) {\n            if (implicitKey) {\n                if (value?.type === 'block-map' && !valueProps.hasNewline)\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'Nested mappings are not allowed in compact mappings');\n                if (ctx.options.strict &&\n                    keyProps.start < valueProps.found.offset - 1024)\n                    onError(keyNode.range, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit block mapping key');\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : composeEmptyNode(ctx, offset, sep, null, valueProps, onError);\n            if (ctx.schema.compat)\n                flowIndentCheck(bm.indent, value, onError);\n            offset = valueNode.range[2];\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n        else {\n            // key with no value\n            if (implicitKey)\n                onError(keyNode.range, 'MISSING_CHAR', 'Implicit map keys need to be followed by map values');\n            if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n    }\n    if (commentEnd && commentEnd < offset)\n        onError(commentEnd, 'IMPOSSIBLE', 'Map comment with trailing content');\n    map.range = [bm.offset, offset, commentEnd ?? offset];\n    return map;\n}\n\nexport { resolveBlockMap };\n","function resolveEnd(end, offset, reqSpace, onError) {\n    let comment = '';\n    if (end) {\n        let hasSpace = false;\n        let sep = '';\n        for (const token of end) {\n            const { source, type } = token;\n            switch (type) {\n                case 'space':\n                    hasSpace = true;\n                    break;\n                case 'comment': {\n                    if (reqSpace && !hasSpace)\n                        onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                    const cb = source.substring(1) || ' ';\n                    if (!comment)\n                        comment = cb;\n                    else\n                        comment += sep + cb;\n                    sep = '';\n                    break;\n                }\n                case 'newline':\n                    if (comment)\n                        sep += source;\n                    hasSpace = true;\n                    break;\n                default:\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${type} at node end`);\n            }\n            offset += source.length;\n        }\n    }\n    return { comment, offset };\n}\n\nexport { resolveEnd };\n","import { isPair } from '../nodes/Node.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst blockMsg = 'Block collections are not allowed within flow collections';\nconst isBlock = (token) => token && (token.type === 'block-map' || token.type === 'block-seq');\nfunction resolveFlowCollection({ composeNode, composeEmptyNode }, ctx, fc, onError) {\n    const isMap = fc.start.source === '{';\n    const fcName = isMap ? 'flow map' : 'flow sequence';\n    const coll = isMap\n        ? new YAMLMap(ctx.schema)\n        : new YAMLSeq(ctx.schema);\n    coll.flow = true;\n    const atRoot = ctx.atRoot;\n    if (atRoot)\n        ctx.atRoot = false;\n    let offset = fc.offset + fc.start.source.length;\n    for (let i = 0; i < fc.items.length; ++i) {\n        const collItem = fc.items[i];\n        const { start, key, sep, value } = collItem;\n        const props = resolveProps(start, {\n            flow: fcName,\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            startOnNewline: false\n        });\n        if (!props.found) {\n            if (!props.anchor && !props.tag && !sep && !value) {\n                if (i === 0 && props.comma)\n                    onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n                else if (i < fc.items.length - 1)\n                    onError(props.start, 'UNEXPECTED_TOKEN', `Unexpected empty item in ${fcName}`);\n                if (props.comment) {\n                    if (coll.comment)\n                        coll.comment += '\\n' + props.comment;\n                    else\n                        coll.comment = props.comment;\n                }\n                offset = props.end;\n                continue;\n            }\n            if (!isMap && ctx.options.strict && containsNewline(key))\n                onError(key, // checked by containsNewline()\n                'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n        }\n        if (i === 0) {\n            if (props.comma)\n                onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n        }\n        else {\n            if (!props.comma)\n                onError(props.start, 'MISSING_CHAR', `Missing , between ${fcName} items`);\n            if (props.comment) {\n                let prevItemComment = '';\n                loop: for (const st of start) {\n                    switch (st.type) {\n                        case 'comma':\n                        case 'space':\n                            break;\n                        case 'comment':\n                            prevItemComment = st.source.substring(1);\n                            break loop;\n                        default:\n                            break loop;\n                    }\n                }\n                if (prevItemComment) {\n                    let prev = coll.items[coll.items.length - 1];\n                    if (isPair(prev))\n                        prev = prev.value ?? prev.key;\n                    if (prev.comment)\n                        prev.comment += '\\n' + prevItemComment;\n                    else\n                        prev.comment = prevItemComment;\n                    props.comment = props.comment.substring(prevItemComment.length + 1);\n                }\n            }\n        }\n        if (!isMap && !sep && !props.found) {\n            // item is a value in a seq\n            // → key & sep are empty, start does not include ? or :\n            const valueNode = value\n                ? composeNode(ctx, value, props, onError)\n                : composeEmptyNode(ctx, props.end, sep, null, props, onError);\n            coll.items.push(valueNode);\n            offset = valueNode.range[2];\n            if (isBlock(value))\n                onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n        }\n        else {\n            // item is a key+value pair\n            // key value\n            const keyStart = props.end;\n            const keyNode = key\n                ? composeNode(ctx, key, props, onError)\n                : composeEmptyNode(ctx, keyStart, start, null, props, onError);\n            if (isBlock(key))\n                onError(keyNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            // value properties\n            const valueProps = resolveProps(sep ?? [], {\n                flow: fcName,\n                indicator: 'map-value-ind',\n                next: value,\n                offset: keyNode.range[2],\n                onError,\n                startOnNewline: false\n            });\n            if (valueProps.found) {\n                if (!isMap && !props.found && ctx.options.strict) {\n                    if (sep)\n                        for (const st of sep) {\n                            if (st === valueProps.found)\n                                break;\n                            if (st.type === 'newline') {\n                                onError(st, 'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n                                break;\n                            }\n                        }\n                    if (props.start < valueProps.found.offset - 1024)\n                        onError(valueProps.found, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit flow sequence key');\n                }\n            }\n            else if (value) {\n                if ('source' in value && value.source && value.source[0] === ':')\n                    onError(value, 'MISSING_CHAR', `Missing space after : in ${fcName}`);\n                else\n                    onError(valueProps.start, 'MISSING_CHAR', `Missing , or : between ${fcName} items`);\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : valueProps.found\n                    ? composeEmptyNode(ctx, valueProps.end, sep, null, valueProps, onError)\n                    : null;\n            if (valueNode) {\n                if (isBlock(value))\n                    onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            }\n            else if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            if (isMap) {\n                const map = coll;\n                if (mapIncludes(ctx, map.items, keyNode))\n                    onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n                map.items.push(pair);\n            }\n            else {\n                const map = new YAMLMap(ctx.schema);\n                map.flow = true;\n                map.items.push(pair);\n                coll.items.push(map);\n            }\n            offset = valueNode ? valueNode.range[2] : valueProps.end;\n        }\n    }\n    const expectedEnd = isMap ? '}' : ']';\n    const [ce, ...ee] = fc.end;\n    let cePos = offset;\n    if (ce && ce.source === expectedEnd)\n        cePos = ce.offset + ce.source.length;\n    else {\n        const name = fcName[0].toUpperCase() + fcName.substring(1);\n        const msg = atRoot\n            ? `${name} must end with a ${expectedEnd}`\n            : `${name} in block collection must be sufficiently indented and end with a ${expectedEnd}`;\n        onError(offset, atRoot ? 'MISSING_CHAR' : 'BAD_INDENT', msg);\n        if (ce && ce.source.length !== 1)\n            ee.unshift(ce);\n    }\n    if (ee.length > 0) {\n        const end = resolveEnd(ee, cePos, ctx.options.strict, onError);\n        if (end.comment) {\n            if (coll.comment)\n                coll.comment += '\\n' + end.comment;\n            else\n                coll.comment = end.comment;\n        }\n        coll.range = [fc.offset, cePos, end.offset];\n    }\n    else {\n        coll.range = [fc.offset, cePos, cePos];\n    }\n    return coll;\n}\n\nexport { resolveFlowCollection };\n","import { isNode, isMap } from '../nodes/Node.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockMap } from './resolve-block-map.js';\nimport { resolveBlockSeq } from './resolve-block-seq.js';\nimport { resolveFlowCollection } from './resolve-flow-collection.js';\n\nfunction composeCollection(CN, ctx, token, tagToken, onError) {\n    let coll;\n    switch (token.type) {\n        case 'block-map': {\n            coll = resolveBlockMap(CN, ctx, token, onError);\n            break;\n        }\n        case 'block-seq': {\n            coll = resolveBlockSeq(CN, ctx, token, onError);\n            break;\n        }\n        case 'flow-collection': {\n            coll = resolveFlowCollection(CN, ctx, token, onError);\n            break;\n        }\n    }\n    if (!tagToken)\n        return coll;\n    const tagName = ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg));\n    if (!tagName)\n        return coll;\n    // Cast needed due to: https://github.com/Microsoft/TypeScript/issues/3841\n    const Coll = coll.constructor;\n    if (tagName === '!' || tagName === Coll.tagName) {\n        coll.tag = Coll.tagName;\n        return coll;\n    }\n    const expType = isMap(coll) ? 'map' : 'seq';\n    let tag = ctx.schema.tags.find(t => t.collection === expType && t.tag === tagName);\n    if (!tag) {\n        const kt = ctx.schema.knownTags[tagName];\n        if (kt && kt.collection === expType) {\n            ctx.schema.tags.push(Object.assign({}, kt, { default: false }));\n            tag = kt;\n        }\n        else {\n            onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, true);\n            coll.tag = tagName;\n            return coll;\n        }\n    }\n    const res = tag.resolve(coll, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n    const node = isNode(res)\n        ? res\n        : new Scalar(res);\n    node.range = coll.range;\n    node.tag = tagName;\n    if (tag?.format)\n        node.format = tag.format;\n    return node;\n}\n\nexport { composeCollection };\n","import { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveProps } from './resolve-props.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\n\nfunction resolveBlockSeq({ composeNode, composeEmptyNode }, ctx, bs, onError) {\n    const seq = new YAMLSeq(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bs.offset;\n    let commentEnd = null;\n    for (const { start, value } of bs.items) {\n        const props = resolveProps(start, {\n            indicator: 'seq-item-ind',\n            next: value,\n            offset,\n            onError,\n            startOnNewline: true\n        });\n        if (!props.found) {\n            if (props.anchor || props.tag || value) {\n                if (value && value.type === 'block-seq')\n                    onError(props.end, 'BAD_INDENT', 'All sequence items must start at the same column');\n                else\n                    onError(offset, 'MISSING_CHAR', 'Sequence item without - indicator');\n            }\n            else {\n                commentEnd = props.end;\n                if (props.comment)\n                    seq.comment = props.comment;\n                continue;\n            }\n        }\n        const node = value\n            ? composeNode(ctx, value, props, onError)\n            : composeEmptyNode(ctx, props.end, start, null, props, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bs.indent, value, onError);\n        offset = node.range[2];\n        seq.items.push(node);\n    }\n    seq.range = [bs.offset, offset, commentEnd ?? offset];\n    return seq;\n}\n\nexport { resolveBlockSeq };\n","import { Scalar } from '../nodes/Scalar.js';\n\nfunction resolveBlockScalar(scalar, strict, onError) {\n    const start = scalar.offset;\n    const header = parseBlockScalarHeader(scalar, strict, onError);\n    if (!header)\n        return { value: '', type: null, comment: '', range: [start, start, start] };\n    const type = header.mode === '>' ? Scalar.BLOCK_FOLDED : Scalar.BLOCK_LITERAL;\n    const lines = scalar.source ? splitLines(scalar.source) : [];\n    // determine the end of content & start of chomping\n    let chompStart = lines.length;\n    for (let i = lines.length - 1; i >= 0; --i) {\n        const content = lines[i][1];\n        if (content === '' || content === '\\r')\n            chompStart = i;\n        else\n            break;\n    }\n    // shortcut for empty contents\n    if (chompStart === 0) {\n        const value = header.chomp === '+' && lines.length > 0\n            ? '\\n'.repeat(Math.max(1, lines.length - 1))\n            : '';\n        let end = start + header.length;\n        if (scalar.source)\n            end += scalar.source.length;\n        return { value, type, comment: header.comment, range: [start, end, end] };\n    }\n    // find the indentation level to trim from start\n    let trimIndent = scalar.indent + header.indent;\n    let offset = scalar.offset + header.length;\n    let contentStart = 0;\n    for (let i = 0; i < chompStart; ++i) {\n        const [indent, content] = lines[i];\n        if (content === '' || content === '\\r') {\n            if (header.indent === 0 && indent.length > trimIndent)\n                trimIndent = indent.length;\n        }\n        else {\n            if (indent.length < trimIndent) {\n                const message = 'Block scalars with more-indented leading empty lines must use an explicit indentation indicator';\n                onError(offset + indent.length, 'MISSING_CHAR', message);\n            }\n            if (header.indent === 0)\n                trimIndent = indent.length;\n            contentStart = i;\n            break;\n        }\n        offset += indent.length + content.length + 1;\n    }\n    // include trailing more-indented empty lines in content\n    for (let i = lines.length - 1; i >= chompStart; --i) {\n        if (lines[i][0].length > trimIndent)\n            chompStart = i + 1;\n    }\n    let value = '';\n    let sep = '';\n    let prevMoreIndented = false;\n    // leading whitespace is kept intact\n    for (let i = 0; i < contentStart; ++i)\n        value += lines[i][0].slice(trimIndent) + '\\n';\n    for (let i = contentStart; i < chompStart; ++i) {\n        let [indent, content] = lines[i];\n        offset += indent.length + content.length + 1;\n        const crlf = content[content.length - 1] === '\\r';\n        if (crlf)\n            content = content.slice(0, -1);\n        /* istanbul ignore if already caught in lexer */\n        if (content && indent.length < trimIndent) {\n            const src = header.indent\n                ? 'explicit indentation indicator'\n                : 'first line';\n            const message = `Block scalar lines must not be less indented than their ${src}`;\n            onError(offset - content.length - (crlf ? 2 : 1), 'BAD_INDENT', message);\n            indent = '';\n        }\n        if (type === Scalar.BLOCK_LITERAL) {\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n        }\n        else if (indent.length > trimIndent || content[0] === '\\t') {\n            // more-indented content within a folded block\n            if (sep === ' ')\n                sep = '\\n';\n            else if (!prevMoreIndented && sep === '\\n')\n                sep = '\\n\\n';\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n            prevMoreIndented = true;\n        }\n        else if (content === '') {\n            // empty line\n            if (sep === '\\n')\n                value += '\\n';\n            else\n                sep = '\\n';\n        }\n        else {\n            value += sep + content;\n            sep = ' ';\n            prevMoreIndented = false;\n        }\n    }\n    switch (header.chomp) {\n        case '-':\n            break;\n        case '+':\n            for (let i = chompStart; i < lines.length; ++i)\n                value += '\\n' + lines[i][0].slice(trimIndent);\n            if (value[value.length - 1] !== '\\n')\n                value += '\\n';\n            break;\n        default:\n            value += '\\n';\n    }\n    const end = start + header.length + scalar.source.length;\n    return { value, type, comment: header.comment, range: [start, end, end] };\n}\nfunction parseBlockScalarHeader({ offset, props }, strict, onError) {\n    /* istanbul ignore if should not happen */\n    if (props[0].type !== 'block-scalar-header') {\n        onError(props[0], 'IMPOSSIBLE', 'Block scalar header not found');\n        return null;\n    }\n    const { source } = props[0];\n    const mode = source[0];\n    let indent = 0;\n    let chomp = '';\n    let error = -1;\n    for (let i = 1; i < source.length; ++i) {\n        const ch = source[i];\n        if (!chomp && (ch === '-' || ch === '+'))\n            chomp = ch;\n        else {\n            const n = Number(ch);\n            if (!indent && n)\n                indent = n;\n            else if (error === -1)\n                error = offset + i;\n        }\n    }\n    if (error !== -1)\n        onError(error, 'UNEXPECTED_TOKEN', `Block scalar header includes extra characters: ${source}`);\n    let hasSpace = false;\n    let comment = '';\n    let length = source.length;\n    for (let i = 1; i < props.length; ++i) {\n        const token = props[i];\n        switch (token.type) {\n            case 'space':\n                hasSpace = true;\n            // fallthrough\n            case 'newline':\n                length += token.source.length;\n                break;\n            case 'comment':\n                if (strict && !hasSpace) {\n                    const message = 'Comments must be separated from other tokens by white space characters';\n                    onError(token, 'MISSING_CHAR', message);\n                }\n                length += token.source.length;\n                comment = token.source.substring(1);\n                break;\n            case 'error':\n                onError(token, 'UNEXPECTED_TOKEN', token.message);\n                length += token.source.length;\n                break;\n            /* istanbul ignore next should not happen */\n            default: {\n                const message = `Unexpected token in block scalar header: ${token.type}`;\n                onError(token, 'UNEXPECTED_TOKEN', message);\n                const ts = token.source;\n                if (ts && typeof ts === 'string')\n                    length += ts.length;\n            }\n        }\n    }\n    return { mode, indent, chomp, comment, length };\n}\n/** @returns Array of lines split up as `[indent, content]` */\nfunction splitLines(source) {\n    const split = source.split(/\\n( *)/);\n    const first = split[0];\n    const m = first.match(/^( *)/);\n    const line0 = m?.[1]\n        ? [m[1], first.slice(m[1].length)]\n        : ['', first];\n    const lines = [line0];\n    for (let i = 1; i < split.length; i += 2)\n        lines.push([split[i], split[i + 1]]);\n    return lines;\n}\n\nexport { resolveBlockScalar };\n","import { Scalar } from '../nodes/Scalar.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction resolveFlowScalar(scalar, strict, onError) {\n    const { offset, type, source, end } = scalar;\n    let _type;\n    let value;\n    const _onError = (rel, code, msg) => onError(offset + rel, code, msg);\n    switch (type) {\n        case 'scalar':\n            _type = Scalar.PLAIN;\n            value = plainValue(source, _onError);\n            break;\n        case 'single-quoted-scalar':\n            _type = Scalar.QUOTE_SINGLE;\n            value = singleQuotedValue(source, _onError);\n            break;\n        case 'double-quoted-scalar':\n            _type = Scalar.QUOTE_DOUBLE;\n            value = doubleQuotedValue(source, _onError);\n            break;\n        /* istanbul ignore next should not happen */\n        default:\n            onError(scalar, 'UNEXPECTED_TOKEN', `Expected a flow scalar value, but found: ${type}`);\n            return {\n                value: '',\n                type: null,\n                comment: '',\n                range: [offset, offset + source.length, offset + source.length]\n            };\n    }\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, strict, onError);\n    return {\n        value,\n        type: _type,\n        comment: re.comment,\n        range: [offset, valueEnd, re.offset]\n    };\n}\nfunction plainValue(source, onError) {\n    let badChar = '';\n    switch (source[0]) {\n        /* istanbul ignore next should not happen */\n        case '\\t':\n            badChar = 'a tab character';\n            break;\n        case ',':\n            badChar = 'flow indicator character ,';\n            break;\n        case '%':\n            badChar = 'directive indicator character %';\n            break;\n        case '|':\n        case '>': {\n            badChar = `block scalar indicator ${source[0]}`;\n            break;\n        }\n        case '@':\n        case '`': {\n            badChar = `reserved character ${source[0]}`;\n            break;\n        }\n    }\n    if (badChar)\n        onError(0, 'BAD_SCALAR_START', `Plain value cannot start with ${badChar}`);\n    return foldLines(source);\n}\nfunction singleQuotedValue(source, onError) {\n    if (source[source.length - 1] !== \"'\" || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', \"Missing closing 'quote\");\n    return foldLines(source.slice(1, -1)).replace(/''/g, \"'\");\n}\nfunction foldLines(source) {\n    /**\n     * The negative lookbehind here and in the `re` RegExp is to\n     * prevent causing a polynomial search time in certain cases.\n     *\n     * The try-catch is for Safari, which doesn't support this yet:\n     * https://caniuse.com/js-regexp-lookbehind\n     */\n    let first, line;\n    try {\n        first = new RegExp('(.*?)(?<![ \\t])[ \\t]*\\r?\\n', 'sy');\n        line = new RegExp('[ \\t]*(.*?)(?:(?<![ \\t])[ \\t]*)?\\r?\\n', 'sy');\n    }\n    catch (_) {\n        first = /(.*?)[ \\t]*\\r?\\n/sy;\n        line = /[ \\t]*(.*?)[ \\t]*\\r?\\n/sy;\n    }\n    let match = first.exec(source);\n    if (!match)\n        return source;\n    let res = match[1];\n    let sep = ' ';\n    let pos = first.lastIndex;\n    line.lastIndex = pos;\n    while ((match = line.exec(source))) {\n        if (match[1] === '') {\n            if (sep === '\\n')\n                res += sep;\n            else\n                sep = '\\n';\n        }\n        else {\n            res += sep + match[1];\n            sep = ' ';\n        }\n        pos = line.lastIndex;\n    }\n    const last = /[ \\t]*(.*)/sy;\n    last.lastIndex = pos;\n    match = last.exec(source);\n    return res + sep + (match?.[1] ?? '');\n}\nfunction doubleQuotedValue(source, onError) {\n    let res = '';\n    for (let i = 1; i < source.length - 1; ++i) {\n        const ch = source[i];\n        if (ch === '\\r' && source[i + 1] === '\\n')\n            continue;\n        if (ch === '\\n') {\n            const { fold, offset } = foldNewline(source, i);\n            res += fold;\n            i = offset;\n        }\n        else if (ch === '\\\\') {\n            let next = source[++i];\n            const cc = escapeCodes[next];\n            if (cc)\n                res += cc;\n            else if (next === '\\n') {\n                // skip escaped newlines, but still trim the following line\n                next = source[i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === '\\r' && source[i + 1] === '\\n') {\n                // skip escaped CRLF newlines, but still trim the following line\n                next = source[++i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === 'x' || next === 'u' || next === 'U') {\n                const length = { x: 2, u: 4, U: 8 }[next];\n                res += parseCharCode(source, i + 1, length, onError);\n                i += length;\n            }\n            else {\n                const raw = source.substr(i - 1, 2);\n                onError(i - 1, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n                res += raw;\n            }\n        }\n        else if (ch === ' ' || ch === '\\t') {\n            // trim trailing whitespace\n            const wsStart = i;\n            let next = source[i + 1];\n            while (next === ' ' || next === '\\t')\n                next = source[++i + 1];\n            if (next !== '\\n' && !(next === '\\r' && source[i + 2] === '\\n'))\n                res += i > wsStart ? source.slice(wsStart, i + 1) : ch;\n        }\n        else {\n            res += ch;\n        }\n    }\n    if (source[source.length - 1] !== '\"' || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', 'Missing closing \"quote');\n    return res;\n}\n/**\n * Fold a single newline into a space, multiple newlines to N - 1 newlines.\n * Presumes `source[offset] === '\\n'`\n */\nfunction foldNewline(source, offset) {\n    let fold = '';\n    let ch = source[offset + 1];\n    while (ch === ' ' || ch === '\\t' || ch === '\\n' || ch === '\\r') {\n        if (ch === '\\r' && source[offset + 2] !== '\\n')\n            break;\n        if (ch === '\\n')\n            fold += '\\n';\n        offset += 1;\n        ch = source[offset + 1];\n    }\n    if (!fold)\n        fold = ' ';\n    return { fold, offset };\n}\nconst escapeCodes = {\n    '0': '\\0',\n    a: '\\x07',\n    b: '\\b',\n    e: '\\x1b',\n    f: '\\f',\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    v: '\\v',\n    N: '\\u0085',\n    _: '\\u00a0',\n    L: '\\u2028',\n    P: '\\u2029',\n    ' ': ' ',\n    '\"': '\"',\n    '/': '/',\n    '\\\\': '\\\\',\n    '\\t': '\\t'\n};\nfunction parseCharCode(source, offset, length, onError) {\n    const cc = source.substr(offset, length);\n    const ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);\n    const code = ok ? parseInt(cc, 16) : NaN;\n    if (isNaN(code)) {\n        const raw = source.substr(offset - 2, length + 2);\n        onError(offset - 2, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n        return raw;\n    }\n    return String.fromCodePoint(code);\n}\n\nexport { resolveFlowScalar };\n","import { SCALAR, isScalar } from '../nodes/Node.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockScalar } from './resolve-block-scalar.js';\nimport { resolveFlowScalar } from './resolve-flow-scalar.js';\n\nfunction composeScalar(ctx, token, tagToken, onError) {\n    const { value, type, comment, range } = token.type === 'block-scalar'\n        ? resolveBlockScalar(token, ctx.options.strict, onError)\n        : resolveFlowScalar(token, ctx.options.strict, onError);\n    const tagName = tagToken\n        ? ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg))\n        : null;\n    const tag = tagToken && tagName\n        ? findScalarTagByName(ctx.schema, value, tagName, tagToken, onError)\n        : token.type === 'scalar'\n            ? findScalarTagByTest(ctx, value, token, onError)\n            : ctx.schema[SCALAR];\n    let scalar;\n    try {\n        const res = tag.resolve(value, msg => onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n        scalar = isScalar(res) ? res : new Scalar(res);\n    }\n    catch (error) {\n        const msg = error instanceof Error ? error.message : String(error);\n        onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg);\n        scalar = new Scalar(value);\n    }\n    scalar.range = range;\n    scalar.source = value;\n    if (type)\n        scalar.type = type;\n    if (tagName)\n        scalar.tag = tagName;\n    if (tag.format)\n        scalar.format = tag.format;\n    if (comment)\n        scalar.comment = comment;\n    return scalar;\n}\nfunction findScalarTagByName(schema, value, tagName, tagToken, onError) {\n    if (tagName === '!')\n        return schema[SCALAR]; // non-specific tag\n    const matchWithTest = [];\n    for (const tag of schema.tags) {\n        if (!tag.collection && tag.tag === tagName) {\n            if (tag.default && tag.test)\n                matchWithTest.push(tag);\n            else\n                return tag;\n        }\n    }\n    for (const tag of matchWithTest)\n        if (tag.test?.test(value))\n            return tag;\n    const kt = schema.knownTags[tagName];\n    if (kt && !kt.collection) {\n        // Ensure that the known tag is available for stringifying,\n        // but does not get used by default.\n        schema.tags.push(Object.assign({}, kt, { default: false, test: undefined }));\n        return kt;\n    }\n    onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, tagName !== 'tag:yaml.org,2002:str');\n    return schema[SCALAR];\n}\nfunction findScalarTagByTest({ directives, schema }, value, token, onError) {\n    const tag = schema.tags.find(tag => tag.default && tag.test?.test(value)) || schema[SCALAR];\n    if (schema.compat) {\n        const compat = schema.compat.find(tag => tag.default && tag.test?.test(value)) ??\n            schema[SCALAR];\n        if (tag.tag !== compat.tag) {\n            const ts = directives.tagString(tag.tag);\n            const cs = directives.tagString(compat.tag);\n            const msg = `Value may be parsed as either ${ts} or ${cs}`;\n            onError(token, 'TAG_RESOLVE_FAILED', msg, true);\n        }\n    }\n    return tag;\n}\n\nexport { composeScalar };\n","function emptyScalarPosition(offset, before, pos) {\n    if (before) {\n        if (pos === null)\n            pos = before.length;\n        for (let i = pos - 1; i >= 0; --i) {\n            let st = before[i];\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                case 'newline':\n                    offset -= st.source.length;\n                    continue;\n            }\n            // Technically, an empty scalar is immediately after the last non-empty\n            // node, but it's more useful to place it after any whitespace.\n            st = before[++i];\n            while (st?.type === 'space') {\n                offset += st.source.length;\n                st = before[++i];\n            }\n            break;\n        }\n    }\n    return offset;\n}\n\nexport { emptyScalarPosition };\n","import { Alias } from '../nodes/Alias.js';\nimport { composeCollection } from './compose-collection.js';\nimport { composeScalar } from './compose-scalar.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { emptyScalarPosition } from './util-empty-scalar-position.js';\n\nconst CN = { composeNode, composeEmptyNode };\nfunction composeNode(ctx, token, props, onError) {\n    const { spaceBefore, comment, anchor, tag } = props;\n    let node;\n    let isSrcToken = true;\n    switch (token.type) {\n        case 'alias':\n            node = composeAlias(ctx, token, onError);\n            if (anchor || tag)\n                onError(token, 'ALIAS_PROPS', 'An alias node must not specify any properties');\n            break;\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'block-scalar':\n            node = composeScalar(ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        case 'block-map':\n        case 'block-seq':\n        case 'flow-collection':\n            node = composeCollection(CN, ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        default: {\n            const message = token.type === 'error'\n                ? token.message\n                : `Unsupported token (type: ${token.type})`;\n            onError(token, 'UNEXPECTED_TOKEN', message);\n            node = composeEmptyNode(ctx, token.offset, undefined, null, props, onError);\n            isSrcToken = false;\n        }\n    }\n    if (anchor && node.anchor === '')\n        onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        if (token.type === 'scalar' && token.source === '')\n            node.comment = comment;\n        else\n            node.commentBefore = comment;\n    }\n    // @ts-expect-error Type checking misses meaning of isSrcToken\n    if (ctx.options.keepSourceTokens && isSrcToken)\n        node.srcToken = token;\n    return node;\n}\nfunction composeEmptyNode(ctx, offset, before, pos, { spaceBefore, comment, anchor, tag, end }, onError) {\n    const token = {\n        type: 'scalar',\n        offset: emptyScalarPosition(offset, before, pos),\n        indent: -1,\n        source: ''\n    };\n    const node = composeScalar(ctx, token, tag, onError);\n    if (anchor) {\n        node.anchor = anchor.source.substring(1);\n        if (node.anchor === '')\n            onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        node.comment = comment;\n        node.range[2] = end;\n    }\n    return node;\n}\nfunction composeAlias({ options }, { offset, source, end }, onError) {\n    const alias = new Alias(source.substring(1));\n    if (alias.source === '')\n        onError(offset, 'BAD_ALIAS', 'Alias cannot be an empty string');\n    if (alias.source.endsWith(':'))\n        onError(offset + source.length - 1, 'BAD_ALIAS', 'Alias ending in : is ambiguous', true);\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, options.strict, onError);\n    alias.range = [offset, valueEnd, re.offset];\n    if (re.comment)\n        alias.comment = re.comment;\n    return alias;\n}\n\nexport { composeEmptyNode, composeNode };\n","import { Document } from '../doc/Document.js';\nimport { composeNode, composeEmptyNode } from './compose-node.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\n\nfunction composeDoc(options, directives, { offset, start, value, end }, onError) {\n    const opts = Object.assign({ _directives: directives }, options);\n    const doc = new Document(undefined, opts);\n    const ctx = {\n        atRoot: true,\n        directives: doc.directives,\n        options: doc.options,\n        schema: doc.schema\n    };\n    const props = resolveProps(start, {\n        indicator: 'doc-start',\n        next: value ?? end?.[0],\n        offset,\n        onError,\n        startOnNewline: true\n    });\n    if (props.found) {\n        doc.directives.docStart = true;\n        if (value &&\n            (value.type === 'block-map' || value.type === 'block-seq') &&\n            !props.hasNewline)\n            onError(props.end, 'MISSING_CHAR', 'Block collection cannot start on same line with directives-end marker');\n    }\n    doc.contents = value\n        ? composeNode(ctx, value, props, onError)\n        : composeEmptyNode(ctx, props.end, start, null, props, onError);\n    const contentEnd = doc.contents.range[2];\n    const re = resolveEnd(end, contentEnd, false, onError);\n    if (re.comment)\n        doc.comment = re.comment;\n    doc.range = [offset, contentEnd, re.offset];\n    return doc;\n}\n\nexport { composeDoc };\n","import { Directives } from '../doc/directives.js';\nimport { Document } from '../doc/Document.js';\nimport { YAMLWarning, YAMLParseError } from '../errors.js';\nimport { isCollection, isPair } from '../nodes/Node.js';\nimport { composeDoc } from './compose-doc.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction getErrorPos(src) {\n    if (typeof src === 'number')\n        return [src, src + 1];\n    if (Array.isArray(src))\n        return src.length === 2 ? src : [src[0], src[1]];\n    const { offset, source } = src;\n    return [offset, offset + (typeof source === 'string' ? source.length : 1)];\n}\nfunction parsePrelude(prelude) {\n    let comment = '';\n    let atComment = false;\n    let afterEmptyLine = false;\n    for (let i = 0; i < prelude.length; ++i) {\n        const source = prelude[i];\n        switch (source[0]) {\n            case '#':\n                comment +=\n                    (comment === '' ? '' : afterEmptyLine ? '\\n\\n' : '\\n') +\n                        (source.substring(1) || ' ');\n                atComment = true;\n                afterEmptyLine = false;\n                break;\n            case '%':\n                if (prelude[i + 1]?.[0] !== '#')\n                    i += 1;\n                atComment = false;\n                break;\n            default:\n                // This may be wrong after doc-end, but in that case it doesn't matter\n                if (!atComment)\n                    afterEmptyLine = true;\n                atComment = false;\n        }\n    }\n    return { comment, afterEmptyLine };\n}\n/**\n * Compose a stream of CST nodes into a stream of YAML Documents.\n *\n * ```ts\n * import { Composer, Parser } from 'yaml'\n *\n * const src: string = ...\n * const tokens = new Parser().parse(src)\n * const docs = new Composer().compose(tokens)\n * ```\n */\nclass Composer {\n    constructor(options = {}) {\n        this.doc = null;\n        this.atDirectives = false;\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n        this.onError = (source, code, message, warning) => {\n            const pos = getErrorPos(source);\n            if (warning)\n                this.warnings.push(new YAMLWarning(pos, code, message));\n            else\n                this.errors.push(new YAMLParseError(pos, code, message));\n        };\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        this.directives = new Directives({ version: options.version || '1.2' });\n        this.options = options;\n    }\n    decorate(doc, afterDoc) {\n        const { comment, afterEmptyLine } = parsePrelude(this.prelude);\n        //console.log({ dc: doc.comment, prelude, comment })\n        if (comment) {\n            const dc = doc.contents;\n            if (afterDoc) {\n                doc.comment = doc.comment ? `${doc.comment}\\n${comment}` : comment;\n            }\n            else if (afterEmptyLine || doc.directives.docStart || !dc) {\n                doc.commentBefore = comment;\n            }\n            else if (isCollection(dc) && !dc.flow && dc.items.length > 0) {\n                let it = dc.items[0];\n                if (isPair(it))\n                    it = it.key;\n                const cb = it.commentBefore;\n                it.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n            else {\n                const cb = dc.commentBefore;\n                dc.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n        }\n        if (afterDoc) {\n            Array.prototype.push.apply(doc.errors, this.errors);\n            Array.prototype.push.apply(doc.warnings, this.warnings);\n        }\n        else {\n            doc.errors = this.errors;\n            doc.warnings = this.warnings;\n        }\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n    }\n    /**\n     * Current stream status information.\n     *\n     * Mostly useful at the end of input for an empty stream.\n     */\n    streamInfo() {\n        return {\n            comment: parsePrelude(this.prelude).comment,\n            directives: this.directives,\n            errors: this.errors,\n            warnings: this.warnings\n        };\n    }\n    /**\n     * Compose tokens into documents.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *compose(tokens, forceDoc = false, endOffset = -1) {\n        for (const token of tokens)\n            yield* this.next(token);\n        yield* this.end(forceDoc, endOffset);\n    }\n    /** Advance the composer by one CST token. */\n    *next(token) {\n        switch (token.type) {\n            case 'directive':\n                this.directives.add(token.source, (offset, message, warning) => {\n                    const pos = getErrorPos(token);\n                    pos[0] += offset;\n                    this.onError(pos, 'BAD_DIRECTIVE', message, warning);\n                });\n                this.prelude.push(token.source);\n                this.atDirectives = true;\n                break;\n            case 'document': {\n                const doc = composeDoc(this.options, this.directives, token, this.onError);\n                if (this.atDirectives && !doc.directives.docStart)\n                    this.onError(token, 'MISSING_CHAR', 'Missing directives-end/doc-start indicator line');\n                this.decorate(doc, false);\n                if (this.doc)\n                    yield this.doc;\n                this.doc = doc;\n                this.atDirectives = false;\n                break;\n            }\n            case 'byte-order-mark':\n            case 'space':\n                break;\n            case 'comment':\n            case 'newline':\n                this.prelude.push(token.source);\n                break;\n            case 'error': {\n                const msg = token.source\n                    ? `${token.message}: ${JSON.stringify(token.source)}`\n                    : token.message;\n                const error = new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg);\n                if (this.atDirectives || !this.doc)\n                    this.errors.push(error);\n                else\n                    this.doc.errors.push(error);\n                break;\n            }\n            case 'doc-end': {\n                if (!this.doc) {\n                    const msg = 'Unexpected doc-end without preceding document';\n                    this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg));\n                    break;\n                }\n                this.doc.directives.docEnd = true;\n                const end = resolveEnd(token.end, token.offset + token.source.length, this.doc.options.strict, this.onError);\n                this.decorate(this.doc, true);\n                if (end.comment) {\n                    const dc = this.doc.comment;\n                    this.doc.comment = dc ? `${dc}\\n${end.comment}` : end.comment;\n                }\n                this.doc.range[2] = end.offset;\n                break;\n            }\n            default:\n                this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', `Unsupported token ${token.type}`));\n        }\n    }\n    /**\n     * Call at end of input to yield any remaining document.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *end(forceDoc = false, endOffset = -1) {\n        if (this.doc) {\n            this.decorate(this.doc, true);\n            yield this.doc;\n            this.doc = null;\n        }\n        else if (forceDoc) {\n            const opts = Object.assign({ _directives: this.directives }, this.options);\n            const doc = new Document(undefined, opts);\n            if (this.atDirectives)\n                this.onError(endOffset, 'MISSING_CHAR', 'Missing directives-end indicator line');\n            doc.range = [0, endOffset, endOffset];\n            this.decorate(doc, false);\n            yield doc;\n        }\n    }\n}\n\nexport { Composer };\n","import { resolveBlockScalar } from '../compose/resolve-block-scalar.js';\nimport { resolveFlowScalar } from '../compose/resolve-flow-scalar.js';\nimport { YAMLParseError } from '../errors.js';\nimport { stringifyString } from '../stringify/stringifyString.js';\n\nfunction resolveAsScalar(token, strict = true, onError) {\n    if (token) {\n        const _onError = (pos, code, message) => {\n            const offset = typeof pos === 'number' ? pos : Array.isArray(pos) ? pos[0] : pos.offset;\n            if (onError)\n                onError(offset, code, message);\n            else\n                throw new YAMLParseError([offset, offset + 1], code, message);\n        };\n        switch (token.type) {\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return resolveFlowScalar(token, strict, _onError);\n            case 'block-scalar':\n                return resolveBlockScalar(token, strict, _onError);\n        }\n    }\n    return null;\n}\n/**\n * Create a new scalar token with `value`\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.end Comments and whitespace after the end of the value, or after the block scalar header. If undefined, a newline will be added.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.indent The indent level of the token.\n * @param context.inFlow Is this scalar within a flow collection? This may affect the resolved type of the token's value.\n * @param context.offset The offset position of the token.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction createScalarToken(value, context) {\n    const { implicitKey = false, indent, inFlow = false, offset = -1, type = 'PLAIN' } = context;\n    const source = stringifyString({ type, value }, {\n        implicitKey,\n        indent: indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    const end = context.end ?? [\n        { type: 'newline', offset: -1, indent, source: '\\n' }\n    ];\n    switch (source[0]) {\n        case '|':\n        case '>': {\n            const he = source.indexOf('\\n');\n            const head = source.substring(0, he);\n            const body = source.substring(he + 1) + '\\n';\n            const props = [\n                { type: 'block-scalar-header', offset, indent, source: head }\n            ];\n            if (!addEndtoBlockProps(props, end))\n                props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n            return { type: 'block-scalar', offset, indent, props, source: body };\n        }\n        case '\"':\n            return { type: 'double-quoted-scalar', offset, indent, source, end };\n        case \"'\":\n            return { type: 'single-quoted-scalar', offset, indent, source, end };\n        default:\n            return { type: 'scalar', offset, indent, source, end };\n    }\n}\n/**\n * Set the value of `token` to the given string `value`, overwriting any previous contents and type that it may have.\n *\n * Best efforts are made to retain any comments previously associated with the `token`,\n * though all contents within a collection's `items` will be overwritten.\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param token Any token. If it does not include an `indent` value, the value will be stringified as if it were an implicit key.\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.afterKey In most cases, values after a key should have an additional level of indentation.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.inFlow Being within a flow collection may affect the resolved type of the token's value.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction setScalarValue(token, value, context = {}) {\n    let { afterKey = false, implicitKey = false, inFlow = false, type } = context;\n    let indent = 'indent' in token ? token.indent : null;\n    if (afterKey && typeof indent === 'number')\n        indent += 2;\n    if (!type)\n        switch (token.type) {\n            case 'single-quoted-scalar':\n                type = 'QUOTE_SINGLE';\n                break;\n            case 'double-quoted-scalar':\n                type = 'QUOTE_DOUBLE';\n                break;\n            case 'block-scalar': {\n                const header = token.props[0];\n                if (header.type !== 'block-scalar-header')\n                    throw new Error('Invalid block scalar header');\n                type = header.source[0] === '>' ? 'BLOCK_FOLDED' : 'BLOCK_LITERAL';\n                break;\n            }\n            default:\n                type = 'PLAIN';\n        }\n    const source = stringifyString({ type, value }, {\n        implicitKey: implicitKey || indent === null,\n        indent: indent !== null && indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    switch (source[0]) {\n        case '|':\n        case '>':\n            setBlockScalarValue(token, source);\n            break;\n        case '\"':\n            setFlowScalarValue(token, source, 'double-quoted-scalar');\n            break;\n        case \"'\":\n            setFlowScalarValue(token, source, 'single-quoted-scalar');\n            break;\n        default:\n            setFlowScalarValue(token, source, 'scalar');\n    }\n}\nfunction setBlockScalarValue(token, source) {\n    const he = source.indexOf('\\n');\n    const head = source.substring(0, he);\n    const body = source.substring(he + 1) + '\\n';\n    if (token.type === 'block-scalar') {\n        const header = token.props[0];\n        if (header.type !== 'block-scalar-header')\n            throw new Error('Invalid block scalar header');\n        header.source = head;\n        token.source = body;\n    }\n    else {\n        const { offset } = token;\n        const indent = 'indent' in token ? token.indent : -1;\n        const props = [\n            { type: 'block-scalar-header', offset, indent, source: head }\n        ];\n        if (!addEndtoBlockProps(props, 'end' in token ? token.end : undefined))\n            props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n        for (const key of Object.keys(token))\n            if (key !== 'type' && key !== 'offset')\n                delete token[key];\n        Object.assign(token, { type: 'block-scalar', indent, props, source: body });\n    }\n}\n/** @returns `true` if last token is a newline */\nfunction addEndtoBlockProps(props, end) {\n    if (end)\n        for (const st of end)\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                    props.push(st);\n                    break;\n                case 'newline':\n                    props.push(st);\n                    return true;\n            }\n    return false;\n}\nfunction setFlowScalarValue(token, source, type) {\n    switch (token.type) {\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            token.type = type;\n            token.source = source;\n            break;\n        case 'block-scalar': {\n            const end = token.props.slice(1);\n            let oa = source.length;\n            if (token.props[0].type === 'block-scalar-header')\n                oa -= token.props[0].source.length;\n            for (const tok of end)\n                tok.offset += oa;\n            delete token.props;\n            Object.assign(token, { type, source, end });\n            break;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            const offset = token.offset + source.length;\n            const nl = { type: 'newline', offset, indent: token.indent, source: '\\n' };\n            delete token.items;\n            Object.assign(token, { type, source, end: [nl] });\n            break;\n        }\n        default: {\n            const indent = 'indent' in token ? token.indent : -1;\n            const end = 'end' in token && Array.isArray(token.end)\n                ? token.end.filter(st => st.type === 'space' ||\n                    st.type === 'comment' ||\n                    st.type === 'newline')\n                : [];\n            for (const key of Object.keys(token))\n                if (key !== 'type' && key !== 'offset')\n                    delete token[key];\n            Object.assign(token, { type, indent, source, end });\n        }\n    }\n}\n\nexport { createScalarToken, resolveAsScalar, setScalarValue };\n","/**\n * Stringify a CST document, token, or collection item\n *\n * Fair warning: This applies no validation whatsoever, and\n * simply concatenates the sources in their logical order.\n */\nconst stringify = (cst) => 'type' in cst ? stringifyToken(cst) : stringifyItem(cst);\nfunction stringifyToken(token) {\n    switch (token.type) {\n        case 'block-scalar': {\n            let res = '';\n            for (const tok of token.props)\n                res += stringifyToken(tok);\n            return res + token.source;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            let res = '';\n            for (const item of token.items)\n                res += stringifyItem(item);\n            return res;\n        }\n        case 'flow-collection': {\n            let res = token.start.source;\n            for (const item of token.items)\n                res += stringifyItem(item);\n            for (const st of token.end)\n                res += st.source;\n            return res;\n        }\n        case 'document': {\n            let res = stringifyItem(token);\n            if (token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n        default: {\n            let res = token.source;\n            if ('end' in token && token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n    }\n}\nfunction stringifyItem({ start, key, sep, value }) {\n    let res = '';\n    for (const st of start)\n        res += st.source;\n    if (key)\n        res += stringifyToken(key);\n    if (sep)\n        for (const st of sep)\n            res += st.source;\n    if (value)\n        res += stringifyToken(value);\n    return res;\n}\n\nexport { stringify };\n","const BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove item');\n/**\n * Apply a visitor to a CST document or item.\n *\n * Walks through the tree (depth-first) starting from the root, calling a\n * `visitor` function with two arguments when entering each item:\n *   - `item`: The current item, which included the following members:\n *     - `start: SourceToken[]` – Source tokens before the key or value,\n *       possibly including its anchor or tag.\n *     - `key?: Token | null` – Set for pair values. May then be `null`, if\n *       the key before the `:` separator is empty.\n *     - `sep?: SourceToken[]` – Source tokens between the key and the value,\n *       which should include the `:` map value indicator if `value` is set.\n *     - `value?: Token` – The value of a sequence item, or of a map pair.\n *   - `path`: The steps from the root to the current node, as an array of\n *     `['key' | 'value', number]` tuples.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this token, continue with\n *      next sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current item, then continue with the next one\n *   - `number`: Set the index of the next step. This is useful especially if\n *     the index of the current token has changed.\n *   - `function`: Define the next visitor for this item. After the original\n *     visitor is called on item entry, next visitors are called after handling\n *     a non-empty `key` and when exiting the item.\n */\nfunction visit(cst, visitor) {\n    if ('type' in cst && cst.type === 'document')\n        cst = { start: cst.start, value: cst.value };\n    _visit(Object.freeze([]), cst, visitor);\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current item */\nvisit.SKIP = SKIP;\n/** Remove the current item */\nvisit.REMOVE = REMOVE;\n/** Find the item at `path` from `cst` as the root */\nvisit.itemAtPath = (cst, path) => {\n    let item = cst;\n    for (const [field, index] of path) {\n        const tok = item?.[field];\n        if (tok && 'items' in tok) {\n            item = tok.items[index];\n        }\n        else\n            return undefined;\n    }\n    return item;\n};\n/**\n * Get the immediate parent collection of the item at `path` from `cst` as the root.\n *\n * Throws an error if the collection is not found, which should never happen if the item itself exists.\n */\nvisit.parentCollection = (cst, path) => {\n    const parent = visit.itemAtPath(cst, path.slice(0, -1));\n    const field = path[path.length - 1][0];\n    const coll = parent?.[field];\n    if (coll && 'items' in coll)\n        return coll;\n    throw new Error('Parent collection not found');\n};\nfunction _visit(path, item, visitor) {\n    let ctrl = visitor(item, path);\n    if (typeof ctrl === 'symbol')\n        return ctrl;\n    for (const field of ['key', 'value']) {\n        const token = item[field];\n        if (token && 'items' in token) {\n            for (let i = 0; i < token.items.length; ++i) {\n                const ci = _visit(Object.freeze(path.concat([[field, i]])), token.items[i], visitor);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    token.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n            if (typeof ctrl === 'function' && field === 'key')\n                ctrl = ctrl(item, path);\n        }\n    }\n    return typeof ctrl === 'function' ? ctrl(item, path) : ctrl;\n}\n\nexport { visit };\n","export { createScalarToken, resolveAsScalar, setScalarValue } from './cst-scalar.js';\nexport { stringify } from './cst-stringify.js';\nexport { visit } from './cst-visit.js';\n\n/** The byte order mark */\nconst BOM = '\\u{FEFF}';\n/** Start of doc-mode */\nconst DOCUMENT = '\\x02'; // C0: Start of Text\n/** Unexpected end of flow-mode */\nconst FLOW_END = '\\x18'; // C0: Cancel\n/** Next token is a scalar value */\nconst SCALAR = '\\x1f'; // C0: Unit Separator\n/** @returns `true` if `token` is a flow or block collection */\nconst isCollection = (token) => !!token && 'items' in token;\n/** @returns `true` if `token` is a flow or block scalar; not an alias */\nconst isScalar = (token) => !!token &&\n    (token.type === 'scalar' ||\n        token.type === 'single-quoted-scalar' ||\n        token.type === 'double-quoted-scalar' ||\n        token.type === 'block-scalar');\n/* istanbul ignore next */\n/** Get a printable representation of a lexer token */\nfunction prettyToken(token) {\n    switch (token) {\n        case BOM:\n            return '<BOM>';\n        case DOCUMENT:\n            return '<DOC>';\n        case FLOW_END:\n            return '<FLOW_END>';\n        case SCALAR:\n            return '<SCALAR>';\n        default:\n            return JSON.stringify(token);\n    }\n}\n/** Identify the type of a lexer token. May return `null` for unknown tokens. */\nfunction tokenType(source) {\n    switch (source) {\n        case BOM:\n            return 'byte-order-mark';\n        case DOCUMENT:\n            return 'doc-mode';\n        case FLOW_END:\n            return 'flow-error-end';\n        case SCALAR:\n            return 'scalar';\n        case '---':\n            return 'doc-start';\n        case '...':\n            return 'doc-end';\n        case '':\n        case '\\n':\n        case '\\r\\n':\n            return 'newline';\n        case '-':\n            return 'seq-item-ind';\n        case '?':\n            return 'explicit-key-ind';\n        case ':':\n            return 'map-value-ind';\n        case '{':\n            return 'flow-map-start';\n        case '}':\n            return 'flow-map-end';\n        case '[':\n            return 'flow-seq-start';\n        case ']':\n            return 'flow-seq-end';\n        case ',':\n            return 'comma';\n    }\n    switch (source[0]) {\n        case ' ':\n        case '\\t':\n            return 'space';\n        case '#':\n            return 'comment';\n        case '%':\n            return 'directive-line';\n        case '*':\n            return 'alias';\n        case '&':\n            return 'anchor';\n        case '!':\n            return 'tag';\n        case \"'\":\n            return 'single-quoted-scalar';\n        case '\"':\n            return 'double-quoted-scalar';\n        case '|':\n        case '>':\n            return 'block-scalar-header';\n    }\n    return null;\n}\n\nexport { BOM, DOCUMENT, FLOW_END, SCALAR, isCollection, isScalar, prettyToken, tokenType };\n","import { BOM, DOCUMENT, FLOW_END, SCALAR } from './cst.js';\n\n/*\nSTART -> stream\n\nstream\n  directive -> line-end -> stream\n  indent + line-end -> stream\n  [else] -> line-start\n\nline-end\n  comment -> line-end\n  newline -> .\n  input-end -> END\n\nline-start\n  doc-start -> doc\n  doc-end -> stream\n  [else] -> indent -> block-start\n\nblock-start\n  seq-item-start -> block-start\n  explicit-key-start -> block-start\n  map-value-start -> block-start\n  [else] -> doc\n\ndoc\n  line-end -> line-start\n  spaces -> doc\n  anchor -> doc\n  tag -> doc\n  flow-start -> flow -> doc\n  flow-end -> error -> doc\n  seq-item-start -> error -> doc\n  explicit-key-start -> error -> doc\n  map-value-start -> doc\n  alias -> doc\n  quote-start -> quoted-scalar -> doc\n  block-scalar-header -> line-end -> block-scalar(min) -> line-start\n  [else] -> plain-scalar(false, min) -> doc\n\nflow\n  line-end -> flow\n  spaces -> flow\n  anchor -> flow\n  tag -> flow\n  flow-start -> flow -> flow\n  flow-end -> .\n  seq-item-start -> error -> flow\n  explicit-key-start -> flow\n  map-value-start -> flow\n  alias -> flow\n  quote-start -> quoted-scalar -> flow\n  comma -> flow\n  [else] -> plain-scalar(true, 0) -> flow\n\nquoted-scalar\n  quote-end -> .\n  [else] -> quoted-scalar\n\nblock-scalar(min)\n  newline + peek(indent < min) -> .\n  [else] -> block-scalar(min)\n\nplain-scalar(is-flow, min)\n  scalar-end(is-flow) -> .\n  peek(newline + (indent < min)) -> .\n  [else] -> plain-scalar(min)\n*/\nfunction isEmpty(ch) {\n    switch (ch) {\n        case undefined:\n        case ' ':\n        case '\\n':\n        case '\\r':\n        case '\\t':\n            return true;\n        default:\n            return false;\n    }\n}\nconst hexDigits = '0123456789ABCDEFabcdef'.split('');\nconst tagChars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-#;/?:@&=+$_.!~*'()\".split('');\nconst invalidFlowScalarChars = ',[]{}'.split('');\nconst invalidAnchorChars = ' ,[]{}\\n\\r\\t'.split('');\nconst isNotAnchorChar = (ch) => !ch || invalidAnchorChars.includes(ch);\n/**\n * Splits an input string into lexical tokens, i.e. smaller strings that are\n * easily identifiable by `tokens.tokenType()`.\n *\n * Lexing starts always in a \"stream\" context. Incomplete input may be buffered\n * until a complete token can be emitted.\n *\n * In addition to slices of the original input, the following control characters\n * may also be emitted:\n *\n * - `\\x02` (Start of Text): A document starts with the next token\n * - `\\x18` (Cancel): Unexpected end of flow-mode (indicates an error)\n * - `\\x1f` (Unit Separator): Next token is a scalar value\n * - `\\u{FEFF}` (Byte order mark): Emitted separately outside documents\n */\nclass Lexer {\n    constructor() {\n        /**\n         * Flag indicating whether the end of the current buffer marks the end of\n         * all input\n         */\n        this.atEnd = false;\n        /**\n         * Explicit indent set in block scalar header, as an offset from the current\n         * minimum indent, so e.g. set to 1 from a header `|2+`. Set to -1 if not\n         * explicitly set.\n         */\n        this.blockScalarIndent = -1;\n        /**\n         * Block scalars that include a + (keep) chomping indicator in their header\n         * include trailing empty lines, which are otherwise excluded from the\n         * scalar's contents.\n         */\n        this.blockScalarKeep = false;\n        /** Current input */\n        this.buffer = '';\n        /**\n         * Flag noting whether the map value indicator : can immediately follow this\n         * node within a flow context.\n         */\n        this.flowKey = false;\n        /** Count of surrounding flow collection levels. */\n        this.flowLevel = 0;\n        /**\n         * Minimum level of indentation required for next lines to be parsed as a\n         * part of the current scalar value.\n         */\n        this.indentNext = 0;\n        /** Indentation level of the current line. */\n        this.indentValue = 0;\n        /** Position of the next \\n character. */\n        this.lineEndPos = null;\n        /** Stores the state of the lexer if reaching the end of incpomplete input */\n        this.next = null;\n        /** A pointer to `buffer`; the current position of the lexer. */\n        this.pos = 0;\n    }\n    /**\n     * Generate YAML tokens from the `source` string. If `incomplete`,\n     * a part of the last line may be left as a buffer for the next call.\n     *\n     * @returns A generator of lexical tokens\n     */\n    *lex(source, incomplete = false) {\n        if (source) {\n            this.buffer = this.buffer ? this.buffer + source : source;\n            this.lineEndPos = null;\n        }\n        this.atEnd = !incomplete;\n        let next = this.next ?? 'stream';\n        while (next && (incomplete || this.hasChars(1)))\n            next = yield* this.parseNext(next);\n    }\n    atLineEnd() {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (ch === ' ' || ch === '\\t')\n            ch = this.buffer[++i];\n        if (!ch || ch === '#' || ch === '\\n')\n            return true;\n        if (ch === '\\r')\n            return this.buffer[i + 1] === '\\n';\n        return false;\n    }\n    charAt(n) {\n        return this.buffer[this.pos + n];\n    }\n    continueScalar(offset) {\n        let ch = this.buffer[offset];\n        if (this.indentNext > 0) {\n            let indent = 0;\n            while (ch === ' ')\n                ch = this.buffer[++indent + offset];\n            if (ch === '\\r') {\n                const next = this.buffer[indent + offset + 1];\n                if (next === '\\n' || (!next && !this.atEnd))\n                    return offset + indent + 1;\n            }\n            return ch === '\\n' || indent >= this.indentNext || (!ch && !this.atEnd)\n                ? offset + indent\n                : -1;\n        }\n        if (ch === '-' || ch === '.') {\n            const dt = this.buffer.substr(offset, 3);\n            if ((dt === '---' || dt === '...') && isEmpty(this.buffer[offset + 3]))\n                return -1;\n        }\n        return offset;\n    }\n    getLine() {\n        let end = this.lineEndPos;\n        if (typeof end !== 'number' || (end !== -1 && end < this.pos)) {\n            end = this.buffer.indexOf('\\n', this.pos);\n            this.lineEndPos = end;\n        }\n        if (end === -1)\n            return this.atEnd ? this.buffer.substring(this.pos) : null;\n        if (this.buffer[end - 1] === '\\r')\n            end -= 1;\n        return this.buffer.substring(this.pos, end);\n    }\n    hasChars(n) {\n        return this.pos + n <= this.buffer.length;\n    }\n    setNext(state) {\n        this.buffer = this.buffer.substring(this.pos);\n        this.pos = 0;\n        this.lineEndPos = null;\n        this.next = state;\n        return null;\n    }\n    peek(n) {\n        return this.buffer.substr(this.pos, n);\n    }\n    *parseNext(next) {\n        switch (next) {\n            case 'stream':\n                return yield* this.parseStream();\n            case 'line-start':\n                return yield* this.parseLineStart();\n            case 'block-start':\n                return yield* this.parseBlockStart();\n            case 'doc':\n                return yield* this.parseDocument();\n            case 'flow':\n                return yield* this.parseFlowCollection();\n            case 'quoted-scalar':\n                return yield* this.parseQuotedScalar();\n            case 'block-scalar':\n                return yield* this.parseBlockScalar();\n            case 'plain-scalar':\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseStream() {\n        let line = this.getLine();\n        if (line === null)\n            return this.setNext('stream');\n        if (line[0] === BOM) {\n            yield* this.pushCount(1);\n            line = line.substring(1);\n        }\n        if (line[0] === '%') {\n            let dirEnd = line.length;\n            const cs = line.indexOf('#');\n            if (cs !== -1) {\n                const ch = line[cs - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd = cs - 1;\n            }\n            while (true) {\n                const ch = line[dirEnd - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd -= 1;\n                else\n                    break;\n            }\n            const n = (yield* this.pushCount(dirEnd)) + (yield* this.pushSpaces(true));\n            yield* this.pushCount(line.length - n); // possible comment\n            this.pushNewline();\n            return 'stream';\n        }\n        if (this.atLineEnd()) {\n            const sp = yield* this.pushSpaces(true);\n            yield* this.pushCount(line.length - sp);\n            yield* this.pushNewline();\n            return 'stream';\n        }\n        yield DOCUMENT;\n        return yield* this.parseLineStart();\n    }\n    *parseLineStart() {\n        const ch = this.charAt(0);\n        if (!ch && !this.atEnd)\n            return this.setNext('line-start');\n        if (ch === '-' || ch === '.') {\n            if (!this.atEnd && !this.hasChars(4))\n                return this.setNext('line-start');\n            const s = this.peek(3);\n            if (s === '---' && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                this.indentValue = 0;\n                this.indentNext = 0;\n                return 'doc';\n            }\n            else if (s === '...' && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                return 'stream';\n            }\n        }\n        this.indentValue = yield* this.pushSpaces(false);\n        if (this.indentNext > this.indentValue && !isEmpty(this.charAt(1)))\n            this.indentNext = this.indentValue;\n        return yield* this.parseBlockStart();\n    }\n    *parseBlockStart() {\n        const [ch0, ch1] = this.peek(2);\n        if (!ch1 && !this.atEnd)\n            return this.setNext('block-start');\n        if ((ch0 === '-' || ch0 === '?' || ch0 === ':') && isEmpty(ch1)) {\n            const n = (yield* this.pushCount(1)) + (yield* this.pushSpaces(true));\n            this.indentNext = this.indentValue + 1;\n            this.indentValue += n;\n            return yield* this.parseBlockStart();\n        }\n        return 'doc';\n    }\n    *parseDocument() {\n        yield* this.pushSpaces(true);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('doc');\n        let n = yield* this.pushIndicators();\n        switch (line[n]) {\n            case '#':\n                yield* this.pushCount(line.length - n);\n            // fallthrough\n            case undefined:\n                yield* this.pushNewline();\n                return yield* this.parseLineStart();\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel = 1;\n                return 'flow';\n            case '}':\n            case ']':\n                // this is an error\n                yield* this.pushCount(1);\n                return 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'doc';\n            case '\"':\n            case \"'\":\n                return yield* this.parseQuotedScalar();\n            case '|':\n            case '>':\n                n += yield* this.parseBlockScalarHeader();\n                n += yield* this.pushSpaces(true);\n                yield* this.pushCount(line.length - n);\n                yield* this.pushNewline();\n                return yield* this.parseBlockScalar();\n            default:\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseFlowCollection() {\n        let nl, sp;\n        let indent = -1;\n        do {\n            nl = yield* this.pushNewline();\n            if (nl > 0) {\n                sp = yield* this.pushSpaces(false);\n                this.indentValue = indent = sp;\n            }\n            else {\n                sp = 0;\n            }\n            sp += yield* this.pushSpaces(true);\n        } while (nl + sp > 0);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('flow');\n        if ((indent !== -1 && indent < this.indentNext && line[0] !== '#') ||\n            (indent === 0 &&\n                (line.startsWith('---') || line.startsWith('...')) &&\n                isEmpty(line[3]))) {\n            // Allowing for the terminal ] or } at the same (rather than greater)\n            // indent level as the initial [ or { is technically invalid, but\n            // failing here would be surprising to users.\n            const atFlowEndMarker = indent === this.indentNext - 1 &&\n                this.flowLevel === 1 &&\n                (line[0] === ']' || line[0] === '}');\n            if (!atFlowEndMarker) {\n                // this is an error\n                this.flowLevel = 0;\n                yield FLOW_END;\n                return yield* this.parseLineStart();\n            }\n        }\n        let n = 0;\n        while (line[n] === ',') {\n            n += yield* this.pushCount(1);\n            n += yield* this.pushSpaces(true);\n            this.flowKey = false;\n        }\n        n += yield* this.pushIndicators();\n        switch (line[n]) {\n            case undefined:\n                return 'flow';\n            case '#':\n                yield* this.pushCount(line.length - n);\n                return 'flow';\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel += 1;\n                return 'flow';\n            case '}':\n            case ']':\n                yield* this.pushCount(1);\n                this.flowKey = true;\n                this.flowLevel -= 1;\n                return this.flowLevel ? 'flow' : 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'flow';\n            case '\"':\n            case \"'\":\n                this.flowKey = true;\n                return yield* this.parseQuotedScalar();\n            case ':': {\n                const next = this.charAt(1);\n                if (this.flowKey || isEmpty(next) || next === ',') {\n                    this.flowKey = false;\n                    yield* this.pushCount(1);\n                    yield* this.pushSpaces(true);\n                    return 'flow';\n                }\n            }\n            // fallthrough\n            default:\n                this.flowKey = false;\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseQuotedScalar() {\n        const quote = this.charAt(0);\n        let end = this.buffer.indexOf(quote, this.pos + 1);\n        if (quote === \"'\") {\n            while (end !== -1 && this.buffer[end + 1] === \"'\")\n                end = this.buffer.indexOf(\"'\", end + 2);\n        }\n        else {\n            // double-quote\n            while (end !== -1) {\n                let n = 0;\n                while (this.buffer[end - 1 - n] === '\\\\')\n                    n += 1;\n                if (n % 2 === 0)\n                    break;\n                end = this.buffer.indexOf('\"', end + 1);\n            }\n        }\n        // Only looking for newlines within the quotes\n        const qb = this.buffer.substring(0, end);\n        let nl = qb.indexOf('\\n', this.pos);\n        if (nl !== -1) {\n            while (nl !== -1) {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = qb.indexOf('\\n', cs);\n            }\n            if (nl !== -1) {\n                // this is an error caused by an unexpected unindent\n                end = nl - (qb[nl - 1] === '\\r' ? 2 : 1);\n            }\n        }\n        if (end === -1) {\n            if (!this.atEnd)\n                return this.setNext('quoted-scalar');\n            end = this.buffer.length;\n        }\n        yield* this.pushToIndex(end + 1, false);\n        return this.flowLevel ? 'flow' : 'doc';\n    }\n    *parseBlockScalarHeader() {\n        this.blockScalarIndent = -1;\n        this.blockScalarKeep = false;\n        let i = this.pos;\n        while (true) {\n            const ch = this.buffer[++i];\n            if (ch === '+')\n                this.blockScalarKeep = true;\n            else if (ch > '0' && ch <= '9')\n                this.blockScalarIndent = Number(ch) - 1;\n            else if (ch !== '-')\n                break;\n        }\n        return yield* this.pushUntil(ch => isEmpty(ch) || ch === '#');\n    }\n    *parseBlockScalar() {\n        let nl = this.pos - 1; // may be -1 if this.pos === 0\n        let indent = 0;\n        let ch;\n        loop: for (let i = this.pos; (ch = this.buffer[i]); ++i) {\n            switch (ch) {\n                case ' ':\n                    indent += 1;\n                    break;\n                case '\\n':\n                    nl = i;\n                    indent = 0;\n                    break;\n                case '\\r': {\n                    const next = this.buffer[i + 1];\n                    if (!next && !this.atEnd)\n                        return this.setNext('block-scalar');\n                    if (next === '\\n')\n                        break;\n                } // fallthrough\n                default:\n                    break loop;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('block-scalar');\n        if (indent >= this.indentNext) {\n            if (this.blockScalarIndent === -1)\n                this.indentNext = indent;\n            else\n                this.indentNext += this.blockScalarIndent;\n            do {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = this.buffer.indexOf('\\n', cs);\n            } while (nl !== -1);\n            if (nl === -1) {\n                if (!this.atEnd)\n                    return this.setNext('block-scalar');\n                nl = this.buffer.length;\n            }\n        }\n        if (!this.blockScalarKeep) {\n            do {\n                let i = nl - 1;\n                let ch = this.buffer[i];\n                if (ch === '\\r')\n                    ch = this.buffer[--i];\n                const lastChar = i; // Drop the line if last char not more indented\n                while (ch === ' ' || ch === '\\t')\n                    ch = this.buffer[--i];\n                if (ch === '\\n' && i >= this.pos && i + 1 + indent > lastChar)\n                    nl = i;\n                else\n                    break;\n            } while (true);\n        }\n        yield SCALAR;\n        yield* this.pushToIndex(nl + 1, true);\n        return yield* this.parseLineStart();\n    }\n    *parsePlainScalar() {\n        const inFlow = this.flowLevel > 0;\n        let end = this.pos - 1;\n        let i = this.pos - 1;\n        let ch;\n        while ((ch = this.buffer[++i])) {\n            if (ch === ':') {\n                const next = this.buffer[i + 1];\n                if (isEmpty(next) || (inFlow && next === ','))\n                    break;\n                end = i;\n            }\n            else if (isEmpty(ch)) {\n                let next = this.buffer[i + 1];\n                if (ch === '\\r') {\n                    if (next === '\\n') {\n                        i += 1;\n                        ch = '\\n';\n                        next = this.buffer[i + 1];\n                    }\n                    else\n                        end = i;\n                }\n                if (next === '#' || (inFlow && invalidFlowScalarChars.includes(next)))\n                    break;\n                if (ch === '\\n') {\n                    const cs = this.continueScalar(i + 1);\n                    if (cs === -1)\n                        break;\n                    i = Math.max(i, cs - 2); // to advance, but still account for ' #'\n                }\n            }\n            else {\n                if (inFlow && invalidFlowScalarChars.includes(ch))\n                    break;\n                end = i;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('plain-scalar');\n        yield SCALAR;\n        yield* this.pushToIndex(end + 1, true);\n        return inFlow ? 'flow' : 'doc';\n    }\n    *pushCount(n) {\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos += n;\n            return n;\n        }\n        return 0;\n    }\n    *pushToIndex(i, allowEmpty) {\n        const s = this.buffer.slice(this.pos, i);\n        if (s) {\n            yield s;\n            this.pos += s.length;\n            return s.length;\n        }\n        else if (allowEmpty)\n            yield '';\n        return 0;\n    }\n    *pushIndicators() {\n        switch (this.charAt(0)) {\n            case '!':\n                return ((yield* this.pushTag()) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '&':\n                return ((yield* this.pushUntil(isNotAnchorChar)) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '-': // this is an error\n            case '?': // this is an error outside flow collections\n            case ':': {\n                const inFlow = this.flowLevel > 0;\n                const ch1 = this.charAt(1);\n                if (isEmpty(ch1) || (inFlow && invalidFlowScalarChars.includes(ch1))) {\n                    if (!inFlow)\n                        this.indentNext = this.indentValue + 1;\n                    else if (this.flowKey)\n                        this.flowKey = false;\n                    return ((yield* this.pushCount(1)) +\n                        (yield* this.pushSpaces(true)) +\n                        (yield* this.pushIndicators()));\n                }\n            }\n        }\n        return 0;\n    }\n    *pushTag() {\n        if (this.charAt(1) === '<') {\n            let i = this.pos + 2;\n            let ch = this.buffer[i];\n            while (!isEmpty(ch) && ch !== '>')\n                ch = this.buffer[++i];\n            return yield* this.pushToIndex(ch === '>' ? i + 1 : i, false);\n        }\n        else {\n            let i = this.pos + 1;\n            let ch = this.buffer[i];\n            while (ch) {\n                if (tagChars.includes(ch))\n                    ch = this.buffer[++i];\n                else if (ch === '%' &&\n                    hexDigits.includes(this.buffer[i + 1]) &&\n                    hexDigits.includes(this.buffer[i + 2])) {\n                    ch = this.buffer[(i += 3)];\n                }\n                else\n                    break;\n            }\n            return yield* this.pushToIndex(i, false);\n        }\n    }\n    *pushNewline() {\n        const ch = this.buffer[this.pos];\n        if (ch === '\\n')\n            return yield* this.pushCount(1);\n        else if (ch === '\\r' && this.charAt(1) === '\\n')\n            return yield* this.pushCount(2);\n        else\n            return 0;\n    }\n    *pushSpaces(allowTabs) {\n        let i = this.pos - 1;\n        let ch;\n        do {\n            ch = this.buffer[++i];\n        } while (ch === ' ' || (allowTabs && ch === '\\t'));\n        const n = i - this.pos;\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos = i;\n        }\n        return n;\n    }\n    *pushUntil(test) {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (!test(ch))\n            ch = this.buffer[++i];\n        return yield* this.pushToIndex(i, false);\n    }\n}\n\nexport { Lexer };\n","/**\n * Tracks newlines during parsing in order to provide an efficient API for\n * determining the one-indexed `{ line, col }` position for any offset\n * within the input.\n */\nclass LineCounter {\n    constructor() {\n        this.lineStarts = [];\n        /**\n         * Should be called in ascending order. Otherwise, call\n         * `lineCounter.lineStarts.sort()` before calling `linePos()`.\n         */\n        this.addNewLine = (offset) => this.lineStarts.push(offset);\n        /**\n         * Performs a binary search and returns the 1-indexed { line, col }\n         * position of `offset`. If `line === 0`, `addNewLine` has never been\n         * called or `offset` is before the first known newline.\n         */\n        this.linePos = (offset) => {\n            let low = 0;\n            let high = this.lineStarts.length;\n            while (low < high) {\n                const mid = (low + high) >> 1; // Math.floor((low + high) / 2)\n                if (this.lineStarts[mid] < offset)\n                    low = mid + 1;\n                else\n                    high = mid;\n            }\n            if (this.lineStarts[low] === offset)\n                return { line: low + 1, col: 1 };\n            if (low === 0)\n                return { line: 0, col: offset };\n            const start = this.lineStarts[low - 1];\n            return { line: low, col: offset - start + 1 };\n        };\n    }\n}\n\nexport { LineCounter };\n","import { tokenType } from './cst.js';\nimport { Lexer } from './lexer.js';\n\nfunction includesToken(list, type) {\n    for (let i = 0; i < list.length; ++i)\n        if (list[i].type === type)\n            return true;\n    return false;\n}\nfunction findNonEmptyIndex(list) {\n    for (let i = 0; i < list.length; ++i) {\n        switch (list[i].type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                break;\n            default:\n                return i;\n        }\n    }\n    return -1;\n}\nfunction isFlowToken(token) {\n    switch (token?.type) {\n        case 'alias':\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'flow-collection':\n            return true;\n        default:\n            return false;\n    }\n}\nfunction getPrevProps(parent) {\n    switch (parent.type) {\n        case 'document':\n            return parent.start;\n        case 'block-map': {\n            const it = parent.items[parent.items.length - 1];\n            return it.sep ?? it.start;\n        }\n        case 'block-seq':\n            return parent.items[parent.items.length - 1].start;\n        /* istanbul ignore next should not happen */\n        default:\n            return [];\n    }\n}\n/** Note: May modify input array */\nfunction getFirstKeyStartProps(prev) {\n    if (prev.length === 0)\n        return [];\n    let i = prev.length;\n    loop: while (--i >= 0) {\n        switch (prev[i].type) {\n            case 'doc-start':\n            case 'explicit-key-ind':\n            case 'map-value-ind':\n            case 'seq-item-ind':\n            case 'newline':\n                break loop;\n        }\n    }\n    while (prev[++i]?.type === 'space') {\n        /* loop */\n    }\n    return prev.splice(i, prev.length);\n}\nfunction fixFlowSeqItems(fc) {\n    if (fc.start.type === 'flow-seq-start') {\n        for (const it of fc.items) {\n            if (it.sep &&\n                !it.value &&\n                !includesToken(it.start, 'explicit-key-ind') &&\n                !includesToken(it.sep, 'map-value-ind')) {\n                if (it.key)\n                    it.value = it.key;\n                delete it.key;\n                if (isFlowToken(it.value)) {\n                    if (it.value.end)\n                        Array.prototype.push.apply(it.value.end, it.sep);\n                    else\n                        it.value.end = it.sep;\n                }\n                else\n                    Array.prototype.push.apply(it.start, it.sep);\n                delete it.sep;\n            }\n        }\n    }\n}\n/**\n * A YAML concrete syntax tree (CST) parser\n *\n * ```ts\n * const src: string = ...\n * for (const token of new Parser().parse(src)) {\n *   // token: Token\n * }\n * ```\n *\n * To use the parser with a user-provided lexer:\n *\n * ```ts\n * function* parse(source: string, lexer: Lexer) {\n *   const parser = new Parser()\n *   for (const lexeme of lexer.lex(source))\n *     yield* parser.next(lexeme)\n *   yield* parser.end()\n * }\n *\n * const src: string = ...\n * const lexer = new Lexer()\n * for (const token of parse(src, lexer)) {\n *   // token: Token\n * }\n * ```\n */\nclass Parser {\n    /**\n     * @param onNewLine - If defined, called separately with the start position of\n     *   each new line (in `parse()`, including the start of input).\n     */\n    constructor(onNewLine) {\n        /** If true, space and sequence indicators count as indentation */\n        this.atNewLine = true;\n        /** If true, next token is a scalar value */\n        this.atScalar = false;\n        /** Current indentation level */\n        this.indent = 0;\n        /** Current offset since the start of parsing */\n        this.offset = 0;\n        /** On the same line with a block map key */\n        this.onKeyLine = false;\n        /** Top indicates the node that's currently being built */\n        this.stack = [];\n        /** The source of the current token, set in parse() */\n        this.source = '';\n        /** The type of the current token, set in parse() */\n        this.type = '';\n        // Must be defined after `next()`\n        this.lexer = new Lexer();\n        this.onNewLine = onNewLine;\n    }\n    /**\n     * Parse `source` as a YAML stream.\n     * If `incomplete`, a part of the last line may be left as a buffer for the next call.\n     *\n     * Errors are not thrown, but yielded as `{ type: 'error', message }` tokens.\n     *\n     * @returns A generator of tokens representing each directive, document, and other structure.\n     */\n    *parse(source, incomplete = false) {\n        if (this.onNewLine && this.offset === 0)\n            this.onNewLine(0);\n        for (const lexeme of this.lexer.lex(source, incomplete))\n            yield* this.next(lexeme);\n        if (!incomplete)\n            yield* this.end();\n    }\n    /**\n     * Advance the parser by the `source` of one lexical token.\n     */\n    *next(source) {\n        this.source = source;\n        if (this.atScalar) {\n            this.atScalar = false;\n            yield* this.step();\n            this.offset += source.length;\n            return;\n        }\n        const type = tokenType(source);\n        if (!type) {\n            const message = `Not a YAML token: ${source}`;\n            yield* this.pop({ type: 'error', offset: this.offset, message, source });\n            this.offset += source.length;\n        }\n        else if (type === 'scalar') {\n            this.atNewLine = false;\n            this.atScalar = true;\n            this.type = 'scalar';\n        }\n        else {\n            this.type = type;\n            yield* this.step();\n            switch (type) {\n                case 'newline':\n                    this.atNewLine = true;\n                    this.indent = 0;\n                    if (this.onNewLine)\n                        this.onNewLine(this.offset + source.length);\n                    break;\n                case 'space':\n                    if (this.atNewLine && source[0] === ' ')\n                        this.indent += source.length;\n                    break;\n                case 'explicit-key-ind':\n                case 'map-value-ind':\n                case 'seq-item-ind':\n                    if (this.atNewLine)\n                        this.indent += source.length;\n                    break;\n                case 'doc-mode':\n                case 'flow-error-end':\n                    return;\n                default:\n                    this.atNewLine = false;\n            }\n            this.offset += source.length;\n        }\n    }\n    /** Call at end of input to push out any remaining constructions */\n    *end() {\n        while (this.stack.length > 0)\n            yield* this.pop();\n    }\n    get sourceToken() {\n        const st = {\n            type: this.type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n        return st;\n    }\n    *step() {\n        const top = this.peek(1);\n        if (this.type === 'doc-end' && (!top || top.type !== 'doc-end')) {\n            while (this.stack.length > 0)\n                yield* this.pop();\n            this.stack.push({\n                type: 'doc-end',\n                offset: this.offset,\n                source: this.source\n            });\n            return;\n        }\n        if (!top)\n            return yield* this.stream();\n        switch (top.type) {\n            case 'document':\n                return yield* this.document(top);\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return yield* this.scalar(top);\n            case 'block-scalar':\n                return yield* this.blockScalar(top);\n            case 'block-map':\n                return yield* this.blockMap(top);\n            case 'block-seq':\n                return yield* this.blockSequence(top);\n            case 'flow-collection':\n                return yield* this.flowCollection(top);\n            case 'doc-end':\n                return yield* this.documentEnd(top);\n        }\n        /* istanbul ignore next should not happen */\n        yield* this.pop();\n    }\n    peek(n) {\n        return this.stack[this.stack.length - n];\n    }\n    *pop(error) {\n        const token = error ?? this.stack.pop();\n        /* istanbul ignore if should not happen */\n        if (!token) {\n            const message = 'Tried to pop an empty stack';\n            yield { type: 'error', offset: this.offset, source: '', message };\n        }\n        else if (this.stack.length === 0) {\n            yield token;\n        }\n        else {\n            const top = this.peek(1);\n            if (token.type === 'block-scalar') {\n                // Block scalars use their parent rather than header indent\n                token.indent = 'indent' in top ? top.indent : 0;\n            }\n            else if (token.type === 'flow-collection' && top.type === 'document') {\n                // Ignore all indent for top-level flow collections\n                token.indent = 0;\n            }\n            if (token.type === 'flow-collection')\n                fixFlowSeqItems(token);\n            switch (top.type) {\n                case 'document':\n                    top.value = token;\n                    break;\n                case 'block-scalar':\n                    top.props.push(token); // error\n                    break;\n                case 'block-map': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value) {\n                        top.items.push({ start: [], key: token, sep: [] });\n                        this.onKeyLine = true;\n                        return;\n                    }\n                    else if (it.sep) {\n                        it.value = token;\n                    }\n                    else {\n                        Object.assign(it, { key: token, sep: [] });\n                        this.onKeyLine = !includesToken(it.start, 'explicit-key-ind');\n                        return;\n                    }\n                    break;\n                }\n                case 'block-seq': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value)\n                        top.items.push({ start: [], value: token });\n                    else\n                        it.value = token;\n                    break;\n                }\n                case 'flow-collection': {\n                    const it = top.items[top.items.length - 1];\n                    if (!it || it.value)\n                        top.items.push({ start: [], key: token, sep: [] });\n                    else if (it.sep)\n                        it.value = token;\n                    else\n                        Object.assign(it, { key: token, sep: [] });\n                    return;\n                }\n                /* istanbul ignore next should not happen */\n                default:\n                    yield* this.pop();\n                    yield* this.pop(token);\n            }\n            if ((top.type === 'document' ||\n                top.type === 'block-map' ||\n                top.type === 'block-seq') &&\n                (token.type === 'block-map' || token.type === 'block-seq')) {\n                const last = token.items[token.items.length - 1];\n                if (last &&\n                    !last.sep &&\n                    !last.value &&\n                    last.start.length > 0 &&\n                    findNonEmptyIndex(last.start) === -1 &&\n                    (token.indent === 0 ||\n                        last.start.every(st => st.type !== 'comment' || st.indent < token.indent))) {\n                    if (top.type === 'document')\n                        top.end = last.start;\n                    else\n                        top.items.push({ start: last.start });\n                    token.items.splice(-1, 1);\n                }\n            }\n        }\n    }\n    *stream() {\n        switch (this.type) {\n            case 'directive-line':\n                yield { type: 'directive', offset: this.offset, source: this.source };\n                return;\n            case 'byte-order-mark':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                yield this.sourceToken;\n                return;\n            case 'doc-mode':\n            case 'doc-start': {\n                const doc = {\n                    type: 'document',\n                    offset: this.offset,\n                    start: []\n                };\n                if (this.type === 'doc-start')\n                    doc.start.push(this.sourceToken);\n                this.stack.push(doc);\n                return;\n            }\n        }\n        yield {\n            type: 'error',\n            offset: this.offset,\n            message: `Unexpected ${this.type} token in YAML stream`,\n            source: this.source\n        };\n    }\n    *document(doc) {\n        if (doc.value)\n            return yield* this.lineEnd(doc);\n        switch (this.type) {\n            case 'doc-start': {\n                if (findNonEmptyIndex(doc.start) !== -1) {\n                    yield* this.pop();\n                    yield* this.step();\n                }\n                else\n                    doc.start.push(this.sourceToken);\n                return;\n            }\n            case 'anchor':\n            case 'tag':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                doc.start.push(this.sourceToken);\n                return;\n        }\n        const bv = this.startBlockValue(doc);\n        if (bv)\n            this.stack.push(bv);\n        else {\n            yield {\n                type: 'error',\n                offset: this.offset,\n                message: `Unexpected ${this.type} token in YAML document`,\n                source: this.source\n            };\n        }\n    }\n    *scalar(scalar) {\n        if (this.type === 'map-value-ind') {\n            const prev = getPrevProps(this.peek(2));\n            const start = getFirstKeyStartProps(prev);\n            let sep;\n            if (scalar.end) {\n                sep = scalar.end;\n                sep.push(this.sourceToken);\n                delete scalar.end;\n            }\n            else\n                sep = [this.sourceToken];\n            const map = {\n                type: 'block-map',\n                offset: scalar.offset,\n                indent: scalar.indent,\n                items: [{ start, key: scalar, sep }]\n            };\n            this.onKeyLine = true;\n            this.stack[this.stack.length - 1] = map;\n        }\n        else\n            yield* this.lineEnd(scalar);\n    }\n    *blockScalar(scalar) {\n        switch (this.type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                scalar.props.push(this.sourceToken);\n                return;\n            case 'scalar':\n                scalar.source = this.source;\n                // block-scalar source includes trailing newline\n                this.atNewLine = true;\n                this.indent = 0;\n                if (this.onNewLine) {\n                    let nl = this.source.indexOf('\\n') + 1;\n                    while (nl !== 0) {\n                        this.onNewLine(this.offset + nl);\n                        nl = this.source.indexOf('\\n', nl) + 1;\n                    }\n                }\n                yield* this.pop();\n                break;\n            /* istanbul ignore next should not happen */\n            default:\n                yield* this.pop();\n                yield* this.step();\n        }\n    }\n    *blockMap(map) {\n        const it = map.items[map.items.length - 1];\n        // it.sep is true-ish if pair already has key or : separator\n        switch (this.type) {\n            case 'newline':\n                this.onKeyLine = false;\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value) {\n                    map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    if (this.atIndentedComment(it.start, map.indent)) {\n                        const prev = map.items[map.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            map.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n        }\n        if (this.indent >= map.indent) {\n            const atNextItem = !this.onKeyLine && this.indent === map.indent && it.sep;\n            // For empty nodes, assign newline-separated not indented empty tokens to following node\n            let start = [];\n            if (atNextItem && it.sep && !it.value) {\n                const nl = [];\n                for (let i = 0; i < it.sep.length; ++i) {\n                    const st = it.sep[i];\n                    switch (st.type) {\n                        case 'newline':\n                            nl.push(i);\n                            break;\n                        case 'space':\n                            break;\n                        case 'comment':\n                            if (st.indent > map.indent)\n                                nl.length = 0;\n                            break;\n                        default:\n                            nl.length = 0;\n                    }\n                }\n                if (nl.length >= 2)\n                    start = it.sep.splice(nl[1]);\n            }\n            switch (this.type) {\n                case 'anchor':\n                case 'tag':\n                    if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        it.sep.push(this.sourceToken);\n                    }\n                    else {\n                        it.start.push(this.sourceToken);\n                    }\n                    return;\n                case 'explicit-key-ind':\n                    if (!it.sep && !includesToken(it.start, 'explicit-key-ind')) {\n                        it.start.push(this.sourceToken);\n                    }\n                    else if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                    }\n                    else {\n                        this.stack.push({\n                            type: 'block-map',\n                            offset: this.offset,\n                            indent: this.indent,\n                            items: [{ start: [this.sourceToken] }]\n                        });\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'map-value-ind':\n                    if (includesToken(it.start, 'explicit-key-ind')) {\n                        if (!it.sep) {\n                            if (includesToken(it.start, 'newline')) {\n                                Object.assign(it, { key: null, sep: [this.sourceToken] });\n                            }\n                            else {\n                                const start = getFirstKeyStartProps(it.start);\n                                this.stack.push({\n                                    type: 'block-map',\n                                    offset: this.offset,\n                                    indent: this.indent,\n                                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                                });\n                            }\n                        }\n                        else if (it.value) {\n                            map.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else if (isFlowToken(it.key) &&\n                            !includesToken(it.sep, 'newline')) {\n                            const start = getFirstKeyStartProps(it.start);\n                            const key = it.key;\n                            const sep = it.sep;\n                            sep.push(this.sourceToken);\n                            // @ts-expect-error type guard is wrong here\n                            delete it.key, delete it.sep;\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key, sep }]\n                            });\n                        }\n                        else if (start.length > 0) {\n                            // Not actually at next item\n                            it.sep = it.sep.concat(start, this.sourceToken);\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    else {\n                        if (!it.sep) {\n                            Object.assign(it, { key: null, sep: [this.sourceToken] });\n                        }\n                        else if (it.value || atNextItem) {\n                            map.items.push({ start, key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start: [], key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (atNextItem || it.value) {\n                        map.items.push({ start, key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        this.stack.push(fs);\n                    }\n                    else {\n                        Object.assign(it, { key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    return;\n                }\n                default: {\n                    const bv = this.startBlockValue(map);\n                    if (bv) {\n                        if (atNextItem &&\n                            bv.type !== 'block-seq' &&\n                            includesToken(it.start, 'explicit-key-ind')) {\n                            map.items.push({ start });\n                        }\n                        this.stack.push(bv);\n                        return;\n                    }\n                }\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *blockSequence(seq) {\n        const it = seq.items[seq.items.length - 1];\n        switch (this.type) {\n            case 'newline':\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        seq.items.push({ start: [this.sourceToken] });\n                }\n                else\n                    it.start.push(this.sourceToken);\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value)\n                    seq.items.push({ start: [this.sourceToken] });\n                else {\n                    if (this.atIndentedComment(it.start, seq.indent)) {\n                        const prev = seq.items[seq.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            seq.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'anchor':\n            case 'tag':\n                if (it.value || this.indent <= seq.indent)\n                    break;\n                it.start.push(this.sourceToken);\n                return;\n            case 'seq-item-ind':\n                if (this.indent !== seq.indent)\n                    break;\n                if (it.value || includesToken(it.start, 'seq-item-ind'))\n                    seq.items.push({ start: [this.sourceToken] });\n                else\n                    it.start.push(this.sourceToken);\n                return;\n        }\n        if (this.indent > seq.indent) {\n            const bv = this.startBlockValue(seq);\n            if (bv) {\n                this.stack.push(bv);\n                return;\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *flowCollection(fc) {\n        const it = fc.items[fc.items.length - 1];\n        if (this.type === 'flow-error-end') {\n            let top;\n            do {\n                yield* this.pop();\n                top = this.peek(1);\n            } while (top && top.type === 'flow-collection');\n        }\n        else if (fc.end.length === 0) {\n            switch (this.type) {\n                case 'comma':\n                case 'explicit-key-ind':\n                    if (!it || it.sep)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'map-value-ind':\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        Object.assign(it, { key: null, sep: [this.sourceToken] });\n                    return;\n                case 'space':\n                case 'comment':\n                case 'newline':\n                case 'anchor':\n                case 'tag':\n                    if (!it || it.value)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: fs, sep: [] });\n                    else if (it.sep)\n                        this.stack.push(fs);\n                    else\n                        Object.assign(it, { key: fs, sep: [] });\n                    return;\n                }\n                case 'flow-map-end':\n                case 'flow-seq-end':\n                    fc.end.push(this.sourceToken);\n                    return;\n            }\n            const bv = this.startBlockValue(fc);\n            /* istanbul ignore else should not happen */\n            if (bv)\n                this.stack.push(bv);\n            else {\n                yield* this.pop();\n                yield* this.step();\n            }\n        }\n        else {\n            const parent = this.peek(2);\n            if (parent.type === 'block-map' &&\n                ((this.type === 'map-value-ind' && parent.indent === fc.indent) ||\n                    (this.type === 'newline' &&\n                        !parent.items[parent.items.length - 1].sep))) {\n                yield* this.pop();\n                yield* this.step();\n            }\n            else if (this.type === 'map-value-ind' &&\n                parent.type !== 'flow-collection') {\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                fixFlowSeqItems(fc);\n                const sep = fc.end.splice(1, fc.end.length);\n                sep.push(this.sourceToken);\n                const map = {\n                    type: 'block-map',\n                    offset: fc.offset,\n                    indent: fc.indent,\n                    items: [{ start, key: fc, sep }]\n                };\n                this.onKeyLine = true;\n                this.stack[this.stack.length - 1] = map;\n            }\n            else {\n                yield* this.lineEnd(fc);\n            }\n        }\n    }\n    flowScalar(type) {\n        if (this.onNewLine) {\n            let nl = this.source.indexOf('\\n') + 1;\n            while (nl !== 0) {\n                this.onNewLine(this.offset + nl);\n                nl = this.source.indexOf('\\n', nl) + 1;\n            }\n        }\n        return {\n            type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n    }\n    startBlockValue(parent) {\n        switch (this.type) {\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return this.flowScalar(this.type);\n            case 'block-scalar-header':\n                return {\n                    type: 'block-scalar',\n                    offset: this.offset,\n                    indent: this.indent,\n                    props: [this.sourceToken],\n                    source: ''\n                };\n            case 'flow-map-start':\n            case 'flow-seq-start':\n                return {\n                    type: 'flow-collection',\n                    offset: this.offset,\n                    indent: this.indent,\n                    start: this.sourceToken,\n                    items: [],\n                    end: []\n                };\n            case 'seq-item-ind':\n                return {\n                    type: 'block-seq',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start: [this.sourceToken] }]\n                };\n            case 'explicit-key-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                start.push(this.sourceToken);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start }]\n                };\n            }\n            case 'map-value-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                };\n            }\n        }\n        return null;\n    }\n    atIndentedComment(start, indent) {\n        if (this.type !== 'comment')\n            return false;\n        if (this.indent <= indent)\n            return false;\n        return start.every(st => st.type === 'newline' || st.type === 'space');\n    }\n    *documentEnd(docEnd) {\n        if (this.type !== 'doc-mode') {\n            if (docEnd.end)\n                docEnd.end.push(this.sourceToken);\n            else\n                docEnd.end = [this.sourceToken];\n            if (this.type === 'newline')\n                yield* this.pop();\n        }\n    }\n    *lineEnd(token) {\n        switch (this.type) {\n            case 'comma':\n            case 'doc-start':\n            case 'doc-end':\n            case 'flow-seq-end':\n            case 'flow-map-end':\n            case 'map-value-ind':\n                yield* this.pop();\n                yield* this.step();\n                break;\n            case 'newline':\n                this.onKeyLine = false;\n            // fallthrough\n            case 'space':\n            case 'comment':\n            default:\n                // all other values are errors\n                if (token.end)\n                    token.end.push(this.sourceToken);\n                else\n                    token.end = [this.sourceToken];\n                if (this.type === 'newline')\n                    yield* this.pop();\n        }\n    }\n}\n\nexport { Parser };\n","import { Composer } from './compose/composer.js';\nimport { Document } from './doc/Document.js';\nimport { prettifyError, YAMLParseError } from './errors.js';\nimport { warn } from './log.js';\nimport { LineCounter } from './parse/line-counter.js';\nimport { Parser } from './parse/parser.js';\n\nfunction parseOptions(options) {\n    const prettyErrors = options.prettyErrors !== false;\n    const lineCounter = options.lineCounter || (prettyErrors && new LineCounter()) || null;\n    return { lineCounter, prettyErrors };\n}\n/**\n * Parse the input as a stream of YAML documents.\n *\n * Documents should be separated from each other by `...` or `---` marker lines.\n *\n * @returns If an empty `docs` array is returned, it will be of type\n *   EmptyStream and contain additional stream information. In\n *   TypeScript, you should use `'empty' in docs` as a type guard for it.\n */\nfunction parseAllDocuments(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    const docs = Array.from(composer.compose(parser.parse(source)));\n    if (prettyErrors && lineCounter)\n        for (const doc of docs) {\n            doc.errors.forEach(prettifyError(source, lineCounter));\n            doc.warnings.forEach(prettifyError(source, lineCounter));\n        }\n    if (docs.length > 0)\n        return docs;\n    return Object.assign([], { empty: true }, composer.streamInfo());\n}\n/** Parse an input string into a single YAML.Document */\nfunction parseDocument(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    // `doc` is always set by compose.end(true) at the very latest\n    let doc = null;\n    for (const _doc of composer.compose(parser.parse(source), true, source.length)) {\n        if (!doc)\n            doc = _doc;\n        else if (doc.options.logLevel !== 'silent') {\n            doc.errors.push(new YAMLParseError(_doc.range.slice(0, 2), 'MULTIPLE_DOCS', 'Source contains multiple documents; please use YAML.parseAllDocuments()'));\n            break;\n        }\n    }\n    if (prettyErrors && lineCounter) {\n        doc.errors.forEach(prettifyError(source, lineCounter));\n        doc.warnings.forEach(prettifyError(source, lineCounter));\n    }\n    return doc;\n}\nfunction parse(src, reviver, options) {\n    let _reviver = undefined;\n    if (typeof reviver === 'function') {\n        _reviver = reviver;\n    }\n    else if (options === undefined && reviver && typeof reviver === 'object') {\n        options = reviver;\n    }\n    const doc = parseDocument(src, options);\n    if (!doc)\n        return null;\n    doc.warnings.forEach(warning => warn(doc.options.logLevel, warning));\n    if (doc.errors.length > 0) {\n        if (doc.options.logLevel !== 'silent')\n            throw doc.errors[0];\n        else\n            doc.errors = [];\n    }\n    return doc.toJS(Object.assign({ reviver: _reviver }, options));\n}\nfunction stringify(value, replacer, options) {\n    let _replacer = null;\n    if (typeof replacer === 'function' || Array.isArray(replacer)) {\n        _replacer = replacer;\n    }\n    else if (options === undefined && replacer) {\n        options = replacer;\n    }\n    if (typeof options === 'string')\n        options = options.length;\n    if (typeof options === 'number') {\n        const indent = Math.round(options);\n        options = indent < 1 ? undefined : indent > 8 ? { indent: 8 } : { indent };\n    }\n    if (value === undefined) {\n        const { keepUndefined } = options ?? replacer ?? {};\n        if (!keepUndefined)\n            return undefined;\n    }\n    return new Document(value, _replacer, options).toString(options);\n}\n\nexport { parse, parseAllDocuments, parseDocument, stringify };\n","// `export * as default from ...` fails on Webpack v4\n// https://github.com/eemeli/yaml/issues/228\nimport * as YAML from './dist/index.js'\nexport default YAML\nexport * from './dist/index.js'\n"],"names":["getButtonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","commonIconStyles","ownerState","_extends","size","fontSize","ButtonRoot","styled","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","props","styles","root","variant","capitalize","color","colorInherit","disableElevation","fullWidth","_theme$palette$getCon","_theme$palette","theme","typography","button","minWidth","padding","borderRadius","vars","shape","transition","transitions","create","duration","short","textDecoration","backgroundColor","palette","text","primaryChannel","action","hoverOpacity","alpha","primary","mainChannel","main","border","grey","A100","boxShadow","shadows","dark","buttonClasses","disabled","disabledBackground","getContrastText","call","contrastText","borderColor","pxToRem","width","ButtonStartIcon","startIcon","display","marginRight","marginLeft","ButtonEndIcon","endIcon","React","inProps","ref","contextProps","ButtonGroupContext","resolvedProps","resolveProps","useThemeProps","children","component","className","disableFocusRipple","endIconProp","focusVisibleClassName","startIconProp","type","other","_objectWithoutPropertiesLoose","classes","slots","label","composedClasses","composeClasses","useUtilityClasses","_jsx","_jsxs","clsx","focusRipple","focusVisible","useTheme","useThemeSystem","defaultTheme","ace","define","e","t","n","r","i","TextHighlightRules","s","this","$rules","start","token","regex","onMatch","replace","exec","length","parseInt","next","push","mlStringPre","shift","defaultToken","mlString","splice","normalizeRules","inherits","YamlHighlightRules","Range","checkOutdent","test","autoOutdent","getLine","match","o","findMatchingBracket","row","column","u","$getIndent","prototype","MatchingBraceOutdent","FoldMode","getFoldWidgetRange","indentationBlock","search","a","f","getLength","l","c","h","p","getFoldWidget","foldWidgets","Mode","WorkerClient","HighlightRules","$outdent","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","getNextLineIndent","createWorker","attachToDocument","getDocument","on","setAnnotations","data","clearAnnotations","$id","require","m","module","exports","isDark","cssClass","cssText","importCssString","ALIAS","Symbol","for","DOC","MAP","PAIR","SCALAR","SEQ","NODE_TYPE","isAlias","node","isDocument","isMap","isPair","isScalar","isSeq","isCollection","isNode","NodeBase","Object","defineProperty","value","copy","getPrototypeOf","getOwnPropertyDescriptors","range","slice","BREAK","SKIP","REMOVE","visit","visitor","visitor_","initVisitor","visit_","contents","freeze","key","path","ctrl","callVisitor","replaceNode","concat","items","ci","ck","cv","visitAsync","visitAsync_","Collection","Node","Value","assign","Alias","Map","Scalar","Seq","Pair","parent","pt","Error","escapeChars","Directives","yaml","tags","docStart","docEnd","defaultYaml","defaultTags","res","version","atNextDocument","explicit","line","onError","parts","trim","split","handle","prefix","isValid","source","verbatim","suffix","decodeURIComponent","tag","entries","startsWith","substring","ch","doc","tagNames","lines","tagEntries","_key","keys","some","tn","join","anchorIsValid","anchor","sa","JSON","stringify","msg","anchorNames","anchors","Set","add","findNewAnchor","exclude","has","set","found","undefined","_arg","ctx","maxAliasCount","resolve","ReferenceError","get","count","aliasCount","getAliasCount","_onComment","_onChompKeep","src","options","verifyAliasOrder","implicitKey","kc","vc","Math","max","toJS","arg","Array","isArray","map","v","String","toJSON","onCreate","keep","Number","isScalarValue","BLOCK_FOLDED","BLOCK_LITERAL","PLAIN","QUOTE_DOUBLE","QUOTE_SINGLE","createNode","tagName","schema","Boolean","BigInt","valueOf","aliasDuplicateObjects","onAnchor","onTagObj","sourceObjects","tagObj","filter","find","format","identify","findTagObject","iterator","collectionFromPath","k","isInteger","keepUndefined","isEmptyPath","done","configurable","enumerable","writable","it","clone","rest","addIn","delete","deleteIn","keepScalar","getIn","allowScalar","every","commentBefore","comment","hasIn","setIn","maxFlowStringSingleLineLength","stringifyComment","str","indentComment","indent","lineComment","endsWith","includes","FOLD_FLOW","FOLD_BLOCK","FOLD_QUOTED","foldFlowLines","mode","indentAtStart","lineWidth","minContentWidth","onFold","onOverflow","endStep","folds","escapedFolds","end","prev","overflow","escStart","escEnd","consumeMoreIndentedLines","j","fold","getFoldOptions","containsDocumentMarker","doubleQuotedString","json","doubleQuotedAsJSON","minMultiLineLength","doubleQuotedMinMultiLineLength","code","substr","singleQuotedString","singleQuote","quotedString","qs","hasDouble","hasSingle","blockString","onComment","onChompKeep","blockQuote","commentString","chomp","endStart","forceBlockIndent","literal","indentLength","limit","strLen","lineLengthOverLimit","endNlPos","indexOf","startEnd","startWithSpace","startNlPos","header","body","stringifyString","item","inFlow","ss","_stringify","_type","actualString","indentStep","default","compat","plainString","defaultKeyType","defaultStringType","createStringifyContext","opt","directives","falseStr","flowCollectionPadding","indentSeq","nullStr","simpleKeys","trueStr","toStringOptions","collectionStyle","repeat","toString","resolvedAliases","TypeError","obj","nodeClass","constructor","getTagObject","tagString","stringifyProps","warn","logLevel","warning","process","emitWarning","console","addPairToJSMap","merge","isMergeKey","mergeToJSMap","jsKey","stringKey","strCtx","inStringifyKey","strKey","mapKeyWarned","jsonStr","stringifyKey","jsValue","srcMap","hasOwnProperty","createPair","_","mapAsMap","allNullValues","keyComment","explicitKey","vsb","vcb","valueComment","keyCommentDone","chompKeep","spaceBefore","flow","valueCommentDone","valueStr","ws","cs","vs0","nl0","hasNewline","hasPropsLine","sp0","stringifyPair","stringifyCollection","collection","stringifyFlowCollection","stringifyBlockCollection","blockItemPrefix","flowChars","itemIndent","itemCtx","addCommentBefore","ik","fcPadding","reqNewline","linesAtValue","iv","len","reduce","sum","ic","trimStart","findPair","YAMLMap","pair","overwrite","_pair","sortEntries","sortMapEntries","findIndex","Type","hasAllNullValues","replacer","sort","YAMLSeq","idx","asItemIndex","seq","string","nullTag","boolTag","stringifyNumber","minFractionDigits","num","isFinite","isNaN","d","floatNaN","toLowerCase","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","floatExp","parseFloat","toExponential","float","dot","intIdentify","intResolve","offset","radix","intAsBigInt","intStringify","intOct","_onError","int","intHex","stringifyJSON","binary","Uint8Array","Buffer","from","atob","buffer","charCodeAt","buf","btoa","fromCharCode","ceil","_superPropBase","object","property","_get","Reflect","bind","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","apply","resolvePairs","cn","createPairs","iterable","pairs","YAMLOMap","omap","seenKeys","boolStringify","trueTag","falseTag","sign","intBin","YAMLSet","keepPair","parseSexagesimal","asBigInt","stringifySexagesimal","_60","unshift","intTime","floatTime","timestamp","Date","RegExp","year","month","day","hour","minute","second","millisec","date","UTC","tz","abs","toISOString","schemas","schema$1","schema$2","tagsByName","bool","null","coreKnownTags","getTags","customTags","schemaName","sortMapEntriesByKey","b","Schema","resolveKnownTags","toStringDefaults","knownTags","stringifyDocument","hasDirectives","dir","contentComment","dc","applyReviver","reviver","val","v0","v1","Document","errors","warnings","_replacer","keepSourceTokens","prettyErrors","strict","uniqueKeys","_directives","atDocument","setSchema","assertCollection","asStr","anchorPrefix","aliasObjects","prevAnchors","setAnchors","error","createNodeAnchors","sv","jsonArg","values","YAMLError","pos","message","YAMLParseError","YAMLWarning","prettifyError","lc","linePos","col","lineStr","lineStarts","min","pointer","tokens","indicator","startOnNewline","atNewline","hasSpace","commentSep","hasNewlineAfterProp","reqSpace","comma","cb","last","containsNewline","sep","flowIndentCheck","fc","mapIncludes","isEqual","startColMsg","resolveEnd","blockMsg","isBlock","composeCollection","CN","tagToken","coll","bm","composeNode","composeEmptyNode","atRoot","commentEnd","collItem","keyProps","keyStart","keyNode","valueProps","valueNode","srcToken","resolveBlockMap","bs","resolveBlockSeq","fcName","prevItemComment","loop","st","expectedEnd","ce","ee","cePos","toUpperCase","resolveFlowCollection","Coll","expType","kt","resolveBlockScalar","scalar","ts","parseBlockScalarHeader","first","splitLines","chompStart","content","trimIndent","contentStart","prevMoreIndented","crlf","resolveFlowScalar","rel","badChar","foldLines","plainValue","singleQuotedValue","foldNewline","cc","escapeCodes","x","U","parseCharCode","raw","wsStart","doubleQuotedValue","valueEnd","re","lastIndex","N","L","P","fromCodePoint","composeScalar","matchWithTest","findScalarTagByName","findScalarTagByTest","emptyScalarPosition","before","isSrcToken","alias","composeAlias","composeDoc","opts","contentEnd","getErrorPos","parsePrelude","prelude","atComment","afterEmptyLine","Composer","atDirectives","afterDoc","forceDoc","endOffset","decorate","resolveAsScalar","createScalarToken","context","he","head","addEndtoBlockProps","setScalarValue","afterKey","setBlockScalarValue","setFlowScalarValue","oa","nl","cst","stringifyToken","stringifyItem","_visit","field","itemAtPath","index","tok","parentCollection","BOM","DOCUMENT","FLOW_END","prettyToken","tokenType","isEmpty","hexDigits","tagChars","invalidFlowScalarChars","invalidAnchorChars","isNotAnchorChar","Lexer","atEnd","blockScalarIndent","blockScalarKeep","flowKey","flowLevel","indentNext","indentValue","lineEndPos","incomplete","hasChars","parseNext","dt","state","parseStream","parseLineStart","parseBlockStart","parseDocument","parseFlowCollection","parseQuotedScalar","parseBlockScalar","parsePlainScalar","setNext","pushCount","dirEnd","pushSpaces","pushNewline","atLineEnd","sp","charAt","peek","ch0","ch1","pushIndicators","pushUntil","quote","qb","continueScalar","pushToIndex","lastChar","allowEmpty","pushTag","allowTabs","LineCounter","addNewLine","low","high","mid","includesToken","list","findNonEmptyIndex","isFlowToken","getPrevProps","getFirstKeyStartProps","fixFlowSeqItems","Parser","onNewLine","atNewLine","atScalar","onKeyLine","stack","lexer","lex","lexeme","step","pop","top","stream","document","blockScalar","blockMap","blockSequence","flowCollection","documentEnd","sourceToken","lineEnd","bv","startBlockValue","atIndentedComment","atNextItem","fs","flowScalar","parseOptions","lineCounter","parseAllDocuments","parser","composer","docs","compose","parse","forEach","empty","streamInfo","_doc","_reviver","round"],"sourceRoot":""}