{"version":3,"file":"static/js/6514.138058db.chunk.js","mappings":"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","sources":["components/ColorPickerAdornment.tsx","components/placeholder/util.ts","components/placeholder/DummyImage.tsx","components/placeholder/HrefLuImage.tsx","components/placeholder/PlaceholderImage.tsx","pages/PlaceholderImg.tsx"],"sourcesContent":["import PaletteIcon from '@mui/icons-material/Palette';\nimport { Box, IconButton, InputAdornment, Popover } from '@mui/material';\nimport { bindPopover, bindTrigger, usePopupState } from 'material-ui-popup-state/hooks';\nimport { FC } from 'react';\nimport { CompactPicker } from 'react-color';\n\ninterface Props {\n  value: string;\n  onChange: (val: string) => void;\n}\n\nconst ColorPickerAdornment: FC<Props> = ({ value, onChange }) => {\n  const popupState = usePopupState({\n    variant: 'popover',\n    popupId: 'demoPopover',\n  });\n  return (\n    <>\n      <InputAdornment position=\"end\">\n        <IconButton {...bindTrigger(popupState)}>\n          <PaletteIcon sx={{ color: value }} />\n        </IconButton>\n      </InputAdornment>\n      <Popover {...bindPopover(popupState)} anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}>\n        <Box>\n          <CompactPicker\n            color={value}\n            onChangeComplete={(color) => {\n              onChange(color.hex);\n            }}\n          />\n        </Box>\n      </Popover>\n    </>\n  );\n};\n\nexport default ColorPickerAdornment;\n","import { PlaceholderConfig } from './index';\n\nconst defaultConfig = (): PlaceholderConfig => {\n  return {\n    width: 150,\n    height: 150,\n    suffix: '.png',\n    bgColor: '#cccccc',\n    textColor: '#969696',\n    text: '',\n  };\n};\n\nconst resolveConfig = (input: PlaceholderConfig): PlaceholderConfig => {\n  const config: PlaceholderConfig = defaultConfig();\n  if (input.width && input.width > 0) {\n    config.width = input.width;\n  }\n  if (input.height && input.height > 0) {\n    config.height = input.height;\n  }\n  if (input.suffix) {\n    config.suffix = input.suffix;\n  }\n  if (input.bgColor) {\n    config.bgColor = input.bgColor;\n  }\n  if (input.textColor) {\n    config.textColor = input.textColor;\n  }\n  if (input.text && input.text !== '') {\n    config.text = input.text;\n  }\n  return config;\n};\n\nexport { defaultConfig, resolveConfig };\n","import Image from 'mui-image';\nimport { useEffect, useState } from 'react';\nimport { PlaceholderConfig } from './index';\nimport { defaultConfig, resolveConfig } from './util';\n\nconst DummyImage = (input: PlaceholderConfig) => {\n  const [imgUrl, setImgUrl] = useState<string>('');\n  const [config, setConfig] = useState<PlaceholderConfig>(defaultConfig());\n\n  useEffect(() => {\n    setConfig(resolveConfig(input));\n  }, [input]);\n\n  useEffect(() => {\n    const url =\n      `https://dummyimage.com/${config.width}x${config.height}` +\n      `/${config.bgColor?.substring(1)}/${config.textColor?.substring(1)}` +\n      `?text=${encodeURIComponent(config.text || 'img')}`;\n    setImgUrl(url);\n  }, [config]);\n\n  return (\n    <Image\n      src={imgUrl}\n      style={{ width: `${config.width}px`, height: `${config.height}px` }}\n      alt={config.text || 'placeholder img'}\n    />\n  );\n};\n\nexport default DummyImage;\n","import Image from 'mui-image';\nimport { useEffect, useState } from 'react';\nimport { PlaceholderConfig } from './index';\nimport { defaultConfig, resolveConfig } from './util';\n\nconst HrefLuImage = (input: PlaceholderConfig) => {\n  const [imgUrl, setImgUrl] = useState<string>('');\n  const [config, setConfig] = useState<PlaceholderConfig>(defaultConfig());\n\n  useEffect(() => {\n    setConfig(resolveConfig(input));\n  }, [input]);\n\n  useEffect(() => {\n    const url =\n      `https://iph.href.lu/${config.width}x${config.height}` +\n      `?bg=${config.bgColor?.substring(1)}` +\n      `&fg=${config.textColor?.substring(1)}` +\n      `&text=${encodeURIComponent(config.text || 'img')}`;\n    setImgUrl(url);\n  }, [config]);\n\n  return (\n    <Image\n      src={imgUrl}\n      style={{ width: `${config.width}px`, height: `${config.height}px` }}\n      alt={config.text || 'placeholder img'}\n    />\n  );\n};\n\nexport default HrefLuImage;\n","import Image from 'mui-image';\nimport { useEffect, useState } from 'react';\nimport { PlaceholderConfig } from './index';\nimport { defaultConfig, resolveConfig } from './util';\n\nconst PlaceholderImage = (input: PlaceholderConfig) => {\n  const [imgUrl, setImgUrl] = useState<string>('');\n  const [config, setConfig] = useState<PlaceholderConfig>(defaultConfig());\n\n  useEffect(() => {\n    setConfig(resolveConfig(input));\n  }, [input]);\n\n  useEffect(() => {\n    const url =\n      `https://via.placeholder.com/${config.width}x${config.height}` +\n      `/${config.bgColor?.substring(1)}/${config.textColor?.substring(1)}` +\n      `?text=${encodeURIComponent(config.text || 'img')}` +\n      config.suffix;\n    setImgUrl(url);\n  }, [config]);\n\n  return (\n    <Image\n      src={imgUrl}\n      style={{ width: `${config.width}px`, height: `${config.height}px` }}\n      alt={config.text || 'placeholder img'}\n    />\n  );\n};\n\nexport default PlaceholderImage;\n","import { Box, Container, FormControl, Grid, InputLabel, MenuItem, Select, Tab, Tabs, TextField } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport React, { FC, useState } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\n\nimport ColorPickerAdornment from '../components/ColorPickerAdornment';\nimport { PlaceholderConfig } from '../components/placeholder';\nimport DummyImage from '../components/placeholder/DummyImage';\nimport HrefLuImage from '../components/placeholder/HrefLuImage';\nimport PlaceholderImage from '../components/placeholder/PlaceholderImage';\n\nconst ColorTextField = styled(TextField)({\n  '& .MuiOutlinedInput-root .MuiOutlinedInput-input': {\n    textTransform: 'uppercase',\n  },\n});\n\nconst defaultValues = {\n  width: 320,\n  height: 320,\n  suffix: '.png',\n  bgColor: '#cccccc',\n  textColor: '#969696',\n  text: 'img',\n};\n\nconst suffixOptions = [\n  { label: '.png', value: '.png' },\n  { label: '.jpg', value: '.jpg' },\n  { label: '.gif', value: '.gif' },\n];\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\n    </div>\n  );\n}\n\nfunction a11yProps(index: number) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst PlaceholderImg: FC = () => {\n  const [provider, setProvider] = useState<number>(0);\n  const [placeholderConfig, setPlaceholderConfig] = useState<PlaceholderConfig>(defaultValues);\n  const { register, handleSubmit, control, getValues, setValue } = useForm({ defaultValues });\n\n  return (\n    <Container sx={{ mt: 2 }}>\n      <form onChange={handleSubmit(setPlaceholderConfig)}>\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <TextField type=\"number\" label=\"宽度\" fullWidth {...register('width')} />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField type=\"number\" label=\"高度\" fullWidth {...register('height')} />\n          </Grid>\n          <Grid item xs={4}>\n            <Controller\n              name=\"suffix\"\n              control={control}\n              render={({ field }) => {\n                return (\n                  <FormControl fullWidth>\n                    <InputLabel>后缀名</InputLabel>\n                    <Select\n                      {...field}\n                      label=\"后缀名\"\n                      onChange={(event) => {\n                        setPlaceholderConfig({ ...placeholderConfig, suffix: event.target.value });\n                      }}\n                    >\n                      {suffixOptions.map((item) => {\n                        return (\n                          <MenuItem key={item.label} value={item.value}>\n                            {item.label}\n                          </MenuItem>\n                        );\n                      })}\n                    </Select>\n                  </FormControl>\n                );\n              }}\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={2} sx={{ mt: 1 }}>\n          <Grid item xs={4}>\n            <ColorTextField\n              label=\"背景颜色\"\n              fullWidth\n              {...register('bgColor')}\n              InputProps={{\n                endAdornment: (\n                  <ColorPickerAdornment\n                    value={getValues('bgColor')}\n                    onChange={(color) => {\n                      setValue('bgColor', color);\n                      setPlaceholderConfig({ ...placeholderConfig, bgColor: color });\n                    }}\n                  />\n                ),\n              }}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <ColorTextField\n              label=\"文本颜色\"\n              fullWidth\n              {...register('textColor')}\n              InputProps={{\n                endAdornment: (\n                  <ColorPickerAdornment\n                    value={getValues('textColor')}\n                    onChange={(color) => {\n                      setValue('textColor', color);\n                      setPlaceholderConfig({ ...placeholderConfig, textColor: color });\n                    }}\n                  />\n                ),\n              }}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField label=\"文本\" fullWidth {...register('text')} />\n          </Grid>\n        </Grid>\n      </form>\n      <Box>\n        <Tabs value={provider} onChange={(e, value) => setProvider(value)} aria-label=\"basic tabs example\">\n          <Tab label=\"iph.href.lu\" {...a11yProps(0)} />\n          <Tab label=\"via.placeholder.com\" {...a11yProps(1)} />\n          <Tab label=\"dummyimage.com\" {...a11yProps(2)} />\n        </Tabs>\n        <TabPanel value={provider} index={0}>\n          <HrefLuImage {...placeholderConfig} />\n        </TabPanel>\n        <TabPanel value={provider} index={1}>\n          <PlaceholderImage {...placeholderConfig} />\n        </TabPanel>\n        <TabPanel value={provider} index={2}>\n          <DummyImage {...placeholderConfig} />\n        </TabPanel>\n      </Box>\n    </Container>\n  );\n};\n\nexport default PlaceholderImg;\n"],"names":["_ref","value","onChange","popupState","usePopupState","variant","popupId","_jsxs","_Fragment","children","_jsx","InputAdornment","position","IconButton","_objectSpread","bindTrigger","PaletteIcon","sx","color","Popover","bindPopover","anchorOrigin","vertical","horizontal","Box","CompactPicker","onChangeComplete","hex","resolveConfig","input","config","width","height","suffix","bgColor","textColor","text","_useState","useState","_useState2","_slicedToArray","imgUrl","setImgUrl","_useState3","_useState4","setConfig","useEffect","_config$bgColor","_config$textColor","url","concat","substring","encodeURIComponent","Image","src","style","alt","ColorTextField","styled","TextField","textTransform","defaultValues","suffixOptions","label","TabPanel","props","index","other","_objectWithoutProperties","_excluded","role","hidden","id","p","a11yProps","provider","setProvider","placeholderConfig","setPlaceholderConfig","_useForm","useForm","register","handleSubmit","control","getValues","setValue","Container","mt","Grid","container","spacing","item","xs","type","fullWidth","Controller","name","render","field","FormControl","InputLabel","Select","event","target","map","MenuItem","InputProps","endAdornment","ColorPickerAdornment","Tabs","e","Tab","HrefLuImage","PlaceholderImage","DummyImage"],"sourceRoot":""}