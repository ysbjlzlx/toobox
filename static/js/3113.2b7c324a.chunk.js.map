{"version":3,"file":"static/js/3113.2b7c324a.chunk.js","mappings":"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","sources":["../node_modules/zustand/esm/vanilla.mjs","../node_modules/zustand/esm/index.mjs","../node_modules/zustand/esm/middleware.mjs","stores/JsonTabStore.ts","pages/json/Json.tsx","components/VanillaJSONEditor.tsx","pages/json/JsonEditor.tsx","../node_modules/rc-util/es/omit.js","../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js","../node_modules/use-sync-external-store/shim/with-selector.js"],"sourcesContent":["const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\") ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => {\n    if ((import.meta.env && import.meta.env.MODE) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\"\n      );\n    }\n    listeners.clear();\n  };\n  const api = { setState, getState, subscribe, destroy };\n  state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\nvar vanilla = (createState) => {\n  if ((import.meta.env && import.meta.env.MODE) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\"\n    );\n  }\n  return createStore(createState);\n};\n\nexport { createStore, vanilla as default };\n","import { createStore } from 'zustand/vanilla';\nexport * from 'zustand/vanilla';\nimport { useDebugValue } from 'react';\nimport useSyncExternalStoreExports from 'use-sync-external-store/shim/with-selector.js';\n\nconst { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports;\nfunction useStore(api, selector = api.getState, equalityFn) {\n  const slice = useSyncExternalStoreWithSelector(\n    api.subscribe,\n    api.getState,\n    api.getServerState || api.getState,\n    selector,\n    equalityFn\n  );\n  useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  if ((import.meta.env && import.meta.env.MODE) !== \"production\" && typeof createState !== \"function\") {\n    console.warn(\n      \"[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.\"\n    );\n  }\n  const api = typeof createState === \"function\" ? createStore(createState) : createState;\n  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\nvar react = (createState) => {\n  if ((import.meta.env && import.meta.env.MODE) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`.\"\n    );\n  }\n  return create(createState);\n};\n\nexport { create, react as default, useStore };\n","const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api)\n    return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env && import.meta.env.MODE) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (e) {\n  }\n  if (!extensionConnector) {\n    if ((import.meta.env && import.meta.env.MODE) !== \"production\" && enabled) {\n      console.warn(\n        \"[zustand devtools middleware] Please install/enable Redux devtools extension\"\n      );\n    }\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording)\n      return r;\n    const action = nameOrAction === void 0 ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if ((import.meta.env && import.meta.env.MODE) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools)\n              return;\n            if (typeof api.dispatch !== \"function\")\n              return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState)\n              return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0)\n    f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nfunction createJSONStorage(getStorage) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(name, JSON.stringify(newValue)),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst oldImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    getStorage: () => localStorage,\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage;\n  try {\n    storage = options.getStorage();\n  } catch (e) {\n  }\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const thenableSerialize = toThenable(options.serialize);\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    let errorInSync;\n    const thenable = thenableSerialize({ state, version: options.version }).then(\n      (serializedValue) => storage.setItem(options.name, serializedValue)\n    ).catch((e) => {\n      errorInSync = e;\n    });\n    if (errorInSync) {\n      throw errorInSync;\n    }\n    return thenable;\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue) => {\n      if (storageValue) {\n        return options.deserialize(storageValue);\n      }\n    }).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.getStorage) {\n        storage = newOptions.getStorage();\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\nconst newImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\nconst persistImpl = (config, baseOptions) => {\n  if (\"getStorage\" in baseOptions || \"serialize\" in baseOptions || \"deserialize\" in baseOptions) {\n    if ((import.meta.env && import.meta.env.MODE) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.\"\n      );\n    }\n    return oldImpl(config, baseOptions);\n  }\n  return newImpl(config, baseOptions);\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n","import _ from 'lodash';\nimport { create } from 'zustand';\nimport { createJSONStorage, persist } from 'zustand/middleware';\n\ninterface JsonTabStore {\n  jsonTabs: string[];\n  activeKey: string;\n  addJsonTab: (key: string) => void;\n  removeJsonTab: (key: string) => void;\n  setActiveKey: (key: string) => void;\n}\n\nconst useJsonTabStore = create<JsonTabStore>()(\n  persist(\n    (set, get) => ({\n      jsonTabs: ['0'],\n      activeKey: '0',\n\n      addJsonTab: (key: string) =>\n        set(() => {\n          return { jsonTabs: _.concat(get().jsonTabs, key) };\n        }),\n      removeJsonTab: (key: string) =>\n        set(() => {\n          return { jsonTabs: _.without(get().jsonTabs, key) };\n        }),\n      setActiveKey: (key: string) =>\n        set(() => {\n          return { activeKey: key };\n        }),\n    }),\n    { name: 'json-tab-store', storage: createJSONStorage(() => localStorage) },\n  ),\n);\n\nexport default useJsonTabStore;\n","import { Tabs } from 'antd';\nimport _ from 'lodash';\nimport { Tab } from 'rc-tabs/lib/interface';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\n\nimport useJsonTabStore from '../../stores/JsonTabStore';\nimport JsonEditor from './JsonEditor';\n\ntype TargetKey = React.MouseEvent | React.KeyboardEvent | string;\nconst Json = () => {\n  const { jsonTabs, activeKey, addJsonTab, removeJsonTab, setActiveKey } = useJsonTabStore();\n  const [items, setItems] = useState<Tab[]>([]);\n\n  useEffect(() => {\n    const item = jsonTabs.map((idx, i) => {\n      return {\n        key: idx,\n        label: 'JSON Editor - ' + idx,\n        closable: true,\n        children: <JsonEditor idx={idx} />,\n        style: {\n          height: `calc(100vh - 56px)`,\n        },\n      };\n    });\n    if (_.indexOf(jsonTabs, activeKey) === -1) {\n      setActiveKey(item[0].key);\n    }\n\n    setItems(item);\n  }, [jsonTabs, activeKey, setActiveKey]);\n\n  const onChange = (activeKey: string) => {\n    setActiveKey(activeKey);\n  };\n  const onEdit = (targetKey: React.MouseEvent | React.KeyboardEvent | string, action: 'add' | 'remove') => {\n    if (action === 'add') {\n      add();\n    } else {\n      remove(targetKey);\n    }\n  };\n\n  const add = () => {\n    let newActiveKey = '0';\n    if (jsonTabs && jsonTabs.length > 0) {\n      const keys = jsonTabs.map((i) => {\n        return Number(i);\n      });\n      const maxKey = Math.max(...keys);\n\n      newActiveKey = `${maxKey + 1}`;\n    }\n    addJsonTab(newActiveKey);\n  };\n\n  const remove = (targetKey: TargetKey) => {\n    removeJsonTab(String(targetKey));\n    localStorage.removeItem(`json-${targetKey}`);\n    if (jsonTabs && jsonTabs.length <= 1) {\n      addJsonTab('0');\n    }\n  };\n\n  return <Tabs type=\"editable-card\" onChange={onChange} activeKey={activeKey} onEdit={onEdit} items={items} />;\n};\n\nexport default Json;\n","import { Box } from '@mui/material';\nimport * as LosslessJSON from 'lossless-json';\nimport { useEffect, useRef } from 'react';\n\nimport { JSONEditor, JSONEditorPropsOptional } from 'vanilla-jsoneditor';\n\nconst VanillaJSONEditor = (props: JSONEditorPropsOptional) => {\n  const containerRef = useRef<HTMLDivElement>();\n  const editorRef = useRef<JSONEditor>();\n\n  useEffect(() => {\n    const options = {\n      target: containerRef.current,\n      props: {},\n    };\n    // @ts-ignore\n    editorRef.current = new JSONEditor(options);\n\n    return () => {\n      // destroy editor\n      if (editorRef.current) {\n        editorRef.current.destroy();\n        editorRef.current = undefined;\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (editorRef.current) {\n      // @ts-ignore\n      editorRef.current?.updateProps({ ...props, parser: LosslessJSON });\n    }\n  }, [props]);\n\n  return <Box ref={containerRef} height=\"100%\" />;\n};\n\nexport default VanillaJSONEditor;\n","import { useLocalStorageState } from 'ahooks';\nimport { FC } from 'react';\nimport { Content, Mode } from 'vanilla-jsoneditor';\n\nimport VanillaJSONEditor from '../../components/VanillaJSONEditor';\n\ninterface Props {\n  idx?: string;\n}\n\nconst JSONBeta: FC<Props> = (props) => {\n  const defaultValue = {\n    mode: 'text',\n    content: {\n      text: '',\n    },\n  };\n  const idx = props?.idx || '0';\n  const [jsonStorage, setJsonStorage] = useLocalStorageState<any>(`json-${idx}`, { defaultValue });\n\n  const resolveMode = (): Mode | undefined => {\n    if (jsonStorage === undefined || jsonStorage === null) {\n      return Mode.text;\n    }\n    return jsonStorage.mode as Mode;\n  };\n\n  const onChange = (content: Content) => {\n    setJsonStorage((oldValue: any) => {\n      return { ...oldValue, content: content };\n    });\n  };\n\n  const onChangMode = (mode: Mode) => {\n    setJsonStorage((oldValue: any) => {\n      return { ...oldValue, mode: mode };\n    });\n  };\n\n  return (\n    <VanillaJSONEditor\n      mode={resolveMode()}\n      content={jsonStorage.content}\n      onChange={onChange}\n      onChangeMode={onChangMode}\n    />\n  );\n};\n\nexport default JSONBeta;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nexport default function omit(obj, fields) {\n  var clone = _objectSpread({}, obj);\n  if (Array.isArray(fields)) {\n    fields.forEach(function (key) {\n      delete clone[key];\n    });\n  }\n  return clone;\n}","/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var h=require(\"react\"),n=require(\"use-sync-external-store/shim\");function p(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var q=\"function\"===typeof Object.is?Object.is:p,r=n.useSyncExternalStore,t=h.useRef,u=h.useEffect,v=h.useMemo,w=h.useDebugValue;\nexports.useSyncExternalStoreWithSelector=function(a,b,e,l,g){var c=t(null);if(null===c.current){var f={hasValue:!1,value:null};c.current=f}else f=c.current;c=v(function(){function a(a){if(!c){c=!0;d=a;a=l(a);if(void 0!==g&&f.hasValue){var b=f.value;if(g(b,a))return k=b}return k=a}b=k;if(q(d,a))return b;var e=l(a);if(void 0!==g&&g(b,e))return b;d=a;return k=e}var c=!1,d,k,m=void 0===e?null:e;return[function(){return a(b())},null===m?void 0:function(){return a(m())}]},[b,e,l,g]);var d=r(a,c[0],c[1]);\nu(function(){f.hasValue=!0;f.value=d},[d]);w(d);return d};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n"],"names":["createStoreImpl","createState","state","listeners","Set","setState","partial","replace","nextState","Object","is","previousState","assign","forEach","listener","getState","api","subscribe","add","delete","destroy","console","warn","clear","createStore","useSyncExternalStoreWithSelector","useSyncExternalStoreExports","createImpl","useBoundStore","selector","equalityFn","slice","getServerState","useDebugValue","useStore","create","createJSONStorage","getStorage","storage","e","getItem","name","_a","parse","str2","JSON","str","Promise","then","setItem","newValue","stringify","removeItem","toThenable","fn","input","result","onFulfilled","catch","_onRejected","this","_onFulfilled","onRejected","persist","config","baseOptions","set","get","options","localStorage","serialize","deserialize","partialize","version","merge","persistedState","currentState","hasHydrated","hydrationListeners","finishHydrationListeners","thenableSerialize","errorInSync","thenable","serializedValue","savedSetState","stateFromStorage","configResult","hydrate","cb","postRehydrationCallback","onRehydrateStorage","call","bind","storageValue","deserializedStorageValue","migrate","error","migratedState","_a2","setOptions","newOptions","clearStorage","getOptions","rehydrate","onHydrate","onFinishHydration","oldImpl","newImpl","jsonTabs","activeKey","addJsonTab","key","_","removeJsonTab","setActiveKey","useJsonTabStore","useState","items","setItems","useEffect","item","map","idx","i","label","closable","children","JsonEditor","style","height","newActiveKey","length","keys","Number","maxKey","Math","max","remove","targetKey","String","type","onChange","onEdit","action","props","containerRef","useRef","editorRef","target","current","JSONEditor","undefined","updateProps","parser","LosslessJSON","Box","ref","useLocalStorageState","defaultValue","mode","content","text","jsonStorage","setJsonStorage","Mode","oldValue","onChangeMode","omit","obj","fields","clone","_objectSpread","Array","isArray","h","require","n","q","a","b","r","useSyncExternalStore","t","u","v","useMemo","w","exports","l","g","c","f","hasValue","value","d","k","m","module"],"sourceRoot":""}