{"version":3,"file":"page-Cp_C7cQm.js","sources":["../../node_modules/@noble/hashes/_u64.js","../../node_modules/@noble/hashes/sha3.js","../../node_modules/@paralleldrive/cuid2/src/index.js","../../node_modules/@paralleldrive/cuid2/index.js","../../node_modules/@sapphire/snowflake/dist/esm/index.mjs","../../node_modules/ahooks/es/useCounter/index.js","../../node_modules/bson-objectid/objectid.js","../../node_modules/ulid/dist/index.esm.js","../../node_modules/uuid/dist/esm-browser/rng.js","../../node_modules/uuid/dist/esm-browser/stringify.js","../../node_modules/uuid/dist/esm-browser/native.js","../../node_modules/uuid/dist/esm-browser/v4.js","../../src/pages/generator/id/page.tsx"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.add = exports.toBig = exports.split = exports.fromBig = void 0;\nconst U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexports.fromBig = fromBig;\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexports.split = split;\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\nexports.add = add;\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig: exports.toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexports.default = u64;\n//# sourceMappingURL=_u64.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shake256 = exports.shake128 = exports.keccak_512 = exports.keccak_384 = exports.keccak_256 = exports.keccak_224 = exports.sha3_512 = exports.sha3_384 = exports.sha3_256 = exports.sha3_224 = exports.Keccak = exports.keccakP = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = _u64_js_1.default.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? _u64_js_1.default.rotlBH(h, l, s) : _u64_js_1.default.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? _u64_js_1.default.rotlBL(h, l, s) : _u64_js_1.default.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nfunction keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexports.keccakP = keccakP;\nclass Keccak extends utils_js_1.Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        _assert_js_1.default.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = (0, utils_js_1.u32)(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        _assert_js_1.default.exists(this);\n        const { blockLen, state } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        _assert_js_1.default.exists(this, false);\n        _assert_js_1.default.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        _assert_js_1.default.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        _assert_js_1.default.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nexports.Keccak = Keccak;\nconst gen = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));\nexports.sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexports.sha3_256 = gen(0x06, 136, 256 / 8);\nexports.sha3_384 = gen(0x06, 104, 384 / 8);\nexports.sha3_512 = gen(0x06, 72, 512 / 8);\nexports.keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexports.keccak_256 = gen(0x01, 136, 256 / 8);\nexports.keccak_384 = gen(0x01, 104, 384 / 8);\nexports.keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapXOFConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexports.shake128 = genShake(0x1f, 168, 128 / 8);\nexports.shake256 = genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","/* global global, window, module */\nconst { sha3_512: sha3 } = require(\"@noble/hashes/sha3\");\n\nconst defaultLength = 24;\nconst bigLength = 32;\n\nconst createEntropy = (length = 4, random = Math.random) => {\n  let entropy = \"\";\n\n  while (entropy.length < length) {\n    entropy = entropy + Math.floor(random() * 36).toString(36);\n  }\n  return entropy;\n};\n\n/*\n * Adapted from https://github.com/juanelas/bigint-conversion\n * MIT License Copyright (c) 2018 Juan Hernández Serrano\n */\nfunction bufToBigInt(buf) {\n  let bits = 8n;\n\n  let value = 0n;\n  for (const i of buf.values()) {\n    const bi = BigInt(i);\n    value = (value << bits) + bi;\n  }\n  return value;\n}\n\nconst hash = (input = \"\") => {\n  // Drop the first character because it will bias the histogram\n  // to the left.\n  return bufToBigInt(sha3(input)).toString(36).slice(1);\n};\n\nconst alphabet = Array.from({ length: 26 }, (x, i) =>\n  String.fromCharCode(i + 97)\n);\n\nconst randomLetter = (random) =>\n  alphabet[Math.floor(random() * alphabet.length)];\n\n/*\nThis is a fingerprint of the host environment. It is used to help\nprevent collisions when generating ids in a distributed system.\nIf no global object is available, you can pass in your own, or fall back\non a random string.\n*/\nconst createFingerprint = ({\n  globalObj = typeof global !== \"undefined\"\n    ? global\n    : typeof window !== \"undefined\"\n    ? window\n    : {},\n  random = Math.random,\n} = {}) => {\n  const globals = Object.keys(globalObj).toString();\n  const sourceString = globals.length\n    ? globals + createEntropy(bigLength, random)\n    : createEntropy(bigLength, random);\n\n  return hash(sourceString).substring(0, bigLength);\n};\n\nconst createCounter = (count) => () => {\n  return count++;\n};\n\n// ~22k hosts before 50% chance of initial counter collision\n// with a remaining counter range of 9.0e+15 in JavaScript.\nconst initialCountMax = 476782367;\n\nconst init = ({\n  // Fallback if the user does not pass in a CSPRNG. This should be OK\n  // because we don't rely solely on the random number generator for entropy.\n  // We also use the host fingerprint, current time, and a session counter.\n  random = Math.random,\n  counter = createCounter(Math.floor(random() * initialCountMax)),\n  length = defaultLength,\n  fingerprint = createFingerprint({ random }),\n} = {}) => {\n  return function cuid2() {\n    const firstLetter = randomLetter(random);\n\n    // If we're lucky, the `.toString(36)` calls may reduce hashing rounds\n    // by shortening the input to the hash function a little.\n    const time = Date.now().toString(36);\n    const count = counter().toString(36);\n\n    // The salt should be long enough to be globally unique across the full\n    // length of the hash. For simplicity, we use the same length as the\n    // intended id output.\n    const salt = createEntropy(length, random);\n    const hashInput = `${time + salt + count + fingerprint}`;\n\n    return `${firstLetter + hash(hashInput).substring(1, length)}`;\n  };\n};\n\nconst createId = init();\n\nconst isCuid = (id, { minLength = 2, maxLength = bigLength } = {}) => {\n  const length = id.length;\n  const regex = /^[0-9a-z]+$/;\n\n  try {\n    if (\n      typeof id === \"string\" &&\n      length >= minLength &&\n      length <= maxLength &&\n      regex.test(id)\n    )\n      return true;\n  } finally {\n  }\n\n  return false;\n};\n\nmodule.exports.getConstants = () => ({ defaultLength, bigLength });\nmodule.exports.init = init;\nmodule.exports.createId = createId;\nmodule.exports.bufToBigInt = bufToBigInt;\nmodule.exports.createCounter = createCounter;\nmodule.exports.createFingerprint = createFingerprint;\nmodule.exports.isCuid = isCuid;\n","const { createId, init, getConstants, isCuid } = require(\"./src/index\");\n\nmodule.exports.createId = createId;\nmodule.exports.init = init;\nmodule.exports.getConstants = getConstants;\nmodule.exports.isCuid = isCuid;\n","var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/lib/Snowflake.ts\nvar IncrementSymbol = Symbol(\"@sapphire/snowflake.increment\");\nvar EpochSymbol = Symbol(\"@sapphire/snowflake.epoch\");\nvar ProcessIdSymbol = Symbol(\"@sapphire/snowflake.processId\");\nvar WorkerIdSymbol = Symbol(\"@sapphire/snowflake.workerId\");\nvar MaximumWorkerId = 0b11111n;\nvar MaximumProcessId = 0b11111n;\nvar MaximumIncrement = 0b111111111111n;\nvar _a, _b, _c, _d;\nvar _Snowflake = class _Snowflake {\n  /**\n   * @param epoch the epoch to use\n   */\n  constructor(epoch) {\n    /**\n     * Alias for {@link deconstruct}\n     */\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    __publicField(this, \"decode\", this.deconstruct);\n    /**\n     * Internal reference of the epoch passed in the constructor\n     * @internal\n     */\n    __publicField(this, _a);\n    /**\n     * Internal incrementor for generating snowflakes\n     * @internal\n     */\n    __publicField(this, _b, 0n);\n    /**\n     * The process ID that will be used by default in the generate method\n     * @internal\n     */\n    __publicField(this, _c, 1n);\n    /**\n     * The worker ID that will be used by default in the generate method\n     * @internal\n     */\n    __publicField(this, _d, 0n);\n    this[EpochSymbol] = BigInt(epoch instanceof Date ? epoch.getTime() : epoch);\n  }\n  /**\n   * The epoch for this snowflake\n   */\n  get epoch() {\n    return this[EpochSymbol];\n  }\n  /**\n   * Gets the configured process ID\n   */\n  get processId() {\n    return this[ProcessIdSymbol];\n  }\n  /**\n   * Sets the process ID that will be used by default for the {@link generate} method\n   * @param value The new value, will be coerced to BigInt and masked with `0b11111n`\n   */\n  set processId(value) {\n    this[ProcessIdSymbol] = BigInt(value) & MaximumProcessId;\n  }\n  /**\n   * Gets the configured worker ID\n   */\n  get workerId() {\n    return this[WorkerIdSymbol];\n  }\n  /**\n   * Sets the worker ID that will be used by default for the {@link generate} method\n   * @param value The new value, will be coerced to BigInt and masked with `0b11111n`\n   */\n  set workerId(value) {\n    this[WorkerIdSymbol] = BigInt(value) & MaximumWorkerId;\n  }\n  /**\n   * Generates a snowflake given an epoch and optionally a timestamp\n   * @param options options to pass into the generator, see {@link SnowflakeGenerateOptions}\n   *\n   * **note** when `increment` is not provided it defaults to the private `increment` of the instance\n   * @example\n   * ```typescript\n   * const epoch = new Date('2000-01-01T00:00:00.000Z');\n   * const snowflake = new Snowflake(epoch).generate();\n   * ```\n   * @returns A unique snowflake\n   */\n  generate({\n    increment,\n    timestamp = Date.now(),\n    workerId = this[WorkerIdSymbol],\n    processId = this[ProcessIdSymbol]\n  } = {}) {\n    if (timestamp instanceof Date)\n      timestamp = BigInt(timestamp.getTime());\n    else if (typeof timestamp === \"number\")\n      timestamp = BigInt(timestamp);\n    else if (typeof timestamp !== \"bigint\") {\n      throw new TypeError(`\"timestamp\" argument must be a number, bigint, or Date (received ${typeof timestamp})`);\n    }\n    if (typeof increment !== \"bigint\") {\n      increment = this[IncrementSymbol];\n      this[IncrementSymbol] = increment + 1n & MaximumIncrement;\n    }\n    return timestamp - this[EpochSymbol] << 22n | (workerId & MaximumWorkerId) << 17n | (processId & MaximumProcessId) << 12n | increment & MaximumIncrement;\n  }\n  /**\n   * Deconstructs a snowflake given a snowflake ID\n   * @param id the snowflake to deconstruct\n   * @returns a deconstructed snowflake\n   * @example\n   * ```typescript\n   * const epoch = new Date('2000-01-01T00:00:00.000Z');\n   * const snowflake = new Snowflake(epoch).deconstruct('3971046231244935168');\n   * ```\n   */\n  deconstruct(id) {\n    const bigIntId = BigInt(id);\n    const epoch = this[EpochSymbol];\n    return {\n      id: bigIntId,\n      timestamp: (bigIntId >> 22n) + epoch,\n      workerId: bigIntId >> 17n & MaximumWorkerId,\n      processId: bigIntId >> 12n & MaximumProcessId,\n      increment: bigIntId & MaximumIncrement,\n      epoch\n    };\n  }\n  /**\n   * Retrieves the timestamp field's value from a snowflake.\n   * @param id The snowflake to get the timestamp value from.\n   * @returns The UNIX timestamp that is stored in `id`.\n   */\n  timestampFrom(id) {\n    return Number((BigInt(id) >> 22n) + this[EpochSymbol]);\n  }\n  /**\n   * Returns a number indicating whether a reference snowflake comes before, or after, or is same as the given\n   * snowflake in sort order.\n   * @param a The first snowflake to compare.\n   * @param b The second snowflake to compare.\n   * @returns `-1` if `a` is older than `b`, `0` if `a` and `b` are equals, `1` if `a` is newer than `b`.\n   * @example Sort snowflakes in ascending order\n   * ```typescript\n   * const ids = ['737141877803057244', '1056191128120082432', '254360814063058944'];\n   * console.log(ids.sort((a, b) => Snowflake.compare(a, b)));\n   * // → ['254360814063058944', '737141877803057244', '1056191128120082432'];\n   * ```\n   * @example Sort snowflakes in descending order\n   * ```typescript\n   * const ids = ['737141877803057244', '1056191128120082432', '254360814063058944'];\n   * console.log(ids.sort((a, b) => -Snowflake.compare(a, b)));\n   * // → ['1056191128120082432', '737141877803057244', '254360814063058944'];\n   * ```\n   */\n  static compare(a, b) {\n    const typeA = typeof a;\n    return typeA === typeof b ? typeA === \"string\" ? cmpString(a, b) : cmpBigInt(a, b) : cmpBigInt(BigInt(a), BigInt(b));\n  }\n};\n_a = EpochSymbol, _b = IncrementSymbol, _c = ProcessIdSymbol, _d = WorkerIdSymbol;\n__name(_Snowflake, \"Snowflake\");\nvar Snowflake = _Snowflake;\nfunction cmpBigInt(a, b) {\n  return a === b ? 0 : a < b ? -1 : 1;\n}\n__name(cmpBigInt, \"cmpBigInt\");\nfunction cmpString(a, b) {\n  return a === b ? 0 : a.length < b.length ? -1 : a.length > b.length ? 1 : a < b ? -1 : 1;\n}\n__name(cmpString, \"cmpString\");\n\n// src/lib/DiscordSnowflake.ts\nvar DiscordSnowflake = new Snowflake(1420070400000n);\n\n// src/lib/TwitterSnowflake.ts\nvar TwitterSnowflake = new Snowflake(1288834974657n);\n\nexport { DiscordSnowflake, MaximumIncrement, MaximumProcessId, MaximumWorkerId, Snowflake, TwitterSnowflake };\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=index.mjs.map","import { __read } from \"tslib\";\nimport { useState } from 'react';\nimport useMemoizedFn from '../useMemoizedFn';\nimport { isNumber } from '../utils';\nfunction getTargetValue(val, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var min = options.min,\n    max = options.max;\n  var target = val;\n  if (isNumber(max)) {\n    target = Math.min(max, target);\n  }\n  if (isNumber(min)) {\n    target = Math.max(min, target);\n  }\n  return target;\n}\nfunction useCounter(initialValue, options) {\n  if (initialValue === void 0) {\n    initialValue = 0;\n  }\n  if (options === void 0) {\n    options = {};\n  }\n  var min = options.min,\n    max = options.max;\n  var _a = __read(useState(function () {\n      return getTargetValue(initialValue, {\n        min: min,\n        max: max\n      });\n    }), 2),\n    current = _a[0],\n    setCurrent = _a[1];\n  var setValue = function (value) {\n    setCurrent(function (c) {\n      var target = isNumber(value) ? value : value(c);\n      return getTargetValue(target, {\n        max: max,\n        min: min\n      });\n    });\n  };\n  var inc = function (delta) {\n    if (delta === void 0) {\n      delta = 1;\n    }\n    setValue(function (c) {\n      return c + delta;\n    });\n  };\n  var dec = function (delta) {\n    if (delta === void 0) {\n      delta = 1;\n    }\n    setValue(function (c) {\n      return c - delta;\n    });\n  };\n  var set = function (value) {\n    setValue(value);\n  };\n  var reset = function () {\n    setValue(initialValue);\n  };\n  return [current, {\n    inc: useMemoizedFn(inc),\n    dec: useMemoizedFn(dec),\n    set: useMemoizedFn(set),\n    reset: useMemoizedFn(reset)\n  }];\n}\nexport default useCounter;","\nvar MACHINE_ID = Math.floor(Math.random() * 0xFFFFFF);\nvar index = ObjectID.index = parseInt(Math.random() * 0xFFFFFF, 10);\nvar pid = (typeof process === 'undefined' || typeof process.pid !== 'number' ? Math.floor(Math.random() * 100000) : process.pid) % 0xFFFF;\n// <https://github.com/williamkapke/bson-objectid/pull/51>\n// Attempt to fallback Buffer if _Buffer is undefined (e.g. for Node.js).\n// Worst case fallback to null and handle with null checking before using.\nvar BufferCtr = (() => { try { return _Buffer; }catch(_){ try{ return Buffer; }catch(_){ return null; } } })();\n\n/**\n * Determine if an object is Buffer\n *\n * Author:   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * License:  MIT\n *\n */\nvar isBuffer = function (obj) {\n  return !!(\n  obj != null &&\n  obj.constructor &&\n  typeof obj.constructor.isBuffer === 'function' &&\n  obj.constructor.isBuffer(obj)\n  )\n};\n\n// Precomputed hex table enables speedy hex string conversion\nvar hexTable = [];\nfor (var i = 0; i < 256; i++) {\n  hexTable[i] = (i <= 15 ? '0' : '') + i.toString(16);\n}\n\n// Regular expression that checks for hex value\nvar checkForHexRegExp = new RegExp('^[0-9a-fA-F]{24}$');\n\n// Lookup tables\nvar decodeLookup = [];\ni = 0;\nwhile (i < 10) decodeLookup[0x30 + i] = i++;\nwhile (i < 16) decodeLookup[0x41 - 10 + i] = decodeLookup[0x61 - 10 + i] = i++;\n\n/**\n * Create a new immutable ObjectID instance\n *\n * @class Represents the BSON ObjectID type\n * @param {String|Number} id Can be a 24 byte hex string, 12 byte binary string or a Number.\n * @return {Object} instance of ObjectID.\n */\nfunction ObjectID(id) {\n  if(!(this instanceof ObjectID)) return new ObjectID(id);\n  if(id && ((id instanceof ObjectID) || id._bsontype===\"ObjectID\"))\n    return id;\n\n  this._bsontype = 'ObjectID';\n\n  // The most common usecase (blank id, new objectId instance)\n  if (id == null || typeof id === 'number') {\n    // Generate a new id\n    this.id = this.generate(id);\n    // Return the object\n    return;\n  }\n\n  // Check if the passed in id is valid\n  var valid = ObjectID.isValid(id);\n\n  // Throw an error if it's not a valid setup\n  if (!valid && id != null) {\n    throw new Error(\n      'Argument passed in must be a single String of 12 bytes or a string of 24 hex characters'\n    );\n  } else if (valid && typeof id === 'string' && id.length === 24) {\n    return ObjectID.createFromHexString(id);\n  } else if (id != null && id.length === 12) {\n    // assume 12 byte string\n    this.id = id;\n  } else if (id != null && typeof id.toHexString === 'function') {\n    // Duck-typing to support ObjectId from different npm packages\n    return id;\n  } else {\n    throw new Error(\n      'Argument passed in must be a single String of 12 bytes or a string of 24 hex characters'\n    );\n  }\n}\nmodule.exports = ObjectID;\nObjectID.default = ObjectID;\n\n/**\n * Creates an ObjectID from a second based number, with the rest of the ObjectID zeroed out. Used for comparisons or sorting the ObjectID.\n *\n * @param {Number} time an integer number representing a number of seconds.\n * @return {ObjectID} return the created ObjectID\n * @api public\n */\nObjectID.createFromTime = function(time){\n  time = parseInt(time, 10) % 0xFFFFFFFF;\n  return new ObjectID(hex(8,time)+\"0000000000000000\");\n};\n\n/**\n * Creates an ObjectID from a hex string representation of an ObjectID.\n *\n * @param {String} hexString create a ObjectID from a passed in 24 byte hexstring.\n * @return {ObjectID} return the created ObjectID\n * @api public\n */\nObjectID.createFromHexString = function(hexString) {\n  // Throw an error if it's not a valid setup\n  if (typeof hexString === 'undefined' || (hexString != null && hexString.length !== 24)) {\n    throw new Error(\n      'Argument passed in must be a single String of 12 bytes or a string of 24 hex characters'\n    );\n  }\n\n  // Calculate lengths\n  var data = '';\n  var i = 0;\n\n  while (i < 24) {\n    data += String.fromCharCode((decodeLookup[hexString.charCodeAt(i++)] << 4) | decodeLookup[hexString.charCodeAt(i++)]);\n  }\n\n  return new ObjectID(data);\n};\n\n/**\n * Checks if a value is a valid bson ObjectId\n *\n * @param {String} objectid Can be a 24 byte hex string or an instance of ObjectID.\n * @return {Boolean} return true if the value is a valid bson ObjectID, return false otherwise.\n * @api public\n *\n * THE NATIVE DOCUMENTATION ISN'T CLEAR ON THIS GUY!\n * http://mongodb.github.io/node-mongodb-native/api-bson-generated/objectid.html#objectid-isvalid\n */\nObjectID.isValid = function(id) {\n  if (id == null) return false;\n\n  if (typeof id === 'number') {\n    return true;\n  }\n\n  if (typeof id === 'string') {\n    return id.length === 12 || (id.length === 24 && checkForHexRegExp.test(id));\n  }\n\n  if (id instanceof ObjectID) {\n    return true;\n  }\n\n  // <https://github.com/williamkapke/bson-objectid/issues/53>\n  if (isBuffer(id)) {\n    return ObjectID.isValid(id.toString('hex'));\n  }\n\n  // Duck-Typing detection of ObjectId like objects\n  // <https://github.com/williamkapke/bson-objectid/pull/51>\n  if (typeof id.toHexString === 'function') {\n    if(\n      BufferCtr &&\n      (id.id instanceof BufferCtr || typeof id.id === 'string')\n    ) {\n      return id.id.length === 12 || (id.id.length === 24 && checkForHexRegExp.test(id.id));\n    }\n  }\n\n  return false;\n};\n\nObjectID.prototype = {\n  constructor: ObjectID,\n\n  /**\n   * Return the ObjectID id as a 24 byte hex string representation\n   *\n   * @return {String} return the 24 byte hex string representation.\n   * @api public\n   */\n  toHexString: function() {\n    if (!this.id || !this.id.length) {\n      throw new Error(\n        'invalid ObjectId, ObjectId.id must be either a string or a Buffer, but is [' +\n          JSON.stringify(this.id) +\n          ']'\n      );\n    }\n\n    if (this.id.length === 24) {\n      return this.id;\n    }\n\n    if (isBuffer(this.id)) {\n      return this.id.toString('hex')\n    }\n\n    var hexString = '';\n    for (var i = 0; i < this.id.length; i++) {\n      hexString += hexTable[this.id.charCodeAt(i)];\n    }\n\n    return hexString;\n  },\n\n  /**\n   * Compares the equality of this ObjectID with `otherID`.\n   *\n   * @param {Object} otherId ObjectID instance to compare against.\n   * @return {Boolean} the result of comparing two ObjectID's\n   * @api public\n   */\n  equals: function (otherId){\n    if (otherId instanceof ObjectID) {\n      return this.toString() === otherId.toString();\n    } else if (\n      typeof otherId === 'string' &&\n      ObjectID.isValid(otherId) &&\n      otherId.length === 12 &&\n      isBuffer(this.id)\n    ) {\n      return otherId === this.id.toString('binary');\n    } else if (typeof otherId === 'string' && ObjectID.isValid(otherId) && otherId.length === 24) {\n      return otherId.toLowerCase() === this.toHexString();\n    } else if (typeof otherId === 'string' && ObjectID.isValid(otherId) && otherId.length === 12) {\n      return otherId === this.id;\n    } else if (otherId != null && (otherId instanceof ObjectID || otherId.toHexString)) {\n      return otherId.toHexString() === this.toHexString();\n    } else {\n      return false;\n    }\n  },\n\n  /**\n   * Returns the generation date (accurate up to the second) that this ID was generated.\n   *\n   * @return {Date} the generation date\n   * @api public\n   */\n  getTimestamp: function(){\n    var timestamp = new Date();\n    var time;\n    if (isBuffer(this.id)) {\n      time = this.id[3] | (this.id[2] << 8) | (this.id[1] << 16) | (this.id[0] << 24);\n    } else {\n      time = this.id.charCodeAt(3) | (this.id.charCodeAt(2) << 8) | (this.id.charCodeAt(1) << 16) | (this.id.charCodeAt(0) << 24);\n    }\n    timestamp.setTime(Math.floor(time) * 1000);\n    return timestamp;\n  },\n\n  /**\n  * Generate a 12 byte id buffer used in ObjectID's\n  *\n  * @method\n  * @param {number} [time] optional parameter allowing to pass in a second based timestamp.\n  * @return {string} return the 12 byte id buffer string.\n  */\n  generate: function (time) {\n    if ('number' !== typeof time) {\n      time = ~~(Date.now() / 1000);\n    }\n\n    //keep it in the ring!\n    time = parseInt(time, 10) % 0xFFFFFFFF;\n\n    var inc = next();\n\n    return String.fromCharCode(\n      ((time >> 24) & 0xFF),\n      ((time >> 16) & 0xFF),\n      ((time >> 8) & 0xFF),\n      (time & 0xFF),\n      ((MACHINE_ID >> 16) & 0xFF),\n      ((MACHINE_ID >> 8) & 0xFF),\n      (MACHINE_ID & 0xFF),\n      ((pid >> 8) & 0xFF),\n      (pid & 0xFF),\n      ((inc >> 16) & 0xFF),\n      ((inc >> 8) & 0xFF),\n      (inc & 0xFF)\n    )\n  },\n};\n\nfunction next() {\n  return index = (index+1) % 0xFFFFFF;\n}\n\nfunction hex(length, n) {\n  n = n.toString(16);\n  return (n.length===length)? n : \"00000000\".substring(n.length, length) + n;\n}\n\nfunction buffer(str) {\n  var i=0,out=[];\n\n  if(str.length===24)\n    for(;i<24; out.push(parseInt(str[i]+str[i+1], 16)),i+=2);\n\n  else if(str.length===12)\n    for(;i<12; out.push(str.charCodeAt(i)),i++);\n\n  return out;\n}\n\nvar inspect = (Symbol && Symbol.for && Symbol.for('nodejs.util.inspect.custom')) || 'inspect';\n\n/**\n * Converts to a string representation of this Id.\n *\n * @return {String} return the 24 byte hex string representation.\n * @api private\n */\nObjectID.prototype[inspect] = function() { return \"ObjectID(\"+this+\")\" };\nObjectID.prototype.toJSON = ObjectID.prototype.toHexString;\nObjectID.prototype.toString = ObjectID.prototype.toHexString;\n","function createError(message) {\n    var err = new Error(message);\n    err.source = \"ulid\";\n    return err;\n}\n// These values should NEVER change. If\n// they do, we're no longer making ulids!\nvar ENCODING = \"0123456789ABCDEFGHJKMNPQRSTVWXYZ\"; // Crockford's Base32\nvar ENCODING_LEN = ENCODING.length;\nvar TIME_MAX = Math.pow(2, 48) - 1;\nvar TIME_LEN = 10;\nvar RANDOM_LEN = 16;\nfunction replaceCharAt(str, index, char) {\n    if (index > str.length - 1) {\n        return str;\n    }\n    return str.substr(0, index) + char + str.substr(index + 1);\n}\nfunction incrementBase32(str) {\n    var done = undefined;\n    var index = str.length;\n    var char = void 0;\n    var charIndex = void 0;\n    var maxCharIndex = ENCODING_LEN - 1;\n    while (!done && index-- >= 0) {\n        char = str[index];\n        charIndex = ENCODING.indexOf(char);\n        if (charIndex === -1) {\n            throw createError(\"incorrectly encoded string\");\n        }\n        if (charIndex === maxCharIndex) {\n            str = replaceCharAt(str, index, ENCODING[0]);\n            continue;\n        }\n        done = replaceCharAt(str, index, ENCODING[charIndex + 1]);\n    }\n    if (typeof done === \"string\") {\n        return done;\n    }\n    throw createError(\"cannot increment this string\");\n}\nfunction randomChar(prng) {\n    var rand = Math.floor(prng() * ENCODING_LEN);\n    if (rand === ENCODING_LEN) {\n        rand = ENCODING_LEN - 1;\n    }\n    return ENCODING.charAt(rand);\n}\nfunction encodeTime(now, len) {\n    if (isNaN(now)) {\n        throw new Error(now + \" must be a number\");\n    }\n    if (now > TIME_MAX) {\n        throw createError(\"cannot encode time greater than \" + TIME_MAX);\n    }\n    if (now < 0) {\n        throw createError(\"time must be positive\");\n    }\n    if (Number.isInteger(now) === false) {\n        throw createError(\"time must be an integer\");\n    }\n    var mod = void 0;\n    var str = \"\";\n    for (; len > 0; len--) {\n        mod = now % ENCODING_LEN;\n        str = ENCODING.charAt(mod) + str;\n        now = (now - mod) / ENCODING_LEN;\n    }\n    return str;\n}\nfunction encodeRandom(len, prng) {\n    var str = \"\";\n    for (; len > 0; len--) {\n        str = randomChar(prng) + str;\n    }\n    return str;\n}\nfunction decodeTime(id) {\n    if (id.length !== TIME_LEN + RANDOM_LEN) {\n        throw createError(\"malformed ulid\");\n    }\n    var time = id.substr(0, TIME_LEN).split(\"\").reverse().reduce(function (carry, char, index) {\n        var encodingIndex = ENCODING.indexOf(char);\n        if (encodingIndex === -1) {\n            throw createError(\"invalid character found: \" + char);\n        }\n        return carry += encodingIndex * Math.pow(ENCODING_LEN, index);\n    }, 0);\n    if (time > TIME_MAX) {\n        throw createError(\"malformed ulid, timestamp too large\");\n    }\n    return time;\n}\nfunction detectPrng() {\n    var allowInsecure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var root = arguments[1];\n\n    if (!root) {\n        root = typeof window !== \"undefined\" ? window : null;\n    }\n    var browserCrypto = root && (root.crypto || root.msCrypto);\n    if (browserCrypto) {\n        return function () {\n            var buffer = new Uint8Array(1);\n            browserCrypto.getRandomValues(buffer);\n            return buffer[0] / 0xff;\n        };\n    } else {\n        try {\n            var nodeCrypto = require(\"crypto\");\n            return function () {\n                return nodeCrypto.randomBytes(1).readUInt8() / 0xff;\n            };\n        } catch (e) {}\n    }\n    if (allowInsecure) {\n        try {\n            console.error(\"secure crypto unusable, falling back to insecure Math.random()!\");\n        } catch (e) {}\n        return function () {\n            return Math.random();\n        };\n    }\n    throw createError(\"secure crypto unusable, insecure Math.random not allowed\");\n}\nfunction factory(currPrng) {\n    if (!currPrng) {\n        currPrng = detectPrng();\n    }\n    return function ulid(seedTime) {\n        if (isNaN(seedTime)) {\n            seedTime = Date.now();\n        }\n        return encodeTime(seedTime, TIME_LEN) + encodeRandom(RANDOM_LEN, currPrng);\n    };\n}\nfunction monotonicFactory(currPrng) {\n    if (!currPrng) {\n        currPrng = detectPrng();\n    }\n    var lastTime = 0;\n    var lastRandom = void 0;\n    return function ulid(seedTime) {\n        if (isNaN(seedTime)) {\n            seedTime = Date.now();\n        }\n        if (seedTime <= lastTime) {\n            var incrementedRandom = lastRandom = incrementBase32(lastRandom);\n            return encodeTime(lastTime, TIME_LEN) + incrementedRandom;\n        }\n        lastTime = seedTime;\n        var newRandom = lastRandom = encodeRandom(RANDOM_LEN, currPrng);\n        return encodeTime(seedTime, TIME_LEN) + newRandom;\n    };\n}\nvar ulid = factory();\n\nexport { replaceCharAt, incrementBase32, randomChar, encodeTime, encodeRandom, decodeTime, detectPrng, factory, monotonicFactory, ulid };\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { PageContainer } from '@ant-design/pro-components';\nimport { createId } from '@paralleldrive/cuid2';\nimport { TwitterSnowflake } from '@sapphire/snowflake';\nimport { useCounter } from 'ahooks';\nimport { Button, Card, Segmented } from 'antd';\nimport type { SegmentedLabeledOption } from 'antd/es/segmented';\nimport ObjectID from 'bson-objectid';\nimport { nanoid } from 'nanoid';\nimport type { SegmentedRawOption, SegmentedValue } from 'rc-segmented';\nimport type { FC } from 'react';\nimport { useEffect, useState } from 'react';\nimport { ulid } from 'ulid';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport TextResultBox from '../../../components/TextResultBox.tsx';\n\nexport const Component: FC = () => {\n  const [type, setType] = useState<SegmentedValue>('cuid');\n  const [result, setResult] = useState<string>('');\n  const [counter, { inc }] = useCounter(0);\n\n  const options: (SegmentedRawOption | SegmentedLabeledOption)[] = [\n    { label: 'Cuid2', value: 'cuid' },\n    { label: 'BSON ObjectID', value: 'objectid' },\n    { label: 'Nano ID', value: 'nanoid' },\n    { label: 'ULID', value: 'ulid' },\n    { label: 'UUID', value: 'uuid' },\n    { label: 'Snowflake ID', value: 'snowflakeid' },\n  ];\n\n  useEffect(() => {\n    if (type === 'cuid') {\n      setResult(createId);\n    } else if (type === 'objectid') {\n      setResult(ObjectID().toHexString());\n    } else if (type === 'nanoid') {\n      setResult(nanoid());\n    } else if (type === 'ulid') {\n      setResult(ulid());\n    } else if (type === 'uuid') {\n      setResult(uuidv4());\n    } else if (type === 'snowflakeid') {\n      setResult(TwitterSnowflake.generate().toString());\n    }\n  }, [type, counter]);\n  return (\n    <PageContainer title={false} className=\"mx-auto max-w-screen-lg pt-4\">\n      <Card>\n        <Segmented block={true} options={options} value={type} onChange={(value) => setType(value)} />\n        <div className=\"mt-4\">\n          <Button onClick={() => inc()}>刷新</Button>\n        </div>\n        <div className=\"mt-4\">\n          <TextResultBox title=\"结果\" text={result} />\n        </div>\n      </Card>\n    </PageContainer>\n  );\n};\n"],"names":["exports","U32_MASK64","_32n","fromBig","n","le","split","lst","Ah","Al","i","h","l","toBig","shrSH","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u64","sha3","_assert_js_1","require$$0","_u64_js_1","require$$1","utils_js_1","require$$2","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","_1n","_2n","_7n","_256n","_0x71n","round","R","x","y","t","j","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","s","rotlL","keccakP","rounds","B","idx1","idx0","B0","B1","Th","Tl","curH","curL","shift","PI","Keccak","blockLen","suffix","outputLen","enableXOF","data","state","len","pos","take","out","bufferOut","bytes","to","gen","genShake","opts","defaultLength","bigLength","createEntropy","length","random","entropy","bufToBigInt","buf","bits","value","bi","hash","input","alphabet","randomLetter","createFingerprint","globalObj","global","globals","sourceString","createCounter","count","initialCountMax","init","counter","fingerprint","firstLetter","time","salt","hashInput","createId","isCuid","id","minLength","maxLength","regex","src","getConstants","createId_1","__defProp","__defNormalProp","obj","key","__name","target","__publicField","IncrementSymbol","EpochSymbol","ProcessIdSymbol","WorkerIdSymbol","MaximumWorkerId","MaximumProcessId","MaximumIncrement","_a","_b","_c","_d","_Snowflake","epoch","increment","timestamp","workerId","processId","bigIntId","a","b","typeA","cmpString","cmpBigInt","Snowflake","TwitterSnowflake","getTargetValue","val","options","min","max","isNumber","useCounter","initialValue","__read","useState","current","setCurrent","setValue","c","inc","delta","dec","set","reset","useMemoizedFn","MACHINE_ID","index","ObjectID","pid","BufferCtr","isBuffer","hexTable","checkForHexRegExp","decodeLookup","valid","objectid","hex","hexString","otherId","next","inspect","createError","message","err","ENCODING","ENCODING_LEN","TIME_MAX","TIME_LEN","RANDOM_LEN","randomChar","prng","rand","encodeTime","now","mod","str","encodeRandom","detectPrng","allowInsecure","root","browserCrypto","buffer","nodeCrypto","factory","currPrng","seedTime","ulid","getRandomValues","rnds8","rng","byteToHex","unsafeStringify","arr","offset","randomUUID","native","v4","rnds","Component","type","setType","result","setResult","useEffect","nanoid","uuidv4","PageContainer","Card","jsx","Segmented","Button","TextResultBox"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11]}