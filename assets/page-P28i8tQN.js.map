{"version":3,"file":"page-P28i8tQN.js","sources":["../../src/pages/generator/image/ImageWrapper.tsx","../../src/components/placeholder/util.ts","../../src/components/placeholder/DummyImage.tsx","../../src/components/placeholder/HrefLuImage.tsx","../../src/components/placeholder/PlaceholderImage.tsx","../../src/pages/generator/image/page.tsx"],"sourcesContent":["import type { FC } from 'react';\nimport React from 'react';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst ImageWrapper: FC<Props> = ({ children }) => {\n  return <div className=\"flex w-full justify-center\">{children}</div>;\n};\nexport default ImageWrapper;\n","import { PlaceholderConfig } from './index';\n\nconst defaultConfig = (): PlaceholderConfig => {\n  return {\n    width: 150,\n    height: 150,\n    suffix: '.png',\n    bgColor: '#cccccc',\n    textColor: '#969696',\n    text: '',\n  };\n};\n\nconst resolveConfig = (input: PlaceholderConfig): PlaceholderConfig => {\n  const config: PlaceholderConfig = defaultConfig();\n  if (input.width && input.width > 0) {\n    config.width = input.width;\n  }\n  if (input.height && input.height > 0) {\n    config.height = input.height;\n  }\n  if (input.suffix) {\n    config.suffix = input.suffix;\n  }\n  if (input.bgColor) {\n    config.bgColor = input.bgColor;\n  }\n  if (input.textColor) {\n    config.textColor = input.textColor;\n  }\n  if (input.text && input.text !== '') {\n    config.text = input.text;\n  }\n  return config;\n};\n\nexport { defaultConfig, resolveConfig };\n","import { Image } from 'antd';\nimport { useEffect, useState } from 'react';\n\nimport ImageWrapper from '@/pages/generator/image/ImageWrapper.tsx';\nimport type { PlaceholderConfig } from './index';\nimport { defaultConfig, resolveConfig } from './util';\n\nconst DummyImage = (input: PlaceholderConfig) => {\n  const [imgUrl, setImgUrl] = useState<string>('');\n  const [config, setConfig] = useState<PlaceholderConfig>(defaultConfig());\n\n  useEffect(() => {\n    setConfig(resolveConfig(input));\n  }, [input]);\n\n  useEffect(() => {\n    const url =\n      `https://dummyimage.com/${config.width}x${config.height}` +\n      `/${config.bgColor?.substring(1)}/${config.textColor?.substring(1)}` +\n      `?text=${encodeURIComponent(config.text || 'img')}`;\n    setImgUrl(url);\n  }, [config]);\n\n  return (\n    <ImageWrapper>\n      <Image\n        src={imgUrl}\n        style={{ width: `${config.width}px`, height: `${config.height}px` }}\n        alt={config.text || 'placeholder img'}\n      />\n    </ImageWrapper>\n  );\n};\n\nexport default DummyImage;\n","import ImageWrapper from '@/pages/generator/image/ImageWrapper';\nimport { Image } from 'antd';\nimport { useEffect, useState } from 'react';\nimport type { PlaceholderConfig } from './index';\nimport { defaultConfig, resolveConfig } from './util';\n\nconst HrefLuImage = (input: PlaceholderConfig) => {\n  const [imgUrl, setImgUrl] = useState<string>('');\n  const [config, setConfig] = useState<PlaceholderConfig>(defaultConfig());\n\n  useEffect(() => {\n    setConfig(resolveConfig(input));\n  }, [input]);\n\n  useEffect(() => {\n    const url =\n      `https://iph.href.lu/${config.width}x${config.height}` +\n      `?bg=${config.bgColor?.substring(1)}` +\n      `&fg=${config.textColor?.substring(1)}` +\n      `&text=${encodeURIComponent(config.text || 'img')}`;\n    setImgUrl(url);\n  }, [config]);\n\n  return (\n    <ImageWrapper>\n      <Image\n        preview={false}\n        src={imgUrl}\n        width={config.width}\n        height={config.height}\n        style={{\n          width: `${config.width}px`,\n          height: `${config.height}px`,\n        }}\n        alt={config.text || 'placeholder img'}\n      />\n    </ImageWrapper>\n  );\n};\n\nexport default HrefLuImage;\n","import { Image } from 'antd';\nimport { useEffect, useState } from 'react';\n\nimport ImageWrapper from '@/pages/generator/image/ImageWrapper.tsx';\nimport type { PlaceholderConfig } from './index';\nimport { defaultConfig, resolveConfig } from './util';\n\nconst PlaceholderImage = (input: PlaceholderConfig) => {\n  const [imgUrl, setImgUrl] = useState<string>('');\n  const [config, setConfig] = useState<PlaceholderConfig>(defaultConfig());\n\n  useEffect(() => {\n    setConfig(resolveConfig(input));\n  }, [input]);\n\n  useEffect(() => {\n    const url =\n      `https://via.placeholder.com/${config.width}x${config.height}` +\n      `/${config.bgColor?.substring(1)}/${config.textColor?.substring(1)}` +\n      `?text=${encodeURIComponent(config.text || 'img')}` +\n      config.suffix;\n    setImgUrl(url);\n  }, [config]);\n\n  return (\n    <ImageWrapper>\n      <Image\n        src={imgUrl}\n        style={{ width: `${config.width}px`, height: `${config.height}px` }}\n        alt={config.text || 'placeholder img'}\n      />\n    </ImageWrapper>\n  );\n};\n\nexport default PlaceholderImage;\n","import {\n  FormControlRender,\n  PageContainer,\n  pickControlPropsWithId,\n  ProForm,\n  ProFormDigit,\n  ProFormSelect,\n  ProFormText,\n} from '@ant-design/pro-components';\nimport type { TabsProps } from 'antd';\nimport { Card, ColorPicker, Form, Tabs } from 'antd';\nimport type { FC } from 'react';\nimport { useEffect, useState } from 'react';\n\nimport type { PlaceholderConfig } from '@/components/placeholder';\nimport DummyImage from '@/components/placeholder/DummyImage.tsx';\nimport HrefLuImage from '@/components/placeholder/HrefLuImage.tsx';\nimport PlaceholderImage from '@/components/placeholder/PlaceholderImage.tsx';\n\nconst defaultValues = {\n  width: 320,\n  height: 320,\n  suffix: '.png',\n  bgColor: '#8c8c8c',\n  textColor: '#f0f0f0',\n  text: 'img',\n};\n\nconst suffixOptions = [\n  { label: '.png', value: '.png' },\n  { label: '.jpg', value: '.jpg' },\n  { label: '.gif', value: '.gif' },\n];\n\nexport const Component: FC = () => {\n  const [form] = Form.useForm();\n  const [placeholderConfig, setPlaceholderConfig] = useState<PlaceholderConfig>(defaultValues);\n\n  const bgColor = Form.useWatch('bgColor', { form, preserve: true });\n  const textColor = Form.useWatch('textColor', { form, preserve: true });\n\n  useEffect(() => {\n    const values = form.getFieldsValue();\n    setPlaceholderConfig(values);\n  }, [bgColor, form, textColor]);\n\n  const tabsProps: TabsProps = {\n    defaultActiveKey: 'HrefLuImage',\n    items: [\n      {\n        key: 'HrefLuImage',\n        label: 'iph.href.lu',\n        children: <HrefLuImage {...placeholderConfig} />,\n      },\n      {\n        key: 'PlaceholderImage',\n        label: 'via.placeholder.com',\n        children: <PlaceholderImage {...placeholderConfig} />,\n      },\n      {\n        key: 'DummyImage',\n        label: 'dummyimage.com',\n        children: <DummyImage {...placeholderConfig} />,\n      },\n    ],\n  };\n  return (\n    <PageContainer title={false} className=\"mx-auto max-w-screen-lg pt-4\">\n      <Card>\n        <ProForm\n          submitter={false}\n          form={form}\n          initialValues={defaultValues}\n          onValuesChange={(_, values) => {\n            setPlaceholderConfig(values);\n          }}\n        >\n          <div className=\"grid grid-cols-2 gap-2 sm:grid-cols-3\">\n            <ProFormDigit label=\"宽度\" name=\"width\" fieldProps={{ size: 'large' }} />\n            <ProFormDigit label=\"高度\" name=\"height\" fieldProps={{ size: 'large' }} />\n            <ProFormSelect\n              label=\"后缀名\"\n              name=\"suffix\"\n              options={suffixOptions}\n              allowClear={false}\n              fieldProps={{ size: 'large' }}\n            />\n            <ProForm.Item label=\"背景颜色\" name=\"bgColor\">\n              <FormControlRender>\n                {(itemProps) => {\n                  return (\n                    <ColorPicker\n                      size=\"large\"\n                      showText\n                      disabledAlpha\n                      className=\"w-full justify-start\"\n                      {...pickControlPropsWithId(itemProps)}\n                      onChange={(color) => {\n                        form.setFieldValue('bgColor', color.toHexString());\n                      }}\n                    />\n                  );\n                }}\n              </FormControlRender>\n            </ProForm.Item>\n            <ProForm.Item label=\"文本颜色\" name=\"textColor\">\n              <FormControlRender>\n                {(itemProps) => {\n                  return (\n                    <ColorPicker\n                      size=\"large\"\n                      showText\n                      disabledAlpha\n                      className=\"w-full justify-start\"\n                      {...pickControlPropsWithId(itemProps)}\n                      onChange={(color) => {\n                        form.setFieldValue('textColor', color.toHexString());\n                      }}\n                    />\n                  );\n                }}\n              </FormControlRender>\n            </ProForm.Item>\n            <ProFormText label=\"文本\" name=\"text\" allowClear={false} fieldProps={{ size: 'large' }} />\n          </div>\n        </ProForm>\n        <div>\n          <Tabs {...tabsProps} />\n        </div>\n      </Card>\n    </PageContainer>\n  );\n};\n"],"names":["ImageWrapper","children","jsx","defaultConfig","resolveConfig","input","config","DummyImage","imgUrl","setImgUrl","useState","setConfig","useEffect","url","_a","_b","Image","HrefLuImage","PlaceholderImage","defaultValues","suffixOptions","Component","form","Form","placeholderConfig","setPlaceholderConfig","bgColor","textColor","values","tabsProps","PageContainer","Card","ProForm","_","jsxs","ProFormDigit","ProFormSelect","FormControlRender","itemProps","ColorPicker","pickControlPropsWithId","color","ProFormText","Tabs"],"mappings":"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"}