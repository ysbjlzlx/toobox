{"version":3,"file":"page-da1e6127.js","sources":["../../src/pages/json/json-to-yaml/page.tsx"],"sourcesContent":["import { Box } from '@mui/system';\nimport { Button, Col, Row } from 'antd';\nimport JSON5 from 'json5';\nimport type { FC } from 'react';\nimport { useState } from 'react';\nimport AceEditor from 'react-ace';\nimport type { AceOptions } from 'react-ace/types';\nimport YAML from 'yaml';\n\nimport 'ace-builds/src-noconflict/ext-searchbox';\nimport 'ace-builds/src-noconflict/mode-json5';\nimport 'ace-builds/src-noconflict/mode-yaml';\nimport 'ace-builds/src-noconflict/theme-textmate';\n\nimport type { parser } from '@/utils/formatter.ts';\nimport { format } from '@/utils/formatter.ts';\nimport { PageContainer } from '@ant-design/pro-components';\n\nconst Page: FC = () => {\n  const [json, setJson] = useState<string>('');\n  const [yaml, setYaml] = useState<string>('');\n  const [jsonOptions] = useState<AceOptions>({\n    useWorker: false,\n    showLineNumbers: true,\n    tabSize: 2,\n    wrap: true,\n    fontSize: 14,\n  });\n  const [yamlOptions] = useState<AceOptions>({\n    useWorker: false,\n    showLineNumbers: true,\n    tabSize: 2,\n    wrap: true,\n    fontSize: 14,\n  });\n\n  const json2yaml = async (value: string): Promise<string> => {\n    if (!value || value === '') {\n      return value;\n    }\n    return format(YAML.stringify(JSON5.parse(value)), 'yaml' as parser);\n  };\n\n  const json2yamlBtnClick = () => {\n    json2yaml(json).then((result) => {\n      setYaml(result);\n    });\n  };\n\n  return (\n    <PageContainer title={false} token={{ paddingInlinePageContainerContent: 0 }}>\n      <Box sx={{ height: '100vh' }}>\n        <Box>\n          <Button type=\"text\" onClick={json2yamlBtnClick}>\n            JSON =&gt; YAML\n          </Button>\n        </Box>\n        <Row style={{ height: 'calc(100% - 37px)' }}>\n          <Col xs={24} md={12} style={{ height: '100%' }}>\n            <AceEditor\n              theme=\"textmate\"\n              placeholder=\"JSON\"\n              setOptions={jsonOptions}\n              value={json}\n              onChange={setJson}\n              mode=\"json5\"\n              width=\"100%\"\n              height=\"100%\"\n            />\n          </Col>\n          <Col xs={24} md={12} style={{ height: '100%' }}>\n            <AceEditor\n              theme=\"textmate\"\n              placeholder=\"YAML\"\n              setOptions={yamlOptions}\n              value={yaml}\n              onChange={setYaml}\n              mode=\"yaml\"\n              width=\"100%\"\n              height=\"100%\"\n            />\n          </Col>\n        </Row>\n      </Box>\n    </PageContainer>\n  );\n};\n\nexport default Page;\n"],"names":["Page","json","setJson","useState","yaml","setYaml","jsonOptions","yamlOptions","json2yaml","value","format","YAML","JSON5","json2yamlBtnClick","result","jsx","PageContainer","Box","Button","Row","Col","AceEditor"],"mappings":"geAkBA,MAAMA,EAAW,IAAM,CACrB,KAAM,CAACC,EAAMC,CAAO,EAAIC,WAAiB,EAAE,EACrC,CAACC,EAAMC,CAAO,EAAIF,WAAiB,EAAE,EACrC,CAACG,CAAW,EAAIH,WAAqB,CACzC,UAAW,GACX,gBAAiB,GACjB,QAAS,EACT,KAAM,GACN,SAAU,EAAA,CACX,EACK,CAACI,CAAW,EAAIJ,WAAqB,CACzC,UAAW,GACX,gBAAiB,GACjB,QAAS,EACT,KAAM,GACN,SAAU,EAAA,CACX,EAEKK,EAAY,MAAOC,GACnB,CAACA,GAASA,IAAU,GACfA,EAEFC,EAAOC,EAAK,UAAUC,EAAM,MAAMH,CAAK,CAAC,EAAG,MAAgB,EAG9DI,EAAoB,IAAM,CAC9BL,EAAUP,CAAI,EAAE,KAAMa,GAAW,CAC/BT,EAAQS,CAAM,CAAA,CACf,CAAA,EAGH,OACGC,EAAAA,IAAAC,EAAA,CAAc,MAAO,GAAO,MAAO,CAAE,kCAAmC,CAAE,EACzE,gBAACC,EAAI,CAAA,GAAI,CAAE,OAAQ,OACjB,EAAA,SAAA,CAACF,EAAAA,IAAAE,EAAA,CACC,eAACC,EAAO,CAAA,KAAK,OAAO,QAASL,EAAmB,wBAEhD,CACF,CAAA,SACCM,EAAI,CAAA,MAAO,CAAE,OAAQ,mBACpB,EAAA,SAAA,CAACJ,EAAAA,IAAAK,EAAA,CAAI,GAAI,GAAI,GAAI,GAAI,MAAO,CAAE,OAAQ,MACpC,EAAA,SAAAL,EAAA,IAACM,EAAA,CACC,MAAM,WACN,YAAY,OACZ,WAAYf,EACZ,MAAOL,EACP,SAAUC,EACV,KAAK,QACL,MAAM,OACN,OAAO,MAAA,CAAA,EAEX,EACAa,EAAAA,IAACK,EAAI,CAAA,GAAI,GAAI,GAAI,GAAI,MAAO,CAAE,OAAQ,MACpC,EAAA,SAAAL,EAAA,IAACM,EAAA,CACC,MAAM,WACN,YAAY,OACZ,WAAYd,EACZ,MAAOH,EACP,SAAUC,EACV,KAAK,OACL,MAAM,OACN,OAAO,MAAA,CAAA,EAEX,CAAA,EACF,CAAA,CACF,CAAA,CACF,CAAA,CAEJ"}