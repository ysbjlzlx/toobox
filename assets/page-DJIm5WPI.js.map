{"version":3,"file":"page-DJIm5WPI.js","sources":["../../node_modules/fast-xml-parser/src/util.js","../../node_modules/fast-xml-parser/src/validator.js","../../node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js","../../node_modules/fast-xml-parser/src/xmlparser/xmlNode.js","../../node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js","../../node_modules/strnum/strnum.js","../../node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js","../../node_modules/fast-xml-parser/src/xmlparser/node2json.js","../../node_modules/fast-xml-parser/src/xmlparser/XMLParser.js","../../node_modules/fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js","../../node_modules/fast-xml-parser/src/xmlbuilder/json2xml.js","../../node_modules/fast-xml-parser/src/fxp.js","../../node_modules/yaml/browser/dist/nodes/identity.js","../../node_modules/yaml/browser/dist/visit.js","../../node_modules/yaml/browser/dist/doc/directives.js","../../node_modules/yaml/browser/dist/doc/anchors.js","../../node_modules/yaml/browser/dist/doc/applyReviver.js","../../node_modules/yaml/browser/dist/nodes/toJS.js","../../node_modules/yaml/browser/dist/nodes/Node.js","../../node_modules/yaml/browser/dist/nodes/Alias.js","../../node_modules/yaml/browser/dist/nodes/Scalar.js","../../node_modules/yaml/browser/dist/doc/createNode.js","../../node_modules/yaml/browser/dist/nodes/Collection.js","../../node_modules/yaml/browser/dist/stringify/stringifyComment.js","../../node_modules/yaml/browser/dist/stringify/foldFlowLines.js","../../node_modules/yaml/browser/dist/stringify/stringifyString.js","../../node_modules/yaml/browser/dist/stringify/stringify.js","../../node_modules/yaml/browser/dist/stringify/stringifyPair.js","../../node_modules/yaml/browser/dist/log.js","../../node_modules/yaml/browser/dist/nodes/addPairToJSMap.js","../../node_modules/yaml/browser/dist/nodes/Pair.js","../../node_modules/yaml/browser/dist/stringify/stringifyCollection.js","../../node_modules/yaml/browser/dist/nodes/YAMLMap.js","../../node_modules/yaml/browser/dist/schema/common/map.js","../../node_modules/yaml/browser/dist/nodes/YAMLSeq.js","../../node_modules/yaml/browser/dist/schema/common/seq.js","../../node_modules/yaml/browser/dist/schema/common/string.js","../../node_modules/yaml/browser/dist/schema/common/null.js","../../node_modules/yaml/browser/dist/schema/core/bool.js","../../node_modules/yaml/browser/dist/stringify/stringifyNumber.js","../../node_modules/yaml/browser/dist/schema/core/float.js","../../node_modules/yaml/browser/dist/schema/core/int.js","../../node_modules/yaml/browser/dist/schema/core/schema.js","../../node_modules/yaml/browser/dist/schema/json/schema.js","../../node_modules/yaml/browser/dist/schema/yaml-1.1/binary.js","../../node_modules/yaml/browser/dist/schema/yaml-1.1/pairs.js","../../node_modules/yaml/browser/dist/schema/yaml-1.1/omap.js","../../node_modules/yaml/browser/dist/schema/yaml-1.1/bool.js","../../node_modules/yaml/browser/dist/schema/yaml-1.1/float.js","../../node_modules/yaml/browser/dist/schema/yaml-1.1/int.js","../../node_modules/yaml/browser/dist/schema/yaml-1.1/set.js","../../node_modules/yaml/browser/dist/schema/yaml-1.1/timestamp.js","../../node_modules/yaml/browser/dist/schema/yaml-1.1/schema.js","../../node_modules/yaml/browser/dist/schema/tags.js","../../node_modules/yaml/browser/dist/schema/Schema.js","../../node_modules/yaml/browser/dist/stringify/stringifyDocument.js","../../node_modules/yaml/browser/dist/doc/Document.js","../../node_modules/yaml/browser/dist/errors.js","../../node_modules/yaml/browser/dist/compose/resolve-props.js","../../node_modules/yaml/browser/dist/compose/util-contains-newline.js","../../node_modules/yaml/browser/dist/compose/util-flow-indent-check.js","../../node_modules/yaml/browser/dist/compose/util-map-includes.js","../../node_modules/yaml/browser/dist/compose/resolve-block-map.js","../../node_modules/yaml/browser/dist/compose/resolve-block-seq.js","../../node_modules/yaml/browser/dist/compose/resolve-end.js","../../node_modules/yaml/browser/dist/compose/resolve-flow-collection.js","../../node_modules/yaml/browser/dist/compose/compose-collection.js","../../node_modules/yaml/browser/dist/compose/resolve-block-scalar.js","../../node_modules/yaml/browser/dist/compose/resolve-flow-scalar.js","../../node_modules/yaml/browser/dist/compose/compose-scalar.js","../../node_modules/yaml/browser/dist/compose/util-empty-scalar-position.js","../../node_modules/yaml/browser/dist/compose/compose-node.js","../../node_modules/yaml/browser/dist/compose/compose-doc.js","../../node_modules/yaml/browser/dist/compose/composer.js","../../node_modules/yaml/browser/dist/parse/cst-scalar.js","../../node_modules/yaml/browser/dist/parse/cst-stringify.js","../../node_modules/yaml/browser/dist/parse/cst-visit.js","../../node_modules/yaml/browser/dist/parse/cst.js","../../node_modules/yaml/browser/dist/parse/lexer.js","../../node_modules/yaml/browser/dist/parse/line-counter.js","../../node_modules/yaml/browser/dist/parse/parser.js","../../node_modules/yaml/browser/dist/public-api.js","../../src/pages/format-conversion/page.tsx"],"sourcesContent":["'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    allmatches.startIndex = regex.lastIndex - match[0].length;\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n","'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n  unpairedTags: []\n};\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = Object.assign({}, defaultOptions, options);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n  \n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n      let tagStartPos = i;\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"Invalid space after '<'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          const attrStrStart = i - attrStr.length;\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg.tagName) {\n              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);\n              return getErrorObject('InvalidTag',\n                \"Expected closing tag '\"+otg.tagName+\"' (opened in line \"+openPos.line+\", col \"+openPos.col+\") instead of closing tag '\"+tagName+\"'.\",\n                getLineNumberForPosition(xmlData, tagStartPos));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else if(options.unpairedTags.indexOf(tagName) !== -1){\n            //don't push into stack\n          } else {\n            tags.push({tagName, tagStartPos});\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }else{\n            if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {\n              return getErrorObject('InvalidXml', \"Extra text at the end\", getLineNumberForPosition(xmlData, i));\n            }\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if ( isWhiteSpace(xmlData[i])) {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  }else if (tags.length == 1) {\n      return getErrorObject('InvalidTag', \"Unclosed tag '\"+tags[0].tagName+\"'.\", getLineNumberForPosition(xmlData, tags[0].tagStartPos));\n  }else if (tags.length > 0) {\n      return getErrorObject('InvalidXml', \"Invalid '\"+\n          JSON.stringify(tags.map(t => t.tagName), null, 4).replace(/\\r?\\n/g, '')+\n          \"' found.\", {line: 1, col: 1});\n  }\n\n  return true;\n};\n\nfunction isWhiteSpace(char){\n  return char === ' ' || char === '\\t' || char === '\\n'  || char === '\\r';\n}\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  const start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      const tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nconst doubleQuote = '\"';\nconst singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(matches[i]))\n    } else if (matches[i][3] !== undefined && matches[i][4] === undefined) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' is without value.\", getPositionFromMatch(matches[i]));\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(matches[i]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(matches[i]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(matches[i]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber.line || lineNumber,\n      col: lineNumber.col,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  const lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return {\n    line: lines.length,\n\n    // column number is last line's length + 1, because column numbering starts at 1:\n    col: lines[lines.length - 1].length + 1\n  };\n}\n\n//this function returns the position of the first character of match within attrStr\nfunction getPositionFromMatch(match) {\n  return match.startIndex + match[1].length;\n}\n","\nconst defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: '@_',\n    attributesGroupName: false,\n    textNodeName: '#text',\n    ignoreAttributes: true,\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false, //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true, //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true,\n      eNotation: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [], //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n    ignoreDeclaration: false,\n    ignorePiTags: false,\n    transformTagName: false,\n    transformAttributeName: false,\n    updateTag: function(tagName, jPath, attrs){\n      return tagName\n    },\n    // skipEmptyListItem: false\n};\n   \nconst buildOptions = function(options) {\n    return Object.assign({}, defaultOptions, options);\n};\n\nexports.buildOptions = buildOptions;\nexports.defaultOptions = defaultOptions;","'use strict';\n\nclass XmlNode{\n  constructor(tagname) {\n    this.tagname = tagname;\n    this.child = []; //nested tags, text, cdata, comments in order\n    this[\":@\"] = {}; //attributes map\n  }\n  add(key,val){\n    // this.child.push( {name : key, val: val, isCdata: isCdata });\n    if(key === \"__proto__\") key = \"#__proto__\";\n    this.child.push( {[key]: val });\n  }\n  addChild(node) {\n    if(node.tagname === \"__proto__\") node.tagname = \"#__proto__\";\n    if(node[\":@\"] && Object.keys(node[\":@\"]).length > 0){\n      this.child.push( { [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n    }else{\n      this.child.push( { [node.tagname]: node.child });\n    }\n  };\n};\n\n\nmodule.exports = XmlNode;","const util = require('../util');\n\n//TODO: handle comments\nfunction readDocType(xmlData, i){\n    \n    const entities = {};\n    if( xmlData[i + 3] === 'O' &&\n         xmlData[i + 4] === 'C' &&\n         xmlData[i + 5] === 'T' &&\n         xmlData[i + 6] === 'Y' &&\n         xmlData[i + 7] === 'P' &&\n         xmlData[i + 8] === 'E')\n    {    \n        i = i+9;\n        let angleBracketsCount = 1;\n        let hasBody = false, comment = false;\n        let exp = \"\";\n        for(;i<xmlData.length;i++){\n            if (xmlData[i] === '<' && !comment) { //Determine the tag type\n                if( hasBody && isEntity(xmlData, i)){\n                    i += 7; \n                    [entityName, val,i] = readEntityExp(xmlData,i+1);\n                    if(val.indexOf(\"&\") === -1) //Parameter entities are not supported\n                        entities[ validateEntityName(entityName) ] = {\n                            regx : RegExp( `&${entityName};`,\"g\"),\n                            val: val\n                        };\n                }\n                else if( hasBody && isElement(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isAttlist(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isNotation(xmlData, i)) i += 9;//Not supported\n                else if( isComment)                         comment = true;\n                else                                        throw new Error(\"Invalid DOCTYPE\");\n\n                angleBracketsCount++;\n                exp = \"\";\n            } else if (xmlData[i] === '>') { //Read tag content\n                if(comment){\n                    if( xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\"){\n                        comment = false;\n                        angleBracketsCount--;\n                    }\n                }else{\n                    angleBracketsCount--;\n                }\n                if (angleBracketsCount === 0) {\n                  break;\n                }\n            }else if( xmlData[i] === '['){\n                hasBody = true;\n            }else{\n                exp += xmlData[i];\n            }\n        }\n        if(angleBracketsCount !== 0){\n            throw new Error(`Unclosed DOCTYPE`);\n        }\n    }else{\n        throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return {entities, i};\n}\n\nfunction readEntityExp(xmlData,i){\n    //External entities are not supported\n    //    <!ENTITY ext SYSTEM \"http://normal-website.com\" >\n\n    //Parameter entities are not supported\n    //    <!ENTITY entityname \"&anotherElement;\">\n\n    //Internal entities are supported\n    //    <!ENTITY entityname \"replacement text\">\n    \n    //read EntityName\n    let entityName = \"\";\n    for (; i < xmlData.length && (xmlData[i] !== \"'\" && xmlData[i] !== '\"' ); i++) {\n        // if(xmlData[i] === \" \") continue;\n        // else \n        entityName += xmlData[i];\n    }\n    entityName = entityName.trim();\n    if(entityName.indexOf(\" \") !== -1) throw new Error(\"External entites are not supported\");\n\n    //read Entity Value\n    const startChar = xmlData[i++];\n    let val = \"\"\n    for (; i < xmlData.length && xmlData[i] !== startChar ; i++) {\n        val += xmlData[i];\n    }\n    return [entityName, val, i];\n}\n\nfunction isComment(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === '-' &&\n    xmlData[i+3] === '-') return true\n    return false\n}\nfunction isEntity(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'N' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'I' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'Y') return true\n    return false\n}\nfunction isElement(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'L' &&\n    xmlData[i+4] === 'E' &&\n    xmlData[i+5] === 'M' &&\n    xmlData[i+6] === 'E' &&\n    xmlData[i+7] === 'N' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\n\nfunction isAttlist(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'A' &&\n    xmlData[i+3] === 'T' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'L' &&\n    xmlData[i+6] === 'I' &&\n    xmlData[i+7] === 'S' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\nfunction isNotation(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'N' &&\n    xmlData[i+3] === 'O' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'A' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'I' &&\n    xmlData[i+8] === 'O' &&\n    xmlData[i+9] === 'N') return true\n    return false\n}\n\nfunction validateEntityName(name){\n    if (util.isName(name))\n\treturn name;\n    else\n        throw new Error(`Invalid entity name ${name}`);\n}\n\nmodule.exports = readDocType;\n","const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\nconst numRegex = /^([\\-\\+])?(0*)(\\.[0-9]+([eE]\\-?[0-9]+)?|[0-9]+(\\.[0-9]+([eE]\\-?[0-9]+)?)?)$/;\n// const octRegex = /0x[a-z0-9]+/;\n// const binRegex = /0x[a-z0-9]+/;\n\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n    Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n    Number.parseFloat = window.parseFloat;\n}\n\n  \nconst consider = {\n    hex :  true,\n    leadingZeros: true,\n    decimalPoint: \"\\.\",\n    eNotation: true\n    //skipLike: /regex/\n};\n\nfunction toNumber(str, options = {}){\n    // const options = Object.assign({}, consider);\n    // if(opt.leadingZeros === false){\n    //     options.leadingZeros = false;\n    // }else if(opt.hex === false){\n    //     options.hex = false;\n    // }\n\n    options = Object.assign({}, consider, options );\n    if(!str || typeof str !== \"string\" ) return str;\n    \n    let trimmedStr  = str.trim();\n    // if(trimmedStr === \"0.0\") return 0;\n    // else if(trimmedStr === \"+0.0\") return 0;\n    // else if(trimmedStr === \"-0.0\") return -0;\n\n    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;\n    else if (options.hex && hexRegex.test(trimmedStr)) {\n        return Number.parseInt(trimmedStr, 16);\n    // } else if (options.parseOct && octRegex.test(str)) {\n    //     return Number.parseInt(val, 8);\n    // }else if (options.parseBin && binRegex.test(str)) {\n    //     return Number.parseInt(val, 2);\n    }else{\n        //separate negative sign, leading zeros, and rest number\n        const match = numRegex.exec(trimmedStr);\n        if(match){\n            const sign = match[1];\n            const leadingZeros = match[2];\n            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros\n            //trim ending zeros for floating number\n            \n            const eNotation = match[4] || match[6];\n            if(!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== \".\") return str; //-0123\n            else if(!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== \".\") return str; //0123\n            else{//no leading zeros or leading zeros are allowed\n                const num = Number(trimmedStr);\n                const numStr = \"\" + num;\n                if(numStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(eNotation){ //given number has enotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(trimmedStr.indexOf(\".\") !== -1){ //floating number\n                    // const decimalPart = match[5].substr(1);\n                    // const intPart = trimmedStr.substr(0,trimmedStr.indexOf(\".\"));\n\n                    \n                    // const p = numStr.indexOf(\".\");\n                    // const givenIntPart = numStr.substr(0,p);\n                    // const givenDecPart = numStr.substr(p+1);\n                    if(numStr === \"0\" && (numTrimmedByZeros === \"\") ) return num; //0.0\n                    else if(numStr === numTrimmedByZeros) return num; //0.456. 0.79000\n                    else if( sign && numStr === \"-\"+numTrimmedByZeros) return num;\n                    else return str;\n                }\n                \n                if(leadingZeros){\n                    // if(numTrimmedByZeros === numStr){\n                    //     if(options.leadingZeros) return num;\n                    //     else return str;\n                    // }else return str;\n                    if(numTrimmedByZeros === numStr) return num;\n                    else if(sign+numTrimmedByZeros === numStr) return num;\n                    else return str;\n                }\n\n                if(trimmedStr === numStr) return num;\n                else if(trimmedStr === sign+numStr) return num;\n                // else{\n                //     //number with +/- sign\n                //     trimmedStr.test(/[-+][0-9]);\n\n                // }\n                return str;\n            }\n            // else if(!eNotation && trimmedStr && trimmedStr !== Number(trimmedStr) ) return str;\n            \n        }else{ //non-numeric string\n            return str;\n        }\n    }\n}\n\n/**\n * \n * @param {string} numStr without leading zeros\n * @returns \n */\nfunction trimZeros(numStr){\n    if(numStr && numStr.indexOf(\".\") !== -1){//float\n        numStr = numStr.replace(/0+$/, \"\"); //remove ending zeros\n        if(numStr === \".\")  numStr = \"0\";\n        else if(numStr[0] === \".\")  numStr = \"0\"+numStr;\n        else if(numStr[numStr.length-1] === \".\")  numStr = numStr.substr(0,numStr.length-1);\n        return numStr;\n    }\n    return numStr;\n}\nmodule.exports = toNumber\n","'use strict';\n///@ts-check\n\nconst util = require('../util');\nconst xmlNode = require('./xmlNode');\nconst readDocType = require(\"./DocTypeReader\");\nconst toNumber = require(\"strnum\");\n\n// const regx =\n//   '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n//   .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\nclass OrderedObjParser{\n  constructor(options){\n    this.options = options;\n    this.currentNode = null;\n    this.tagsNodeStack = [];\n    this.docTypeEntities = {};\n    this.lastEntities = {\n      \"apos\" : { regex: /&(apos|#39|#x27);/g, val : \"'\"},\n      \"gt\" : { regex: /&(gt|#62|#x3E);/g, val : \">\"},\n      \"lt\" : { regex: /&(lt|#60|#x3C);/g, val : \"<\"},\n      \"quot\" : { regex: /&(quot|#34|#x22);/g, val : \"\\\"\"},\n    };\n    this.ampEntity = { regex: /&(amp|#38|#x26);/g, val : \"&\"};\n    this.htmlEntities = {\n      \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n      // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n      // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n      // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n      // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n      // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n      \"cent\" : { regex: /&(cent|#162);/g, val: \"¢\" },\n      \"pound\" : { regex: /&(pound|#163);/g, val: \"£\" },\n      \"yen\" : { regex: /&(yen|#165);/g, val: \"¥\" },\n      \"euro\" : { regex: /&(euro|#8364);/g, val: \"€\" },\n      \"copyright\" : { regex: /&(copy|#169);/g, val: \"©\" },\n      \"reg\" : { regex: /&(reg|#174);/g, val: \"®\" },\n      \"inr\" : { regex: /&(inr|#8377);/g, val: \"₹\" },\n      \"num_dec\": { regex: /&#([0-9]{1,7});/g, val : (_, str) => String.fromCharCode(Number.parseInt(str, 10)) },\n      \"num_hex\": { regex: /&#x([0-9a-fA-F]{1,6});/g, val : (_, str) => String.fromCharCode(Number.parseInt(str, 16)) },\n    };\n    this.addExternalEntities = addExternalEntities;\n    this.parseXml = parseXml;\n    this.parseTextData = parseTextData;\n    this.resolveNameSpace = resolveNameSpace;\n    this.buildAttributesMap = buildAttributesMap;\n    this.isItStopNode = isItStopNode;\n    this.replaceEntitiesValue = replaceEntitiesValue;\n    this.readStopNodeData = readStopNodeData;\n    this.saveTextToParentTag = saveTextToParentTag;\n    this.addChild = addChild;\n  }\n\n}\n\nfunction addExternalEntities(externalEntities){\n  const entKeys = Object.keys(externalEntities);\n  for (let i = 0; i < entKeys.length; i++) {\n    const ent = entKeys[i];\n    this.lastEntities[ent] = {\n       regex: new RegExp(\"&\"+ent+\";\",\"g\"),\n       val : externalEntities[ent]\n    }\n  }\n}\n\n/**\n * @param {string} val\n * @param {string} tagName\n * @param {string} jPath\n * @param {boolean} dontTrim\n * @param {boolean} hasAttributes\n * @param {boolean} isLeafNode\n * @param {boolean} escapeEntities\n */\nfunction parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n  if (val !== undefined) {\n    if (this.options.trimValues && !dontTrim) {\n      val = val.trim();\n    }\n    if(val.length > 0){\n      if(!escapeEntities) val = this.replaceEntitiesValue(val);\n      \n      const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n      if(newval === null || newval === undefined){\n        //don't parse\n        return val;\n      }else if(typeof newval !== typeof val || newval !== val){\n        //overwrite\n        return newval;\n      }else if(this.options.trimValues){\n        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n      }else{\n        const trimmedVal = val.trim();\n        if(trimmedVal === val){\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        }else{\n          return val;\n        }\n      }\n    }\n  }\n}\n\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])([\\\\s\\\\S]*?)\\\\3)?', 'gm');\n\nfunction buildAttributesMap(attrStr, jPath, tagName) {\n  if (!this.options.ignoreAttributes && typeof attrStr === 'string') {\n    // attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = this.resolveNameSpace(matches[i][1]);\n      let oldVal = matches[i][4];\n      let aName = this.options.attributeNamePrefix + attrName;\n      if (attrName.length) {\n        if (this.options.transformAttributeName) {\n          aName = this.options.transformAttributeName(aName);\n        }\n        if(aName === \"__proto__\") aName  = \"#__proto__\";\n        if (oldVal !== undefined) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n          oldVal = this.replaceEntitiesValue(oldVal);\n          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n          if(newVal === null || newVal === undefined){\n            //don't parse\n            attrs[aName] = oldVal;\n          }else if(typeof newVal !== typeof oldVal || newVal !== oldVal){\n            //overwrite\n            attrs[aName] = newVal;\n          }else{\n            //parse\n            attrs[aName] = parseValue(\n              oldVal,\n              this.options.parseAttributeValue,\n              this.options.numberParseOptions\n            );\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (this.options.attributesGroupName) {\n      const attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n    return attrs\n  }\n}\n\nconst parseXml = function(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\"); //TODO: remove this line\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n  let jPath = \"\";\n  for(let i=0; i< xmlData.length; i++){//for each char in XML data\n    const ch = xmlData[i];\n    if(ch === '<'){\n      // const nextIndex = i+1;\n      // const _2ndChar = xmlData[nextIndex];\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(this.options.removeNSPrefix){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        if(this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n\n        if(currentNode){\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        }\n\n        //check if last tag of nested tag was unpaired tag\n        const lastTagName = jPath.substring(jPath.lastIndexOf(\".\")+1);\n        if(tagName && this.options.unpairedTags.indexOf(tagName) !== -1 ){\n          throw new Error(`Unpaired tag can not be used as closing tag: </${tagName}>`);\n        }\n        let propIndex = 0\n        if(lastTagName && this.options.unpairedTags.indexOf(lastTagName) !== -1 ){\n          propIndex = jPath.lastIndexOf('.', jPath.lastIndexOf('.')-1)\n          this.tagsNodeStack.pop();\n        }else{\n          propIndex = jPath.lastIndexOf(\".\");\n        }\n        jPath = jPath.substring(0, propIndex);\n\n        currentNode = this.tagsNodeStack.pop();//avoid recursion, set the parent tag scope\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n\n        let tagData = readTagExp(xmlData,i, false, \"?>\");\n        if(!tagData) throw new Error(\"Pi Tag is not closed.\");\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        if( (this.options.ignoreDeclaration && tagData.tagName === \"?xml\") || this.options.ignorePiTags){\n\n        }else{\n  \n          const childNode = new xmlNode(tagData.tagName);\n          childNode.add(this.options.textNodeName, \"\");\n          \n          if(tagData.tagName !== tagData.tagExp && tagData.attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath, tagData.tagName);\n          }\n          this.addChild(currentNode, childNode, jPath)\n\n        }\n\n\n        i = tagData.closeIndex + 1;\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        const endIndex = findClosingIndex(xmlData, \"-->\", i+4, \"Comment is not closed.\")\n        if(this.options.commentPropName){\n          const comment = xmlData.substring(i + 4, endIndex - 2);\n\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n          currentNode.add(this.options.commentPropName, [ { [this.options.textNodeName] : comment } ]);\n        }\n        i = endIndex;\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n        let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true, true);\n        if(val == undefined) val = \"\";\n\n        //cdata should be set even if it is 0 length string\n        if(this.options.cdataPropName){\n          currentNode.add(this.options.cdataPropName, [ { [this.options.textNodeName] : tagExp } ]);\n        }else{\n          currentNode.add(this.options.textNodeName, val);\n        }\n        \n        i = closeIndex + 2;\n      }else {//Opening tag\n        let result = readTagExp(xmlData,i, this.options.removeNSPrefix);\n        let tagName= result.tagName;\n        const rawTagName = result.rawTagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n\n        if (this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n        \n        //save text as child node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            //when nested tag is found\n            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n          }\n        }\n\n        //check if last tag was unpaired tag\n        const lastTag = currentNode;\n        if(lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1 ){\n          currentNode = this.tagsNodeStack.pop();\n          jPath = jPath.substring(0, jPath.lastIndexOf(\".\"));\n        }\n        if(tagName !== xmlObj.tagname){\n          jPath += jPath ? \".\" + tagName : tagName;\n        }\n        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) {\n          let tagContent = \"\";\n          //self-closing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            i = result.closeIndex;\n          }\n          //unpaired tag\n          else if(this.options.unpairedTags.indexOf(tagName) !== -1){\n            i = result.closeIndex;\n          }\n          //normal tag\n          else{\n            //read until closing tag is found\n            const result = this.readStopNodeData(xmlData, rawTagName, closeIndex + 1);\n            if(!result) throw new Error(`Unexpected end of ${rawTagName}`);\n            i = result.i;\n            tagContent = result.tagContent;\n          }\n\n          const childNode = new xmlNode(tagName);\n          if(tagName !== tagExp && attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n          }\n          if(tagContent) {\n            tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);\n          }\n          \n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          childNode.add(this.options.textNodeName, tagContent);\n          \n          this.addChild(currentNode, childNode, jPath)\n        }else{\n  //selfClosing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              jPath = jPath.substr(0, jPath.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            \n            if(this.options.transformTagName) {\n              tagName = this.options.transformTagName(tagName);\n            }\n\n            const childNode = new xmlNode(tagName);\n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath)\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          }\n    //opening tag\n          else{\n            const childNode = new xmlNode( tagName);\n            this.tagsNodeStack.push(currentNode);\n            \n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath)\n            currentNode = childNode;\n          }\n          textData = \"\";\n          i = closeIndex;\n        }\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj.child;\n}\n\nfunction addChild(currentNode, childNode, jPath){\n  const result = this.options.updateTag(childNode.tagname, jPath, childNode[\":@\"])\n  if(result === false){\n  }else if(typeof result === \"string\"){\n    childNode.tagname = result\n    currentNode.addChild(childNode);\n  }else{\n    currentNode.addChild(childNode);\n  }\n}\n\nconst replaceEntitiesValue = function(val){\n\n  if(this.options.processEntities){\n    for(let entityName in this.docTypeEntities){\n      const entity = this.docTypeEntities[entityName];\n      val = val.replace( entity.regx, entity.val);\n    }\n    for(let entityName in this.lastEntities){\n      const entity = this.lastEntities[entityName];\n      val = val.replace( entity.regex, entity.val);\n    }\n    if(this.options.htmlEntities){\n      for(let entityName in this.htmlEntities){\n        const entity = this.htmlEntities[entityName];\n        val = val.replace( entity.regex, entity.val);\n      }\n    }\n    val = val.replace( this.ampEntity.regex, this.ampEntity.val);\n  }\n  return val;\n}\nfunction saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n  if (textData) { //store previously collected data as textNode\n    if(isLeafNode === undefined) isLeafNode = Object.keys(currentNode.child).length === 0\n    \n    textData = this.parseTextData(textData,\n      currentNode.tagname,\n      jPath,\n      false,\n      currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false,\n      isLeafNode);\n\n    if (textData !== undefined && textData !== \"\")\n      currentNode.add(this.options.textNodeName, textData);\n    textData = \"\";\n  }\n  return textData;\n}\n\n//TODO: use jPath to simplify the logic\n/**\n * \n * @param {string[]} stopNodes \n * @param {string} jPath\n * @param {string} currentTagName \n */\nfunction isItStopNode(stopNodes, jPath, currentTagName){\n  const allNodesExp = \"*.\" + currentTagName;\n  for (const stopNodePath in stopNodes) {\n    const stopNodeExp = stopNodes[stopNodePath];\n    if( allNodesExp === stopNodeExp || jPath === stopNodeExp  ) return true;\n  }\n  return false;\n}\n\n/**\n * Returns the tag Expression and where it is ending handling single-double quotes situation\n * @param {string} xmlData \n * @param {number} i starting index\n * @returns \n */\nfunction tagExpWithClosingIndex(xmlData, i, closingChar = \">\"){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < xmlData.length; index++) {\n    let ch = xmlData[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if(closingChar[1]){\n        if(xmlData[index + 1] === closingChar[1]){\n          return {\n            data: tagExp,\n            index: index\n          }\n        }\n      }else{\n        return {\n          data: tagExp,\n          index: index\n        }\n      }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nfunction readTagExp(xmlData,i, removeNSPrefix, closingChar = \">\"){\n  const result = tagExpWithClosingIndex(xmlData, i+1, closingChar);\n  if(!result) return;\n  let tagExp = result.data;\n  const closeIndex = result.index;\n  const separatorIndex = tagExp.search(/\\s/);\n  let tagName = tagExp;\n  let attrExpPresent = true;\n  if(separatorIndex !== -1){//separate tag name and attributes expression\n    tagName = tagExp.substring(0, separatorIndex);\n    tagExp = tagExp.substring(separatorIndex + 1).trimStart();\n  }\n\n  const rawTagName = tagName;\n  if(removeNSPrefix){\n    const colonIndex = tagName.indexOf(\":\");\n    if(colonIndex !== -1){\n      tagName = tagName.substr(colonIndex+1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n\n  return {\n    tagName: tagName,\n    tagExp: tagExp,\n    closeIndex: closeIndex,\n    attrExpPresent: attrExpPresent,\n    rawTagName: rawTagName,\n  }\n}\n/**\n * find paired tag for a stop node\n * @param {string} xmlData \n * @param {string} tagName \n * @param {number} i \n */\nfunction readStopNodeData(xmlData, tagName, i){\n  const startIndex = i;\n  // Starting at 1 since we already have an open tag\n  let openTagCount = 1;\n\n  for (; i < xmlData.length; i++) {\n    if( xmlData[i] === \"<\"){ \n      if (xmlData[i+1] === \"/\") {//close tag\n          const closeIndex = findClosingIndex(xmlData, \">\", i, `${tagName} is not closed`);\n          let closeTagName = xmlData.substring(i+2,closeIndex).trim();\n          if(closeTagName === tagName){\n            openTagCount--;\n            if (openTagCount === 0) {\n              return {\n                tagContent: xmlData.substring(startIndex, i),\n                i : closeIndex\n              }\n            }\n          }\n          i=closeIndex;\n        } else if(xmlData[i+1] === '?') { \n          const closeIndex = findClosingIndex(xmlData, \"?>\", i+1, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 3) === '!--') { \n          const closeIndex = findClosingIndex(xmlData, \"-->\", i+3, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 2) === '![') { \n          const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"StopNode is not closed.\") - 2;\n          i=closeIndex;\n        } else {\n          const tagData = readTagExp(xmlData, i, '>')\n\n          if (tagData) {\n            const openTagName = tagData && tagData.tagName;\n            if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length-1] !== \"/\") {\n              openTagCount++;\n            }\n            i=tagData.closeIndex;\n          }\n        }\n      }\n  }//end for loop\n}\n\nfunction parseValue(val, shouldParse, options) {\n  if (shouldParse && typeof val === 'string') {\n    //console.log(options)\n    const newval = val.trim();\n    if(newval === 'true' ) return true;\n    else if(newval === 'false' ) return false;\n    else return toNumber(val, options);\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n\nmodule.exports = OrderedObjParser;\n","'use strict';\n\n/**\n * \n * @param {array} node \n * @param {any} options \n * @returns \n */\nfunction prettify(node, options){\n  return compress( node, options);\n}\n\n/**\n * \n * @param {array} arr \n * @param {object} options \n * @param {string} jPath \n * @returns object\n */\nfunction compress(arr, options, jPath){\n  let text;\n  const compressedObj = {};\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const property = propName(tagObj);\n    let newJpath = \"\";\n    if(jPath === undefined) newJpath = property;\n    else newJpath = jPath + \".\" + property;\n\n    if(property === options.textNodeName){\n      if(text === undefined) text = tagObj[property];\n      else text += \"\" + tagObj[property];\n    }else if(property === undefined){\n      continue;\n    }else if(tagObj[property]){\n      \n      let val = compress(tagObj[property], options, newJpath);\n      const isLeaf = isLeafTag(val, options);\n\n      if(tagObj[\":@\"]){\n        assignAttributes( val, tagObj[\":@\"], newJpath, options);\n      }else if(Object.keys(val).length === 1 && val[options.textNodeName] !== undefined && !options.alwaysCreateTextNode){\n        val = val[options.textNodeName];\n      }else if(Object.keys(val).length === 0){\n        if(options.alwaysCreateTextNode) val[options.textNodeName] = \"\";\n        else val = \"\";\n      }\n\n      if(compressedObj[property] !== undefined && compressedObj.hasOwnProperty(property)) {\n        if(!Array.isArray(compressedObj[property])) {\n            compressedObj[property] = [ compressedObj[property] ];\n        }\n        compressedObj[property].push(val);\n      }else{\n        //TODO: if a node is not an array, then check if it should be an array\n        //also determine if it is a leaf node\n        if (options.isArray(property, newJpath, isLeaf )) {\n          compressedObj[property] = [val];\n        }else{\n          compressedObj[property] = val;\n        }\n      }\n    }\n    \n  }\n  // if(text && text.length > 0) compressedObj[options.textNodeName] = text;\n  if(typeof text === \"string\"){\n    if(text.length > 0) compressedObj[options.textNodeName] = text;\n  }else if(text !== undefined) compressedObj[options.textNodeName] = text;\n  return compressedObj;\n}\n\nfunction propName(obj){\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if(key !== \":@\") return key;\n  }\n}\n\nfunction assignAttributes(obj, attrMap, jpath, options){\n  if (attrMap) {\n    const keys = Object.keys(attrMap);\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      const atrrName = keys[i];\n      if (options.isArray(atrrName, jpath + \".\" + atrrName, true, true)) {\n        obj[atrrName] = [ attrMap[atrrName] ];\n      } else {\n        obj[atrrName] = attrMap[atrrName];\n      }\n    }\n  }\n}\n\nfunction isLeafTag(obj, options){\n  const { textNodeName } = options;\n  const propCount = Object.keys(obj).length;\n  \n  if (propCount === 0) {\n    return true;\n  }\n\n  if (\n    propCount === 1 &&\n    (obj[textNodeName] || typeof obj[textNodeName] === \"boolean\" || obj[textNodeName] === 0)\n  ) {\n    return true;\n  }\n\n  return false;\n}\nexports.prettify = prettify;\n","const { buildOptions} = require(\"./OptionsBuilder\");\nconst OrderedObjParser = require(\"./OrderedObjParser\");\nconst { prettify} = require(\"./node2json\");\nconst validator = require('../validator');\n\nclass XMLParser{\n    \n    constructor(options){\n        this.externalEntities = {};\n        this.options = buildOptions(options);\n        \n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData,validationOption){\n        if(typeof xmlData === \"string\"){\n        }else if( xmlData.toString){\n            xmlData = xmlData.toString();\n        }else{\n            throw new Error(\"XML data is accepted in String or Bytes[] form.\")\n        }\n        if( validationOption){\n            if(validationOption === true) validationOption = {}; //validate with default options\n            \n            const result = validator.validate(xmlData, validationOption);\n            if (result !== true) {\n              throw Error( `${result.err.msg}:${result.err.line}:${result.err.col}` )\n            }\n          }\n        const orderedObjParser = new OrderedObjParser(this.options);\n        orderedObjParser.addExternalEntities(this.externalEntities);\n        const orderedResult = orderedObjParser.parseXml(xmlData);\n        if(this.options.preserveOrder || orderedResult === undefined) return orderedResult;\n        else return prettify(orderedResult, this.options);\n    }\n\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value){\n        if(value.indexOf(\"&\") !== -1){\n            throw new Error(\"Entity value can't have '&'\")\n        }else if(key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1){\n            throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\")\n        }else if(value === \"&\"){\n            throw new Error(\"An entity with value '&' is not permitted\");\n        }else{\n            this.externalEntities[key] = value;\n        }\n    }\n}\n\nmodule.exports = XMLParser;","const EOL = \"\\n\";\n\n/**\n * \n * @param {array} jArray \n * @param {any} options \n * @returns \n */\nfunction toXml(jArray, options) {\n    let indentation = \"\";\n    if (options.format && options.indentBy.length > 0) {\n        indentation = EOL;\n    }\n    return arrToStr(jArray, options, \"\", indentation);\n}\n\nfunction arrToStr(arr, options, jPath, indentation) {\n    let xmlStr = \"\";\n    let isPreviousElementTag = false;\n\n    for (let i = 0; i < arr.length; i++) {\n        const tagObj = arr[i];\n        const tagName = propName(tagObj);\n        if(tagName === undefined) continue;\n\n        let newJPath = \"\";\n        if (jPath.length === 0) newJPath = tagName\n        else newJPath = `${jPath}.${tagName}`;\n\n        if (tagName === options.textNodeName) {\n            let tagText = tagObj[tagName];\n            if (!isStopNode(newJPath, options)) {\n                tagText = options.tagValueProcessor(tagName, tagText);\n                tagText = replaceEntitiesValue(tagText, options);\n            }\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += tagText;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.cdataPropName) {\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.commentPropName) {\n            xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n            isPreviousElementTag = true;\n            continue;\n        } else if (tagName[0] === \"?\") {\n            const attStr = attr_to_str(tagObj[\":@\"], options);\n            const tempInd = tagName === \"?xml\" ? \"\" : indentation;\n            let piTextNodeName = tagObj[tagName][0][options.textNodeName];\n            piTextNodeName = piTextNodeName.length !== 0 ? \" \" + piTextNodeName : \"\"; //remove extra spacing\n            xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr}?>`;\n            isPreviousElementTag = true;\n            continue;\n        }\n        let newIdentation = indentation;\n        if (newIdentation !== \"\") {\n            newIdentation += options.indentBy;\n        }\n        const attStr = attr_to_str(tagObj[\":@\"], options);\n        const tagStart = indentation + `<${tagName}${attStr}`;\n        const tagValue = arrToStr(tagObj[tagName], options, newJPath, newIdentation);\n        if (options.unpairedTags.indexOf(tagName) !== -1) {\n            if (options.suppressUnpairedNode) xmlStr += tagStart + \">\";\n            else xmlStr += tagStart + \"/>\";\n        } else if ((!tagValue || tagValue.length === 0) && options.suppressEmptyNode) {\n            xmlStr += tagStart + \"/>\";\n        } else if (tagValue && tagValue.endsWith(\">\")) {\n            xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>`;\n        } else {\n            xmlStr += tagStart + \">\";\n            if (tagValue && indentation !== \"\" && (tagValue.includes(\"/>\") || tagValue.includes(\"</\"))) {\n                xmlStr += indentation + options.indentBy + tagValue + indentation;\n            } else {\n                xmlStr += tagValue;\n            }\n            xmlStr += `</${tagName}>`;\n        }\n        isPreviousElementTag = true;\n    }\n\n    return xmlStr;\n}\n\nfunction propName(obj) {\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if(!obj.hasOwnProperty(key)) continue;\n        if (key !== \":@\") return key;\n    }\n}\n\nfunction attr_to_str(attrMap, options) {\n    let attrStr = \"\";\n    if (attrMap && !options.ignoreAttributes) {\n        for (let attr in attrMap) {\n            if(!attrMap.hasOwnProperty(attr)) continue;\n            let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n            attrVal = replaceEntitiesValue(attrVal, options);\n            if (attrVal === true && options.suppressBooleanAttributes) {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}`;\n            } else {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n            }\n        }\n    }\n    return attrStr;\n}\n\nfunction isStopNode(jPath, options) {\n    jPath = jPath.substr(0, jPath.length - options.textNodeName.length - 1);\n    let tagName = jPath.substr(jPath.lastIndexOf(\".\") + 1);\n    for (let index in options.stopNodes) {\n        if (options.stopNodes[index] === jPath || options.stopNodes[index] === \"*.\" + tagName) return true;\n    }\n    return false;\n}\n\nfunction replaceEntitiesValue(textValue, options) {\n    if (textValue && textValue.length > 0 && options.processEntities) {\n        for (let i = 0; i < options.entities.length; i++) {\n            const entity = options.entities[i];\n            textValue = textValue.replace(entity.regex, entity.val);\n        }\n    }\n    return textValue;\n}\nmodule.exports = toXml;\n","'use strict';\n//parse Empty Node as self closing node\nconst buildFromOrderedJs = require('./orderedJs2Xml');\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataPropName: false,\n  format: false,\n  indentBy: '  ',\n  suppressEmptyNode: false,\n  suppressUnpairedNode: true,\n  suppressBooleanAttributes: true,\n  tagValueProcessor: function(key, a) {\n    return a;\n  },\n  attributeValueProcessor: function(attrName, a) {\n    return a;\n  },\n  preserveOrder: false,\n  commentPropName: false,\n  unpairedTags: [],\n  entities: [\n    { regex: new RegExp(\"&\", \"g\"), val: \"&amp;\" },//it must be on top\n    { regex: new RegExp(\">\", \"g\"), val: \"&gt;\" },\n    { regex: new RegExp(\"<\", \"g\"), val: \"&lt;\" },\n    { regex: new RegExp(\"\\'\", \"g\"), val: \"&apos;\" },\n    { regex: new RegExp(\"\\\"\", \"g\"), val: \"&quot;\" }\n  ],\n  processEntities: true,\n  stopNodes: [],\n  // transformTagName: false,\n  // transformAttributeName: false,\n  oneListGroup: false\n};\n\nfunction Builder(options) {\n  this.options = Object.assign({}, defaultOptions, options);\n  if (this.options.ignoreAttributes || this.options.attributesGroupName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  this.processTextOrObjNode = processTextOrObjNode\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n}\n\nBuilder.prototype.build = function(jObj) {\n  if(this.options.preserveOrder){\n    return buildFromOrderedJs(jObj, this.options);\n  }else {\n    if(Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1){\n      jObj = {\n        [this.options.arrayNodeName] : jObj\n      }\n    }\n    return this.j2x(jObj, 0).val;\n  }\n};\n\nBuilder.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  for (let key in jObj) {\n    if(!Object.prototype.hasOwnProperty.call(jObj, key)) continue;\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node only if it is not an attribute\n      if (this.isAttribute(key)) {\n        val += '';\n      }\n    } else if (jObj[key] === null) {\n      // null attribute should be ignored by the attribute list, but should not cause the tag closing\n      if (this.isAttribute(key)) {\n        val += '';\n      } else if (key[0] === '?') {\n        val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n      } else {\n        val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n      }\n      // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextValNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += this.buildAttrPairStr(attr, '' + jObj[key]);\n      }else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          let newval = this.options.tagValueProcessor(key, '' + jObj[key]);\n          val += this.replaceEntitiesValue(newval);\n        } else {\n          val += this.buildTextValNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      const arrLen = jObj[key].length;\n      let listTagVal = \"\";\n      for (let j = 0; j < arrLen; j++) {\n        const item = jObj[key][j];\n        if (typeof item === 'undefined') {\n          // supress undefined node\n        } else if (item === null) {\n          if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n          else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n        } else if (typeof item === 'object') {\n          if(this.options.oneListGroup ){\n            listTagVal += this.j2x(item, level + 1).val;\n          }else{\n            listTagVal += this.processTextOrObjNode(item, key, level)\n          }\n        } else {\n          listTagVal += this.buildTextValNode(item, key, '', level);\n        }\n      }\n      if(this.options.oneListGroup){\n        listTagVal = this.buildObjectNode(listTagVal, key, '', level);\n      }\n      val += listTagVal;\n    } else {\n      //nested node\n      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += this.buildAttrPairStr(Ks[j], '' + jObj[key][Ks[j]]);\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level)\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nBuilder.prototype.buildAttrPairStr = function(attrName, val){\n  val = this.options.attributeValueProcessor(attrName, '' + val);\n  val = this.replaceEntitiesValue(val);\n  if (this.options.suppressBooleanAttributes && val === \"true\") {\n    return ' ' + attrName;\n  } else return ' ' + attrName + '=\"' + val + '\"';\n}\n\nfunction processTextOrObjNode (object, key, level) {\n  const result = this.j2x(object, level + 1);\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextValNode(object[this.options.textNodeName], key, result.attrStr, level);\n  } else {\n    return this.buildObjectNode(result.val, key, result.attrStr, level);\n  }\n}\n\nBuilder.prototype.buildObjectNode = function(val, key, attrStr, level) {\n  if(val === \"\"){\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }\n  }else{\n\n    let tagEndExp = '</' + key + this.tagEndChar;\n    let piClosingChar = \"\";\n    \n    if(key[0] === \"?\") {\n      piClosingChar = \"?\";\n      tagEndExp = \"\";\n    }\n  \n    // attrStr is an empty string in case the attribute came as undefined or null\n    if ((attrStr || attrStr === '') && val.indexOf('<') === -1) {\n      return ( this.indentate(level) + '<' +  key + attrStr + piClosingChar + '>' + val + tagEndExp );\n    } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {\n      return this.indentate(level) + `<!--${val}-->` + this.newLine;\n    }else {\n      return (\n        this.indentate(level) + '<' + key + attrStr + piClosingChar + this.tagEndChar +\n        val +\n        this.indentate(level) + tagEndExp    );\n    }\n  }\n}\n\nBuilder.prototype.closeTag = function(key){\n  let closeTag = \"\";\n  if(this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n    if(!this.options.suppressUnpairedNode) closeTag = \"/\"\n  }else if(this.options.suppressEmptyNode){ //empty\n    closeTag = \"/\";\n  }else{\n    closeTag = `></${key}`\n  }\n  return closeTag;\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n      // return this.buildTagStr(level,key, attrStr);\n    }\n  }\n}\n\nBuilder.prototype.buildTextValNode = function(val, key, attrStr, level) {\n  if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {\n    return this.indentate(level) + `<![CDATA[${val}]]>` +  this.newLine;\n  }else if (this.options.commentPropName !== false && key === this.options.commentPropName) {\n    return this.indentate(level) + `<!--${val}-->` +  this.newLine;\n  }else if(key[0] === \"?\") {//PI tag\n    return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar; \n  }else{\n    let textValue = this.options.tagValueProcessor(key, val);\n    textValue = this.replaceEntitiesValue(textValue);\n  \n    if( textValue === ''){\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }else{\n      return this.indentate(level) + '<' + key + attrStr + '>' +\n         textValue +\n        '</' + key + this.tagEndChar;\n    }\n  }\n}\n\nBuilder.prototype.replaceEntitiesValue = function(textValue){\n  if(textValue && textValue.length > 0 && this.options.processEntities){\n    for (let i=0; i<this.options.entities.length; i++) {\n      const entity = this.options.entities[i];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix) && name !== this.options.textNodeName) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = Builder;\n","'use strict';\n\nconst validator = require('./validator');\nconst XMLParser = require('./xmlparser/XMLParser');\nconst XMLBuilder = require('./xmlbuilder/json2xml');\n\nmodule.exports = {\n  XMLParser: XMLParser,\n  XMLValidator: validator,\n  XMLBuilder: XMLBuilder\n}","const ALIAS = Symbol.for('yaml.alias');\nconst DOC = Symbol.for('yaml.document');\nconst MAP = Symbol.for('yaml.map');\nconst PAIR = Symbol.for('yaml.pair');\nconst SCALAR = Symbol.for('yaml.scalar');\nconst SEQ = Symbol.for('yaml.seq');\nconst NODE_TYPE = Symbol.for('yaml.node.type');\nconst isAlias = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === ALIAS;\nconst isDocument = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === DOC;\nconst isMap = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === MAP;\nconst isPair = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === PAIR;\nconst isScalar = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SCALAR;\nconst isSeq = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SEQ;\nfunction isCollection(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case MAP:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nfunction isNode(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case ALIAS:\n            case MAP:\n            case SCALAR:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nconst hasAnchor = (node) => (isScalar(node) || isCollection(node)) && !!node.anchor;\n\nexport { ALIAS, DOC, MAP, NODE_TYPE, PAIR, SCALAR, SEQ, hasAnchor, isAlias, isCollection, isDocument, isMap, isNode, isPair, isScalar, isSeq };\n","import { isDocument, isNode, isPair, isCollection, isMap, isSeq, isScalar, isAlias } from './nodes/identity.js';\n\nconst BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove node');\n/**\n * Apply a visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nfunction visit(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = visit_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        visit_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisit.SKIP = SKIP;\n/** Remove the current node */\nvisit.REMOVE = REMOVE;\nfunction visit_(key, node, visitor, path) {\n    const ctrl = callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visit_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = visit_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = visit_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = visit_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\n/**\n * Apply an async visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `Promise`: Must resolve to one of the following values\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nasync function visitAsync(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = await visitAsync_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        await visitAsync_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisitAsync.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisitAsync.SKIP = SKIP;\n/** Remove the current node */\nvisitAsync.REMOVE = REMOVE;\nasync function visitAsync_(key, node, visitor, path) {\n    const ctrl = await callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visitAsync_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = await visitAsync_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = await visitAsync_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = await visitAsync_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\nfunction initVisitor(visitor) {\n    if (typeof visitor === 'object' &&\n        (visitor.Collection || visitor.Node || visitor.Value)) {\n        return Object.assign({\n            Alias: visitor.Node,\n            Map: visitor.Node,\n            Scalar: visitor.Node,\n            Seq: visitor.Node\n        }, visitor.Value && {\n            Map: visitor.Value,\n            Scalar: visitor.Value,\n            Seq: visitor.Value\n        }, visitor.Collection && {\n            Map: visitor.Collection,\n            Seq: visitor.Collection\n        }, visitor);\n    }\n    return visitor;\n}\nfunction callVisitor(key, node, visitor, path) {\n    if (typeof visitor === 'function')\n        return visitor(key, node, path);\n    if (isMap(node))\n        return visitor.Map?.(key, node, path);\n    if (isSeq(node))\n        return visitor.Seq?.(key, node, path);\n    if (isPair(node))\n        return visitor.Pair?.(key, node, path);\n    if (isScalar(node))\n        return visitor.Scalar?.(key, node, path);\n    if (isAlias(node))\n        return visitor.Alias?.(key, node, path);\n    return undefined;\n}\nfunction replaceNode(key, path, node) {\n    const parent = path[path.length - 1];\n    if (isCollection(parent)) {\n        parent.items[key] = node;\n    }\n    else if (isPair(parent)) {\n        if (key === 'key')\n            parent.key = node;\n        else\n            parent.value = node;\n    }\n    else if (isDocument(parent)) {\n        parent.contents = node;\n    }\n    else {\n        const pt = isAlias(parent) ? 'alias' : 'scalar';\n        throw new Error(`Cannot replace node with ${pt} parent`);\n    }\n}\n\nexport { visit, visitAsync };\n","import { isNode } from '../nodes/identity.js';\nimport { visit } from '../visit.js';\n\nconst escapeChars = {\n    '!': '%21',\n    ',': '%2C',\n    '[': '%5B',\n    ']': '%5D',\n    '{': '%7B',\n    '}': '%7D'\n};\nconst escapeTagName = (tn) => tn.replace(/[!,[\\]{}]/g, ch => escapeChars[ch]);\nclass Directives {\n    constructor(yaml, tags) {\n        /**\n         * The directives-end/doc-start marker `---`. If `null`, a marker may still be\n         * included in the document's stringified representation.\n         */\n        this.docStart = null;\n        /** The doc-end marker `...`.  */\n        this.docEnd = false;\n        this.yaml = Object.assign({}, Directives.defaultYaml, yaml);\n        this.tags = Object.assign({}, Directives.defaultTags, tags);\n    }\n    clone() {\n        const copy = new Directives(this.yaml, this.tags);\n        copy.docStart = this.docStart;\n        return copy;\n    }\n    /**\n     * During parsing, get a Directives instance for the current document and\n     * update the stream state according to the current version's spec.\n     */\n    atDocument() {\n        const res = new Directives(this.yaml, this.tags);\n        switch (this.yaml.version) {\n            case '1.1':\n                this.atNextDocument = true;\n                break;\n            case '1.2':\n                this.atNextDocument = false;\n                this.yaml = {\n                    explicit: Directives.defaultYaml.explicit,\n                    version: '1.2'\n                };\n                this.tags = Object.assign({}, Directives.defaultTags);\n                break;\n        }\n        return res;\n    }\n    /**\n     * @param onError - May be called even if the action was successful\n     * @returns `true` on success\n     */\n    add(line, onError) {\n        if (this.atNextDocument) {\n            this.yaml = { explicit: Directives.defaultYaml.explicit, version: '1.1' };\n            this.tags = Object.assign({}, Directives.defaultTags);\n            this.atNextDocument = false;\n        }\n        const parts = line.trim().split(/[ \\t]+/);\n        const name = parts.shift();\n        switch (name) {\n            case '%TAG': {\n                if (parts.length !== 2) {\n                    onError(0, '%TAG directive should contain exactly two parts');\n                    if (parts.length < 2)\n                        return false;\n                }\n                const [handle, prefix] = parts;\n                this.tags[handle] = prefix;\n                return true;\n            }\n            case '%YAML': {\n                this.yaml.explicit = true;\n                if (parts.length !== 1) {\n                    onError(0, '%YAML directive should contain exactly one part');\n                    return false;\n                }\n                const [version] = parts;\n                if (version === '1.1' || version === '1.2') {\n                    this.yaml.version = version;\n                    return true;\n                }\n                else {\n                    const isValid = /^\\d+\\.\\d+$/.test(version);\n                    onError(6, `Unsupported YAML version ${version}`, isValid);\n                    return false;\n                }\n            }\n            default:\n                onError(0, `Unknown directive ${name}`, true);\n                return false;\n        }\n    }\n    /**\n     * Resolves a tag, matching handles to those defined in %TAG directives.\n     *\n     * @returns Resolved tag, which may also be the non-specific tag `'!'` or a\n     *   `'!local'` tag, or `null` if unresolvable.\n     */\n    tagName(source, onError) {\n        if (source === '!')\n            return '!'; // non-specific tag\n        if (source[0] !== '!') {\n            onError(`Not a valid tag: ${source}`);\n            return null;\n        }\n        if (source[1] === '<') {\n            const verbatim = source.slice(2, -1);\n            if (verbatim === '!' || verbatim === '!!') {\n                onError(`Verbatim tags aren't resolved, so ${source} is invalid.`);\n                return null;\n            }\n            if (source[source.length - 1] !== '>')\n                onError('Verbatim tags must end with a >');\n            return verbatim;\n        }\n        const [, handle, suffix] = source.match(/^(.*!)([^!]*)$/s);\n        if (!suffix)\n            onError(`The ${source} tag has no suffix`);\n        const prefix = this.tags[handle];\n        if (prefix) {\n            try {\n                return prefix + decodeURIComponent(suffix);\n            }\n            catch (error) {\n                onError(String(error));\n                return null;\n            }\n        }\n        if (handle === '!')\n            return source; // local tag\n        onError(`Could not resolve tag: ${source}`);\n        return null;\n    }\n    /**\n     * Given a fully resolved tag, returns its printable string form,\n     * taking into account current tag prefixes and defaults.\n     */\n    tagString(tag) {\n        for (const [handle, prefix] of Object.entries(this.tags)) {\n            if (tag.startsWith(prefix))\n                return handle + escapeTagName(tag.substring(prefix.length));\n        }\n        return tag[0] === '!' ? tag : `!<${tag}>`;\n    }\n    toString(doc) {\n        const lines = this.yaml.explicit\n            ? [`%YAML ${this.yaml.version || '1.2'}`]\n            : [];\n        const tagEntries = Object.entries(this.tags);\n        let tagNames;\n        if (doc && tagEntries.length > 0 && isNode(doc.contents)) {\n            const tags = {};\n            visit(doc.contents, (_key, node) => {\n                if (isNode(node) && node.tag)\n                    tags[node.tag] = true;\n            });\n            tagNames = Object.keys(tags);\n        }\n        else\n            tagNames = [];\n        for (const [handle, prefix] of tagEntries) {\n            if (handle === '!!' && prefix === 'tag:yaml.org,2002:')\n                continue;\n            if (!doc || tagNames.some(tn => tn.startsWith(prefix)))\n                lines.push(`%TAG ${handle} ${prefix}`);\n        }\n        return lines.join('\\n');\n    }\n}\nDirectives.defaultYaml = { explicit: false, version: '1.2' };\nDirectives.defaultTags = { '!!': 'tag:yaml.org,2002:' };\n\nexport { Directives };\n","import { isScalar, isCollection } from '../nodes/identity.js';\nimport { visit } from '../visit.js';\n\n/**\n * Verify that the input string is a valid anchor.\n *\n * Will throw on errors.\n */\nfunction anchorIsValid(anchor) {\n    if (/[\\x00-\\x19\\s,[\\]{}]/.test(anchor)) {\n        const sa = JSON.stringify(anchor);\n        const msg = `Anchor must not contain whitespace or control characters: ${sa}`;\n        throw new Error(msg);\n    }\n    return true;\n}\nfunction anchorNames(root) {\n    const anchors = new Set();\n    visit(root, {\n        Value(_key, node) {\n            if (node.anchor)\n                anchors.add(node.anchor);\n        }\n    });\n    return anchors;\n}\n/** Find a new anchor name with the given `prefix` and a one-indexed suffix. */\nfunction findNewAnchor(prefix, exclude) {\n    for (let i = 1; true; ++i) {\n        const name = `${prefix}${i}`;\n        if (!exclude.has(name))\n            return name;\n    }\n}\nfunction createNodeAnchors(doc, prefix) {\n    const aliasObjects = [];\n    const sourceObjects = new Map();\n    let prevAnchors = null;\n    return {\n        onAnchor: (source) => {\n            aliasObjects.push(source);\n            if (!prevAnchors)\n                prevAnchors = anchorNames(doc);\n            const anchor = findNewAnchor(prefix, prevAnchors);\n            prevAnchors.add(anchor);\n            return anchor;\n        },\n        /**\n         * With circular references, the source node is only resolved after all\n         * of its child nodes are. This is why anchors are set only after all of\n         * the nodes have been created.\n         */\n        setAnchors: () => {\n            for (const source of aliasObjects) {\n                const ref = sourceObjects.get(source);\n                if (typeof ref === 'object' &&\n                    ref.anchor &&\n                    (isScalar(ref.node) || isCollection(ref.node))) {\n                    ref.node.anchor = ref.anchor;\n                }\n                else {\n                    const error = new Error('Failed to resolve repeated object (this should not happen)');\n                    error.source = source;\n                    throw error;\n                }\n            }\n        },\n        sourceObjects\n    };\n}\n\nexport { anchorIsValid, anchorNames, createNodeAnchors, findNewAnchor };\n","/**\n * Applies the JSON.parse reviver algorithm as defined in the ECMA-262 spec,\n * in section 24.5.1.1 \"Runtime Semantics: InternalizeJSONProperty\" of the\n * 2021 edition: https://tc39.es/ecma262/#sec-json.parse\n *\n * Includes extensions for handling Map and Set objects.\n */\nfunction applyReviver(reviver, obj, key, val) {\n    if (val && typeof val === 'object') {\n        if (Array.isArray(val)) {\n            for (let i = 0, len = val.length; i < len; ++i) {\n                const v0 = val[i];\n                const v1 = applyReviver(reviver, val, String(i), v0);\n                if (v1 === undefined)\n                    delete val[i];\n                else if (v1 !== v0)\n                    val[i] = v1;\n            }\n        }\n        else if (val instanceof Map) {\n            for (const k of Array.from(val.keys())) {\n                const v0 = val.get(k);\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    val.delete(k);\n                else if (v1 !== v0)\n                    val.set(k, v1);\n            }\n        }\n        else if (val instanceof Set) {\n            for (const v0 of Array.from(val)) {\n                const v1 = applyReviver(reviver, val, v0, v0);\n                if (v1 === undefined)\n                    val.delete(v0);\n                else if (v1 !== v0) {\n                    val.delete(v0);\n                    val.add(v1);\n                }\n            }\n        }\n        else {\n            for (const [k, v0] of Object.entries(val)) {\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    delete val[k];\n                else if (v1 !== v0)\n                    val[k] = v1;\n            }\n        }\n    }\n    return reviver.call(obj, key, val);\n}\n\nexport { applyReviver };\n","import { hasAnchor } from './identity.js';\n\n/**\n * Recursively convert any node or its contents to native JavaScript\n *\n * @param value - The input value\n * @param arg - If `value` defines a `toJSON()` method, use this\n *   as its first argument\n * @param ctx - Conversion context, originally set in Document#toJS(). If\n *   `{ keep: true }` is not set, output should be suitable for JSON\n *   stringification.\n */\nfunction toJS(value, arg, ctx) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    if (Array.isArray(value))\n        return value.map((v, i) => toJS(v, String(i), ctx));\n    if (value && typeof value.toJSON === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        if (!ctx || !hasAnchor(value))\n            return value.toJSON(arg, ctx);\n        const data = { aliasCount: 0, count: 1, res: undefined };\n        ctx.anchors.set(value, data);\n        ctx.onCreate = res => {\n            data.res = res;\n            delete ctx.onCreate;\n        };\n        const res = value.toJSON(arg, ctx);\n        if (ctx.onCreate)\n            ctx.onCreate(res);\n        return res;\n    }\n    if (typeof value === 'bigint' && !ctx?.keep)\n        return Number(value);\n    return value;\n}\n\nexport { toJS };\n","import { applyReviver } from '../doc/applyReviver.js';\nimport { NODE_TYPE, isDocument } from './identity.js';\nimport { toJS } from './toJS.js';\n\nclass NodeBase {\n    constructor(type) {\n        Object.defineProperty(this, NODE_TYPE, { value: type });\n    }\n    /** Create a copy of this node.  */\n    clone() {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** A plain JavaScript representation of this node. */\n    toJS(doc, { mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        if (!isDocument(doc))\n            throw new TypeError('A document argument is required');\n        const ctx = {\n            anchors: new Map(),\n            doc,\n            keep: true,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = toJS(this, '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n}\n\nexport { NodeBase };\n","import { anchorIsValid } from '../doc/anchors.js';\nimport { visit } from '../visit.js';\nimport { ALIAS, isAlias, isCollection, isPair } from './identity.js';\nimport { NodeBase } from './Node.js';\nimport { toJS } from './toJS.js';\n\nclass Alias extends NodeBase {\n    constructor(source) {\n        super(ALIAS);\n        this.source = source;\n        Object.defineProperty(this, 'tag', {\n            set() {\n                throw new Error('Alias nodes cannot have tags');\n            }\n        });\n    }\n    /**\n     * Resolve the value of this alias within `doc`, finding the last\n     * instance of the `source` anchor before this node.\n     */\n    resolve(doc) {\n        let found = undefined;\n        visit(doc, {\n            Node: (_key, node) => {\n                if (node === this)\n                    return visit.BREAK;\n                if (node.anchor === this.source)\n                    found = node;\n            }\n        });\n        return found;\n    }\n    toJSON(_arg, ctx) {\n        if (!ctx)\n            return { source: this.source };\n        const { anchors, doc, maxAliasCount } = ctx;\n        const source = this.resolve(doc);\n        if (!source) {\n            const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n            throw new ReferenceError(msg);\n        }\n        let data = anchors.get(source);\n        if (!data) {\n            // Resolve anchors for Node.prototype.toJS()\n            toJS(source, null, ctx);\n            data = anchors.get(source);\n        }\n        /* istanbul ignore if */\n        if (!data || data.res === undefined) {\n            const msg = 'This should not happen: Alias anchor was not resolved?';\n            throw new ReferenceError(msg);\n        }\n        if (maxAliasCount >= 0) {\n            data.count += 1;\n            if (data.aliasCount === 0)\n                data.aliasCount = getAliasCount(doc, source, anchors);\n            if (data.count * data.aliasCount > maxAliasCount) {\n                const msg = 'Excessive alias count indicates a resource exhaustion attack';\n                throw new ReferenceError(msg);\n            }\n        }\n        return data.res;\n    }\n    toString(ctx, _onComment, _onChompKeep) {\n        const src = `*${this.source}`;\n        if (ctx) {\n            anchorIsValid(this.source);\n            if (ctx.options.verifyAliasOrder && !ctx.anchors.has(this.source)) {\n                const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n                throw new Error(msg);\n            }\n            if (ctx.implicitKey)\n                return `${src} `;\n        }\n        return src;\n    }\n}\nfunction getAliasCount(doc, node, anchors) {\n    if (isAlias(node)) {\n        const source = node.resolve(doc);\n        const anchor = anchors && source && anchors.get(source);\n        return anchor ? anchor.count * anchor.aliasCount : 0;\n    }\n    else if (isCollection(node)) {\n        let count = 0;\n        for (const item of node.items) {\n            const c = getAliasCount(doc, item, anchors);\n            if (c > count)\n                count = c;\n        }\n        return count;\n    }\n    else if (isPair(node)) {\n        const kc = getAliasCount(doc, node.key, anchors);\n        const vc = getAliasCount(doc, node.value, anchors);\n        return Math.max(kc, vc);\n    }\n    return 1;\n}\n\nexport { Alias };\n","import { SCALAR } from './identity.js';\nimport { NodeBase } from './Node.js';\nimport { toJS } from './toJS.js';\n\nconst isScalarValue = (value) => !value || (typeof value !== 'function' && typeof value !== 'object');\nclass Scalar extends NodeBase {\n    constructor(value) {\n        super(SCALAR);\n        this.value = value;\n    }\n    toJSON(arg, ctx) {\n        return ctx?.keep ? this.value : toJS(this.value, arg, ctx);\n    }\n    toString() {\n        return String(this.value);\n    }\n}\nScalar.BLOCK_FOLDED = 'BLOCK_FOLDED';\nScalar.BLOCK_LITERAL = 'BLOCK_LITERAL';\nScalar.PLAIN = 'PLAIN';\nScalar.QUOTE_DOUBLE = 'QUOTE_DOUBLE';\nScalar.QUOTE_SINGLE = 'QUOTE_SINGLE';\n\nexport { Scalar, isScalarValue };\n","import { Alias } from '../nodes/Alias.js';\nimport { isNode, isPair, MAP, SEQ, isDocument } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\n\nconst defaultTagPrefix = 'tag:yaml.org,2002:';\nfunction findTagObject(value, tagName, tags) {\n    if (tagName) {\n        const match = tags.filter(t => t.tag === tagName);\n        const tagObj = match.find(t => !t.format) ?? match[0];\n        if (!tagObj)\n            throw new Error(`Tag ${tagName} not found`);\n        return tagObj;\n    }\n    return tags.find(t => t.identify?.(value) && !t.format);\n}\nfunction createNode(value, tagName, ctx) {\n    if (isDocument(value))\n        value = value.contents;\n    if (isNode(value))\n        return value;\n    if (isPair(value)) {\n        const map = ctx.schema[MAP].createNode?.(ctx.schema, null, ctx);\n        map.items.push(value);\n        return map;\n    }\n    if (value instanceof String ||\n        value instanceof Number ||\n        value instanceof Boolean ||\n        (typeof BigInt !== 'undefined' && value instanceof BigInt) // not supported everywhere\n    ) {\n        // https://tc39.es/ecma262/#sec-serializejsonproperty\n        value = value.valueOf();\n    }\n    const { aliasDuplicateObjects, onAnchor, onTagObj, schema, sourceObjects } = ctx;\n    // Detect duplicate references to the same object & use Alias nodes for all\n    // after first. The `ref` wrapper allows for circular references to resolve.\n    let ref = undefined;\n    if (aliasDuplicateObjects && value && typeof value === 'object') {\n        ref = sourceObjects.get(value);\n        if (ref) {\n            if (!ref.anchor)\n                ref.anchor = onAnchor(value);\n            return new Alias(ref.anchor);\n        }\n        else {\n            ref = { anchor: null, node: null };\n            sourceObjects.set(value, ref);\n        }\n    }\n    if (tagName?.startsWith('!!'))\n        tagName = defaultTagPrefix + tagName.slice(2);\n    let tagObj = findTagObject(value, tagName, schema.tags);\n    if (!tagObj) {\n        if (value && typeof value.toJSON === 'function') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            value = value.toJSON();\n        }\n        if (!value || typeof value !== 'object') {\n            const node = new Scalar(value);\n            if (ref)\n                ref.node = node;\n            return node;\n        }\n        tagObj =\n            value instanceof Map\n                ? schema[MAP]\n                : Symbol.iterator in Object(value)\n                    ? schema[SEQ]\n                    : schema[MAP];\n    }\n    if (onTagObj) {\n        onTagObj(tagObj);\n        delete ctx.onTagObj;\n    }\n    const node = tagObj?.createNode\n        ? tagObj.createNode(ctx.schema, value, ctx)\n        : typeof tagObj?.nodeClass?.from === 'function'\n            ? tagObj.nodeClass.from(ctx.schema, value, ctx)\n            : new Scalar(value);\n    if (tagName)\n        node.tag = tagName;\n    else if (!tagObj.default)\n        node.tag = tagObj.tag;\n    if (ref)\n        ref.node = node;\n    return node;\n}\n\nexport { createNode };\n","import { createNode } from '../doc/createNode.js';\nimport { isNode, isPair, isCollection, isScalar } from './identity.js';\nimport { NodeBase } from './Node.js';\n\nfunction collectionFromPath(schema, path, value) {\n    let v = value;\n    for (let i = path.length - 1; i >= 0; --i) {\n        const k = path[i];\n        if (typeof k === 'number' && Number.isInteger(k) && k >= 0) {\n            const a = [];\n            a[k] = v;\n            v = a;\n        }\n        else {\n            v = new Map([[k, v]]);\n        }\n    }\n    return createNode(v, undefined, {\n        aliasDuplicateObjects: false,\n        keepUndefined: false,\n        onAnchor: () => {\n            throw new Error('This should not happen, please report a bug.');\n        },\n        schema,\n        sourceObjects: new Map()\n    });\n}\n// Type guard is intentionally a little wrong so as to be more useful,\n// as it does not cover untypable empty non-string iterables (e.g. []).\nconst isEmptyPath = (path) => path == null ||\n    (typeof path === 'object' && !!path[Symbol.iterator]().next().done);\nclass Collection extends NodeBase {\n    constructor(type, schema) {\n        super(type);\n        Object.defineProperty(this, 'schema', {\n            value: schema,\n            configurable: true,\n            enumerable: false,\n            writable: true\n        });\n    }\n    /**\n     * Create a copy of this collection.\n     *\n     * @param schema - If defined, overwrites the original's schema\n     */\n    clone(schema) {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (schema)\n            copy.schema = schema;\n        copy.items = copy.items.map(it => isNode(it) || isPair(it) ? it.clone(schema) : it);\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /**\n     * Adds a value to the collection. For `!!map` and `!!omap` the value must\n     * be a Pair instance or a `{ key, value }` object, which may not have a key\n     * that already exists in the map.\n     */\n    addIn(path, value) {\n        if (isEmptyPath(path))\n            this.add(value);\n        else {\n            const [key, ...rest] = path;\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.addIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n    /**\n     * Removes a value from the collection.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.delete(key);\n        const node = this.get(key, true);\n        if (isCollection(node))\n            return node.deleteIn(rest);\n        else\n            throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        const [key, ...rest] = path;\n        const node = this.get(key, true);\n        if (rest.length === 0)\n            return !keepScalar && isScalar(node) ? node.value : node;\n        else\n            return isCollection(node) ? node.getIn(rest, keepScalar) : undefined;\n    }\n    hasAllNullValues(allowScalar) {\n        return this.items.every(node => {\n            if (!isPair(node))\n                return false;\n            const n = node.value;\n            return (n == null ||\n                (allowScalar &&\n                    isScalar(n) &&\n                    n.value == null &&\n                    !n.commentBefore &&\n                    !n.comment &&\n                    !n.tag));\n        });\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     */\n    hasIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.has(key);\n        const node = this.get(key, true);\n        return isCollection(node) ? node.hasIn(rest) : false;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        const [key, ...rest] = path;\n        if (rest.length === 0) {\n            this.set(key, value);\n        }\n        else {\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.setIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n}\nCollection.maxFlowStringSingleLineLength = 60;\n\nexport { Collection, collectionFromPath, isEmptyPath };\n","/**\n * Stringifies a comment.\n *\n * Empty comment lines are left empty,\n * lines consisting of a single space are replaced by `#`,\n * and all other lines are prefixed with a `#`.\n */\nconst stringifyComment = (str) => str.replace(/^(?!$)(?: $)?/gm, '#');\nfunction indentComment(comment, indent) {\n    if (/^\\n+$/.test(comment))\n        return comment.substring(1);\n    return indent ? comment.replace(/^(?! *$)/gm, indent) : comment;\n}\nconst lineComment = (str, indent, comment) => str.endsWith('\\n')\n    ? indentComment(comment, indent)\n    : comment.includes('\\n')\n        ? '\\n' + indentComment(comment, indent)\n        : (str.endsWith(' ') ? '' : ' ') + comment;\n\nexport { indentComment, lineComment, stringifyComment };\n","const FOLD_FLOW = 'flow';\nconst FOLD_BLOCK = 'block';\nconst FOLD_QUOTED = 'quoted';\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n */\nfunction foldFlowLines(text, indent, mode = 'flow', { indentAtStart, lineWidth = 80, minContentWidth = 20, onFold, onOverflow } = {}) {\n    if (!lineWidth || lineWidth < 0)\n        return text;\n    const endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);\n    if (text.length <= endStep)\n        return text;\n    const folds = [];\n    const escapedFolds = {};\n    let end = lineWidth - indent.length;\n    if (typeof indentAtStart === 'number') {\n        if (indentAtStart > lineWidth - Math.max(2, minContentWidth))\n            folds.push(0);\n        else\n            end = lineWidth - indentAtStart;\n    }\n    let split = undefined;\n    let prev = undefined;\n    let overflow = false;\n    let i = -1;\n    let escStart = -1;\n    let escEnd = -1;\n    if (mode === FOLD_BLOCK) {\n        i = consumeMoreIndentedLines(text, i, indent.length);\n        if (i !== -1)\n            end = i + endStep;\n    }\n    for (let ch; (ch = text[(i += 1)]);) {\n        if (mode === FOLD_QUOTED && ch === '\\\\') {\n            escStart = i;\n            switch (text[i + 1]) {\n                case 'x':\n                    i += 3;\n                    break;\n                case 'u':\n                    i += 5;\n                    break;\n                case 'U':\n                    i += 9;\n                    break;\n                default:\n                    i += 1;\n            }\n            escEnd = i;\n        }\n        if (ch === '\\n') {\n            if (mode === FOLD_BLOCK)\n                i = consumeMoreIndentedLines(text, i, indent.length);\n            end = i + indent.length + endStep;\n            split = undefined;\n        }\n        else {\n            if (ch === ' ' &&\n                prev &&\n                prev !== ' ' &&\n                prev !== '\\n' &&\n                prev !== '\\t') {\n                // space surrounded by non-space can be replaced with newline + indent\n                const next = text[i + 1];\n                if (next && next !== ' ' && next !== '\\n' && next !== '\\t')\n                    split = i;\n            }\n            if (i >= end) {\n                if (split) {\n                    folds.push(split);\n                    end = split + endStep;\n                    split = undefined;\n                }\n                else if (mode === FOLD_QUOTED) {\n                    // white-space collected at end may stretch past lineWidth\n                    while (prev === ' ' || prev === '\\t') {\n                        prev = ch;\n                        ch = text[(i += 1)];\n                        overflow = true;\n                    }\n                    // Account for newline escape, but don't break preceding escape\n                    const j = i > escEnd + 1 ? i - 2 : escStart - 1;\n                    // Bail out if lineWidth & minContentWidth are shorter than an escape string\n                    if (escapedFolds[j])\n                        return text;\n                    folds.push(j);\n                    escapedFolds[j] = true;\n                    end = j + endStep;\n                    split = undefined;\n                }\n                else {\n                    overflow = true;\n                }\n            }\n        }\n        prev = ch;\n    }\n    if (overflow && onOverflow)\n        onOverflow();\n    if (folds.length === 0)\n        return text;\n    if (onFold)\n        onFold();\n    let res = text.slice(0, folds[0]);\n    for (let i = 0; i < folds.length; ++i) {\n        const fold = folds[i];\n        const end = folds[i + 1] || text.length;\n        if (fold === 0)\n            res = `\\n${indent}${text.slice(0, end)}`;\n        else {\n            if (mode === FOLD_QUOTED && escapedFolds[fold])\n                res += `${text[fold]}\\\\`;\n            res += `\\n${indent}${text.slice(fold + 1, end)}`;\n        }\n    }\n    return res;\n}\n/**\n * Presumes `i + 1` is at the start of a line\n * @returns index of last newline in more-indented block\n */\nfunction consumeMoreIndentedLines(text, i, indent) {\n    let end = i;\n    let start = i + 1;\n    let ch = text[start];\n    while (ch === ' ' || ch === '\\t') {\n        if (i < start + indent) {\n            ch = text[++i];\n        }\n        else {\n            do {\n                ch = text[++i];\n            } while (ch && ch !== '\\n');\n            end = i;\n            start = i + 1;\n            ch = text[start];\n        }\n    }\n    return end;\n}\n\nexport { FOLD_BLOCK, FOLD_FLOW, FOLD_QUOTED, foldFlowLines };\n","import { Scalar } from '../nodes/Scalar.js';\nimport { foldFlowLines, FOLD_QUOTED, FOLD_FLOW, FOLD_BLOCK } from './foldFlowLines.js';\n\nconst getFoldOptions = (ctx, isBlock) => ({\n    indentAtStart: isBlock ? ctx.indent.length : ctx.indentAtStart,\n    lineWidth: ctx.options.lineWidth,\n    minContentWidth: ctx.options.minContentWidth\n});\n// Also checks for lines starting with %, as parsing the output as YAML 1.1 will\n// presume that's starting a new document.\nconst containsDocumentMarker = (str) => /^(%|---|\\.\\.\\.)/m.test(str);\nfunction lineLengthOverLimit(str, lineWidth, indentLength) {\n    if (!lineWidth || lineWidth < 0)\n        return false;\n    const limit = lineWidth - indentLength;\n    const strLen = str.length;\n    if (strLen <= limit)\n        return false;\n    for (let i = 0, start = 0; i < strLen; ++i) {\n        if (str[i] === '\\n') {\n            if (i - start > limit)\n                return true;\n            start = i + 1;\n            if (strLen - start <= limit)\n                return false;\n        }\n    }\n    return true;\n}\nfunction doubleQuotedString(value, ctx) {\n    const json = JSON.stringify(value);\n    if (ctx.options.doubleQuotedAsJSON)\n        return json;\n    const { implicitKey } = ctx;\n    const minMultiLineLength = ctx.options.doubleQuotedMinMultiLineLength;\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    let str = '';\n    let start = 0;\n    for (let i = 0, ch = json[i]; ch; ch = json[++i]) {\n        if (ch === ' ' && json[i + 1] === '\\\\' && json[i + 2] === 'n') {\n            // space before newline needs to be escaped to not be folded\n            str += json.slice(start, i) + '\\\\ ';\n            i += 1;\n            start = i;\n            ch = '\\\\';\n        }\n        if (ch === '\\\\')\n            switch (json[i + 1]) {\n                case 'u':\n                    {\n                        str += json.slice(start, i);\n                        const code = json.substr(i + 2, 4);\n                        switch (code) {\n                            case '0000':\n                                str += '\\\\0';\n                                break;\n                            case '0007':\n                                str += '\\\\a';\n                                break;\n                            case '000b':\n                                str += '\\\\v';\n                                break;\n                            case '001b':\n                                str += '\\\\e';\n                                break;\n                            case '0085':\n                                str += '\\\\N';\n                                break;\n                            case '00a0':\n                                str += '\\\\_';\n                                break;\n                            case '2028':\n                                str += '\\\\L';\n                                break;\n                            case '2029':\n                                str += '\\\\P';\n                                break;\n                            default:\n                                if (code.substr(0, 2) === '00')\n                                    str += '\\\\x' + code.substr(2);\n                                else\n                                    str += json.substr(i, 6);\n                        }\n                        i += 5;\n                        start = i + 1;\n                    }\n                    break;\n                case 'n':\n                    if (implicitKey ||\n                        json[i + 2] === '\"' ||\n                        json.length < minMultiLineLength) {\n                        i += 1;\n                    }\n                    else {\n                        // folding will eat first newline\n                        str += json.slice(start, i) + '\\n\\n';\n                        while (json[i + 2] === '\\\\' &&\n                            json[i + 3] === 'n' &&\n                            json[i + 4] !== '\"') {\n                            str += '\\n';\n                            i += 2;\n                        }\n                        str += indent;\n                        // space after newline needs to be escaped to not be folded\n                        if (json[i + 2] === ' ')\n                            str += '\\\\';\n                        i += 1;\n                        start = i + 1;\n                    }\n                    break;\n                default:\n                    i += 1;\n            }\n    }\n    str = start ? str + json.slice(start) : json;\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_QUOTED, getFoldOptions(ctx, false));\n}\nfunction singleQuotedString(value, ctx) {\n    if (ctx.options.singleQuote === false ||\n        (ctx.implicitKey && value.includes('\\n')) ||\n        /[ \\t]\\n|\\n[ \\t]/.test(value) // single quoted string can't have leading or trailing whitespace around newline\n    )\n        return doubleQuotedString(value, ctx);\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    const res = \"'\" + value.replace(/'/g, \"''\").replace(/\\n+/g, `$&\\n${indent}`) + \"'\";\n    return ctx.implicitKey\n        ? res\n        : foldFlowLines(res, indent, FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction quotedString(value, ctx) {\n    const { singleQuote } = ctx.options;\n    let qs;\n    if (singleQuote === false)\n        qs = doubleQuotedString;\n    else {\n        const hasDouble = value.includes('\"');\n        const hasSingle = value.includes(\"'\");\n        if (hasDouble && !hasSingle)\n            qs = singleQuotedString;\n        else if (hasSingle && !hasDouble)\n            qs = doubleQuotedString;\n        else\n            qs = singleQuote ? singleQuotedString : doubleQuotedString;\n    }\n    return qs(value, ctx);\n}\n// The negative lookbehind avoids a polynomial search,\n// but isn't supported yet on Safari: https://caniuse.com/js-regexp-lookbehind\nlet blockEndNewlines;\ntry {\n    blockEndNewlines = new RegExp('(^|(?<!\\n))\\n+(?!\\n|$)', 'g');\n}\ncatch {\n    blockEndNewlines = /\\n+(?!\\n|$)/g;\n}\nfunction blockString({ comment, type, value }, ctx, onComment, onChompKeep) {\n    const { blockQuote, commentString, lineWidth } = ctx.options;\n    // 1. Block can't end in whitespace unless the last line is non-empty.\n    // 2. Strings consisting of only whitespace are best rendered explicitly.\n    if (!blockQuote || /\\n[\\t ]+$/.test(value) || /^\\s*$/.test(value)) {\n        return quotedString(value, ctx);\n    }\n    const indent = ctx.indent ||\n        (ctx.forceBlockIndent || containsDocumentMarker(value) ? '  ' : '');\n    const literal = blockQuote === 'literal'\n        ? true\n        : blockQuote === 'folded' || type === Scalar.BLOCK_FOLDED\n            ? false\n            : type === Scalar.BLOCK_LITERAL\n                ? true\n                : !lineLengthOverLimit(value, lineWidth, indent.length);\n    if (!value)\n        return literal ? '|\\n' : '>\\n';\n    // determine chomping from whitespace at value end\n    let chomp;\n    let endStart;\n    for (endStart = value.length; endStart > 0; --endStart) {\n        const ch = value[endStart - 1];\n        if (ch !== '\\n' && ch !== '\\t' && ch !== ' ')\n            break;\n    }\n    let end = value.substring(endStart);\n    const endNlPos = end.indexOf('\\n');\n    if (endNlPos === -1) {\n        chomp = '-'; // strip\n    }\n    else if (value === end || endNlPos !== end.length - 1) {\n        chomp = '+'; // keep\n        if (onChompKeep)\n            onChompKeep();\n    }\n    else {\n        chomp = ''; // clip\n    }\n    if (end) {\n        value = value.slice(0, -end.length);\n        if (end[end.length - 1] === '\\n')\n            end = end.slice(0, -1);\n        end = end.replace(blockEndNewlines, `$&${indent}`);\n    }\n    // determine indent indicator from whitespace at value start\n    let startWithSpace = false;\n    let startEnd;\n    let startNlPos = -1;\n    for (startEnd = 0; startEnd < value.length; ++startEnd) {\n        const ch = value[startEnd];\n        if (ch === ' ')\n            startWithSpace = true;\n        else if (ch === '\\n')\n            startNlPos = startEnd;\n        else\n            break;\n    }\n    let start = value.substring(0, startNlPos < startEnd ? startNlPos + 1 : startEnd);\n    if (start) {\n        value = value.substring(start.length);\n        start = start.replace(/\\n+/g, `$&${indent}`);\n    }\n    const indentSize = indent ? '2' : '1'; // root is at -1\n    let header = (literal ? '|' : '>') + (startWithSpace ? indentSize : '') + chomp;\n    if (comment) {\n        header += ' ' + commentString(comment.replace(/ ?[\\r\\n]+/g, ' '));\n        if (onComment)\n            onComment();\n    }\n    if (literal) {\n        value = value.replace(/\\n+/g, `$&${indent}`);\n        return `${header}\\n${indent}${start}${value}${end}`;\n    }\n    value = value\n        .replace(/\\n+/g, '\\n$&')\n        .replace(/(?:^|\\n)([\\t ].*)(?:([\\n\\t ]*)\\n(?![\\n\\t ]))?/g, '$1$2') // more-indented lines aren't folded\n        //                ^ more-ind. ^ empty     ^ capture next empty lines only at end of indent\n        .replace(/\\n+/g, `$&${indent}`);\n    const body = foldFlowLines(`${start}${value}${end}`, indent, FOLD_BLOCK, getFoldOptions(ctx, true));\n    return `${header}\\n${indent}${body}`;\n}\nfunction plainString(item, ctx, onComment, onChompKeep) {\n    const { type, value } = item;\n    const { actualString, implicitKey, indent, indentStep, inFlow } = ctx;\n    if ((implicitKey && value.includes('\\n')) ||\n        (inFlow && /[[\\]{},]/.test(value))) {\n        return quotedString(value, ctx);\n    }\n    if (!value ||\n        /^[\\n\\t ,[\\]{}#&*!|>'\"%@`]|^[?-]$|^[?-][ \\t]|[\\n:][ \\t]|[ \\t]\\n|[\\n\\t ]#|[\\n\\t :]$/.test(value)) {\n        // not allowed:\n        // - empty string, '-' or '?'\n        // - start with an indicator character (except [?:-]) or /[?-] /\n        // - '\\n ', ': ' or ' \\n' anywhere\n        // - '#' not preceded by a non-space char\n        // - end with ' ' or ':'\n        return implicitKey || inFlow || !value.includes('\\n')\n            ? quotedString(value, ctx)\n            : blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (!implicitKey &&\n        !inFlow &&\n        type !== Scalar.PLAIN &&\n        value.includes('\\n')) {\n        // Where allowed & type not set explicitly, prefer block style for multiline strings\n        return blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (containsDocumentMarker(value)) {\n        if (indent === '') {\n            ctx.forceBlockIndent = true;\n            return blockString(item, ctx, onComment, onChompKeep);\n        }\n        else if (implicitKey && indent === indentStep) {\n            return quotedString(value, ctx);\n        }\n    }\n    const str = value.replace(/\\n+/g, `$&\\n${indent}`);\n    // Verify that output will be parsed as a string, as e.g. plain numbers and\n    // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),\n    // and others in v1.1.\n    if (actualString) {\n        const test = (tag) => tag.default && tag.tag !== 'tag:yaml.org,2002:str' && tag.test?.test(str);\n        const { compat, tags } = ctx.doc.schema;\n        if (tags.some(test) || compat?.some(test))\n            return quotedString(value, ctx);\n    }\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction stringifyString(item, ctx, onComment, onChompKeep) {\n    const { implicitKey, inFlow } = ctx;\n    const ss = typeof item.value === 'string'\n        ? item\n        : Object.assign({}, item, { value: String(item.value) });\n    let { type } = item;\n    if (type !== Scalar.QUOTE_DOUBLE) {\n        // force double quotes on control characters & unpaired surrogates\n        if (/[\\x00-\\x08\\x0b-\\x1f\\x7f-\\x9f\\u{D800}-\\u{DFFF}]/u.test(ss.value))\n            type = Scalar.QUOTE_DOUBLE;\n    }\n    const _stringify = (_type) => {\n        switch (_type) {\n            case Scalar.BLOCK_FOLDED:\n            case Scalar.BLOCK_LITERAL:\n                return implicitKey || inFlow\n                    ? quotedString(ss.value, ctx) // blocks are not valid inside flow containers\n                    : blockString(ss, ctx, onComment, onChompKeep);\n            case Scalar.QUOTE_DOUBLE:\n                return doubleQuotedString(ss.value, ctx);\n            case Scalar.QUOTE_SINGLE:\n                return singleQuotedString(ss.value, ctx);\n            case Scalar.PLAIN:\n                return plainString(ss, ctx, onComment, onChompKeep);\n            default:\n                return null;\n        }\n    };\n    let res = _stringify(type);\n    if (res === null) {\n        const { defaultKeyType, defaultStringType } = ctx.options;\n        const t = (implicitKey && defaultKeyType) || defaultStringType;\n        res = _stringify(t);\n        if (res === null)\n            throw new Error(`Unsupported default string type ${t}`);\n    }\n    return res;\n}\n\nexport { stringifyString };\n","import { anchorIsValid } from '../doc/anchors.js';\nimport { isPair, isAlias, isNode, isScalar, isCollection } from '../nodes/identity.js';\nimport { stringifyComment } from './stringifyComment.js';\nimport { stringifyString } from './stringifyString.js';\n\nfunction createStringifyContext(doc, options) {\n    const opt = Object.assign({\n        blockQuote: true,\n        commentString: stringifyComment,\n        defaultKeyType: null,\n        defaultStringType: 'PLAIN',\n        directives: null,\n        doubleQuotedAsJSON: false,\n        doubleQuotedMinMultiLineLength: 40,\n        falseStr: 'false',\n        flowCollectionPadding: true,\n        indentSeq: true,\n        lineWidth: 80,\n        minContentWidth: 20,\n        nullStr: 'null',\n        simpleKeys: false,\n        singleQuote: null,\n        trueStr: 'true',\n        verifyAliasOrder: true\n    }, doc.schema.toStringOptions, options);\n    let inFlow;\n    switch (opt.collectionStyle) {\n        case 'block':\n            inFlow = false;\n            break;\n        case 'flow':\n            inFlow = true;\n            break;\n        default:\n            inFlow = null;\n    }\n    return {\n        anchors: new Set(),\n        doc,\n        flowCollectionPadding: opt.flowCollectionPadding ? ' ' : '',\n        indent: '',\n        indentStep: typeof opt.indent === 'number' ? ' '.repeat(opt.indent) : '  ',\n        inFlow,\n        options: opt\n    };\n}\nfunction getTagObject(tags, item) {\n    if (item.tag) {\n        const match = tags.filter(t => t.tag === item.tag);\n        if (match.length > 0)\n            return match.find(t => t.format === item.format) ?? match[0];\n    }\n    let tagObj = undefined;\n    let obj;\n    if (isScalar(item)) {\n        obj = item.value;\n        const match = tags.filter(t => t.identify?.(obj));\n        tagObj =\n            match.find(t => t.format === item.format) ?? match.find(t => !t.format);\n    }\n    else {\n        obj = item;\n        tagObj = tags.find(t => t.nodeClass && obj instanceof t.nodeClass);\n    }\n    if (!tagObj) {\n        const name = obj?.constructor?.name ?? typeof obj;\n        throw new Error(`Tag not resolved for ${name} value`);\n    }\n    return tagObj;\n}\n// needs to be called before value stringifier to allow for circular anchor refs\nfunction stringifyProps(node, tagObj, { anchors, doc }) {\n    if (!doc.directives)\n        return '';\n    const props = [];\n    const anchor = (isScalar(node) || isCollection(node)) && node.anchor;\n    if (anchor && anchorIsValid(anchor)) {\n        anchors.add(anchor);\n        props.push(`&${anchor}`);\n    }\n    const tag = node.tag ? node.tag : tagObj.default ? null : tagObj.tag;\n    if (tag)\n        props.push(doc.directives.tagString(tag));\n    return props.join(' ');\n}\nfunction stringify(item, ctx, onComment, onChompKeep) {\n    if (isPair(item))\n        return item.toString(ctx, onComment, onChompKeep);\n    if (isAlias(item)) {\n        if (ctx.doc.directives)\n            return item.toString(ctx);\n        if (ctx.resolvedAliases?.has(item)) {\n            throw new TypeError(`Cannot stringify circular structure without alias nodes`);\n        }\n        else {\n            if (ctx.resolvedAliases)\n                ctx.resolvedAliases.add(item);\n            else\n                ctx.resolvedAliases = new Set([item]);\n            item = item.resolve(ctx.doc);\n        }\n    }\n    let tagObj = undefined;\n    const node = isNode(item)\n        ? item\n        : ctx.doc.createNode(item, { onTagObj: o => (tagObj = o) });\n    if (!tagObj)\n        tagObj = getTagObject(ctx.doc.schema.tags, node);\n    const props = stringifyProps(node, tagObj, ctx);\n    if (props.length > 0)\n        ctx.indentAtStart = (ctx.indentAtStart ?? 0) + props.length + 1;\n    const str = typeof tagObj.stringify === 'function'\n        ? tagObj.stringify(node, ctx, onComment, onChompKeep)\n        : isScalar(node)\n            ? stringifyString(node, ctx, onComment, onChompKeep)\n            : node.toString(ctx, onComment, onChompKeep);\n    if (!props)\n        return str;\n    return isScalar(node) || str[0] === '{' || str[0] === '['\n        ? `${props} ${str}`\n        : `${props}\\n${ctx.indent}${str}`;\n}\n\nexport { createStringifyContext, stringify };\n","import { isCollection, isNode, isScalar, isSeq } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyPair({ key, value }, ctx, onComment, onChompKeep) {\n    const { allNullValues, doc, indent, indentStep, options: { commentString, indentSeq, simpleKeys } } = ctx;\n    let keyComment = (isNode(key) && key.comment) || null;\n    if (simpleKeys) {\n        if (keyComment) {\n            throw new Error('With simple keys, key nodes cannot have comments');\n        }\n        if (isCollection(key)) {\n            const msg = 'With simple keys, collection cannot be used as a key value';\n            throw new Error(msg);\n        }\n    }\n    let explicitKey = !simpleKeys &&\n        (!key ||\n            (keyComment && value == null && !ctx.inFlow) ||\n            isCollection(key) ||\n            (isScalar(key)\n                ? key.type === Scalar.BLOCK_FOLDED || key.type === Scalar.BLOCK_LITERAL\n                : typeof key === 'object'));\n    ctx = Object.assign({}, ctx, {\n        allNullValues: false,\n        implicitKey: !explicitKey && (simpleKeys || !allNullValues),\n        indent: indent + indentStep\n    });\n    let keyCommentDone = false;\n    let chompKeep = false;\n    let str = stringify(key, ctx, () => (keyCommentDone = true), () => (chompKeep = true));\n    if (!explicitKey && !ctx.inFlow && str.length > 1024) {\n        if (simpleKeys)\n            throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n        explicitKey = true;\n    }\n    if (ctx.inFlow) {\n        if (allNullValues || value == null) {\n            if (keyCommentDone && onComment)\n                onComment();\n            return str === '' ? '?' : explicitKey ? `? ${str}` : str;\n        }\n    }\n    else if ((allNullValues && !simpleKeys) || (value == null && explicitKey)) {\n        str = `? ${str}`;\n        if (keyComment && !keyCommentDone) {\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        }\n        else if (chompKeep && onChompKeep)\n            onChompKeep();\n        return str;\n    }\n    if (keyCommentDone)\n        keyComment = null;\n    if (explicitKey) {\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        str = `? ${str}\\n${indent}:`;\n    }\n    else {\n        str = `${str}:`;\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n    }\n    let vsb, vcb, valueComment;\n    if (isNode(value)) {\n        vsb = !!value.spaceBefore;\n        vcb = value.commentBefore;\n        valueComment = value.comment;\n    }\n    else {\n        vsb = false;\n        vcb = null;\n        valueComment = null;\n        if (value && typeof value === 'object')\n            value = doc.createNode(value);\n    }\n    ctx.implicitKey = false;\n    if (!explicitKey && !keyComment && isScalar(value))\n        ctx.indentAtStart = str.length + 1;\n    chompKeep = false;\n    if (!indentSeq &&\n        indentStep.length >= 2 &&\n        !ctx.inFlow &&\n        !explicitKey &&\n        isSeq(value) &&\n        !value.flow &&\n        !value.tag &&\n        !value.anchor) {\n        // If indentSeq === false, consider '- ' as part of indentation where possible\n        ctx.indent = ctx.indent.substring(2);\n    }\n    let valueCommentDone = false;\n    const valueStr = stringify(value, ctx, () => (valueCommentDone = true), () => (chompKeep = true));\n    let ws = ' ';\n    if (keyComment || vsb || vcb) {\n        ws = vsb ? '\\n' : '';\n        if (vcb) {\n            const cs = commentString(vcb);\n            ws += `\\n${indentComment(cs, ctx.indent)}`;\n        }\n        if (valueStr === '' && !ctx.inFlow) {\n            if (ws === '\\n')\n                ws = '\\n\\n';\n        }\n        else {\n            ws += `\\n${ctx.indent}`;\n        }\n    }\n    else if (!explicitKey && isCollection(value)) {\n        const vs0 = valueStr[0];\n        const nl0 = valueStr.indexOf('\\n');\n        const hasNewline = nl0 !== -1;\n        const flow = ctx.inFlow ?? value.flow ?? value.items.length === 0;\n        if (hasNewline || !flow) {\n            let hasPropsLine = false;\n            if (hasNewline && (vs0 === '&' || vs0 === '!')) {\n                let sp0 = valueStr.indexOf(' ');\n                if (vs0 === '&' &&\n                    sp0 !== -1 &&\n                    sp0 < nl0 &&\n                    valueStr[sp0 + 1] === '!') {\n                    sp0 = valueStr.indexOf(' ', sp0 + 1);\n                }\n                if (sp0 === -1 || nl0 < sp0)\n                    hasPropsLine = true;\n            }\n            if (!hasPropsLine)\n                ws = `\\n${ctx.indent}`;\n        }\n    }\n    else if (valueStr === '' || valueStr[0] === '\\n') {\n        ws = '';\n    }\n    str += ws + valueStr;\n    if (ctx.inFlow) {\n        if (valueCommentDone && onComment)\n            onComment();\n    }\n    else if (valueComment && !valueCommentDone) {\n        str += lineComment(str, ctx.indent, commentString(valueComment));\n    }\n    else if (chompKeep && onChompKeep) {\n        onChompKeep();\n    }\n    return str;\n}\n\nexport { stringifyPair };\n","function debug(logLevel, ...messages) {\n    if (logLevel === 'debug')\n        console.log(...messages);\n}\nfunction warn(logLevel, warning) {\n    if (logLevel === 'debug' || logLevel === 'warn') {\n        // https://github.com/typescript-eslint/typescript-eslint/issues/7478\n        // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n        if (typeof process !== 'undefined' && process.emitWarning)\n            process.emitWarning(warning);\n        else\n            console.warn(warning);\n    }\n}\n\nexport { debug, warn };\n","import { warn } from '../log.js';\nimport { createStringifyContext } from '../stringify/stringify.js';\nimport { isAlias, isSeq, isScalar, isMap, isNode } from './identity.js';\nimport { Scalar } from './Scalar.js';\nimport { toJS } from './toJS.js';\n\nconst MERGE_KEY = '<<';\nfunction addPairToJSMap(ctx, map, { key, value }) {\n    if (ctx?.doc.schema.merge && isMergeKey(key)) {\n        value = isAlias(value) ? value.resolve(ctx.doc) : value;\n        if (isSeq(value))\n            for (const it of value.items)\n                mergeToJSMap(ctx, map, it);\n        else if (Array.isArray(value))\n            for (const it of value)\n                mergeToJSMap(ctx, map, it);\n        else\n            mergeToJSMap(ctx, map, value);\n    }\n    else {\n        const jsKey = toJS(key, '', ctx);\n        if (map instanceof Map) {\n            map.set(jsKey, toJS(value, jsKey, ctx));\n        }\n        else if (map instanceof Set) {\n            map.add(jsKey);\n        }\n        else {\n            const stringKey = stringifyKey(key, jsKey, ctx);\n            const jsValue = toJS(value, stringKey, ctx);\n            if (stringKey in map)\n                Object.defineProperty(map, stringKey, {\n                    value: jsValue,\n                    writable: true,\n                    enumerable: true,\n                    configurable: true\n                });\n            else\n                map[stringKey] = jsValue;\n        }\n    }\n    return map;\n}\nconst isMergeKey = (key) => key === MERGE_KEY ||\n    (isScalar(key) &&\n        key.value === MERGE_KEY &&\n        (!key.type || key.type === Scalar.PLAIN));\n// If the value associated with a merge key is a single mapping node, each of\n// its key/value pairs is inserted into the current mapping, unless the key\n// already exists in it. If the value associated with the merge key is a\n// sequence, then this sequence is expected to contain mapping nodes and each\n// of these nodes is merged in turn according to its order in the sequence.\n// Keys in mapping nodes earlier in the sequence override keys specified in\n// later mapping nodes. -- http://yaml.org/type/merge.html\nfunction mergeToJSMap(ctx, map, value) {\n    const source = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (!isMap(source))\n        throw new Error('Merge sources must be maps or map aliases');\n    const srcMap = source.toJSON(null, ctx, Map);\n    for (const [key, value] of srcMap) {\n        if (map instanceof Map) {\n            if (!map.has(key))\n                map.set(key, value);\n        }\n        else if (map instanceof Set) {\n            map.add(key);\n        }\n        else if (!Object.prototype.hasOwnProperty.call(map, key)) {\n            Object.defineProperty(map, key, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true\n            });\n        }\n    }\n    return map;\n}\nfunction stringifyKey(key, jsKey, ctx) {\n    if (jsKey === null)\n        return '';\n    if (typeof jsKey !== 'object')\n        return String(jsKey);\n    if (isNode(key) && ctx?.doc) {\n        const strCtx = createStringifyContext(ctx.doc, {});\n        strCtx.anchors = new Set();\n        for (const node of ctx.anchors.keys())\n            strCtx.anchors.add(node.anchor);\n        strCtx.inFlow = true;\n        strCtx.inStringifyKey = true;\n        const strKey = key.toString(strCtx);\n        if (!ctx.mapKeyWarned) {\n            let jsonStr = JSON.stringify(strKey);\n            if (jsonStr.length > 40)\n                jsonStr = jsonStr.substring(0, 36) + '...\"';\n            warn(ctx.doc.options.logLevel, `Keys with collection values will be stringified due to JS Object restrictions: ${jsonStr}. Set mapAsMap: true to use object keys.`);\n            ctx.mapKeyWarned = true;\n        }\n        return strKey;\n    }\n    return JSON.stringify(jsKey);\n}\n\nexport { addPairToJSMap };\n","import { createNode } from '../doc/createNode.js';\nimport { stringifyPair } from '../stringify/stringifyPair.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { NODE_TYPE, PAIR, isNode } from './identity.js';\n\nfunction createPair(key, value, ctx) {\n    const k = createNode(key, undefined, ctx);\n    const v = createNode(value, undefined, ctx);\n    return new Pair(k, v);\n}\nclass Pair {\n    constructor(key, value = null) {\n        Object.defineProperty(this, NODE_TYPE, { value: PAIR });\n        this.key = key;\n        this.value = value;\n    }\n    clone(schema) {\n        let { key, value } = this;\n        if (isNode(key))\n            key = key.clone(schema);\n        if (isNode(value))\n            value = value.clone(schema);\n        return new Pair(key, value);\n    }\n    toJSON(_, ctx) {\n        const pair = ctx?.mapAsMap ? new Map() : {};\n        return addPairToJSMap(ctx, pair, this);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        return ctx?.doc\n            ? stringifyPair(this, ctx, onComment, onChompKeep)\n            : JSON.stringify(this);\n    }\n}\n\nexport { Pair, createPair };\n","import { isNode, isPair } from '../nodes/identity.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyCollection(collection, ctx, options) {\n    const flow = ctx.inFlow ?? collection.flow;\n    const stringify = flow ? stringifyFlowCollection : stringifyBlockCollection;\n    return stringify(collection, ctx, options);\n}\nfunction stringifyBlockCollection({ comment, items }, ctx, { blockItemPrefix, flowChars, itemIndent, onChompKeep, onComment }) {\n    const { indent, options: { commentString } } = ctx;\n    const itemCtx = Object.assign({}, ctx, { indent: itemIndent, type: null });\n    let chompKeep = false; // flag for the preceding node's status\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (!chompKeep && item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, chompKeep);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (!chompKeep && ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, chompKeep);\n            }\n        }\n        chompKeep = false;\n        let str = stringify(item, itemCtx, () => (comment = null), () => (chompKeep = true));\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (chompKeep && comment)\n            chompKeep = false;\n        lines.push(blockItemPrefix + str);\n    }\n    let str;\n    if (lines.length === 0) {\n        str = flowChars.start + flowChars.end;\n    }\n    else {\n        str = lines[0];\n        for (let i = 1; i < lines.length; ++i) {\n            const line = lines[i];\n            str += line ? `\\n${indent}${line}` : '\\n';\n        }\n    }\n    if (comment) {\n        str += '\\n' + indentComment(commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    else if (chompKeep && onChompKeep)\n        onChompKeep();\n    return str;\n}\nfunction stringifyFlowCollection({ items }, ctx, { flowChars, itemIndent }) {\n    const { indent, indentStep, flowCollectionPadding: fcPadding, options: { commentString } } = ctx;\n    itemIndent += indentStep;\n    const itemCtx = Object.assign({}, ctx, {\n        indent: itemIndent,\n        inFlow: true,\n        type: null\n    });\n    let reqNewline = false;\n    let linesAtValue = 0;\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, false);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, false);\n                if (ik.comment)\n                    reqNewline = true;\n            }\n            const iv = isNode(item.value) ? item.value : null;\n            if (iv) {\n                if (iv.comment)\n                    comment = iv.comment;\n                if (iv.commentBefore)\n                    reqNewline = true;\n            }\n            else if (item.value == null && ik?.comment) {\n                comment = ik.comment;\n            }\n        }\n        if (comment)\n            reqNewline = true;\n        let str = stringify(item, itemCtx, () => (comment = null));\n        if (i < items.length - 1)\n            str += ',';\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (!reqNewline && (lines.length > linesAtValue || str.includes('\\n')))\n            reqNewline = true;\n        lines.push(str);\n        linesAtValue = lines.length;\n    }\n    const { start, end } = flowChars;\n    if (lines.length === 0) {\n        return start + end;\n    }\n    else {\n        if (!reqNewline) {\n            const len = lines.reduce((sum, line) => sum + line.length + 2, 2);\n            reqNewline = ctx.options.lineWidth > 0 && len > ctx.options.lineWidth;\n        }\n        if (reqNewline) {\n            let str = start;\n            for (const line of lines)\n                str += line ? `\\n${indentStep}${indent}${line}` : '\\n';\n            return `${str}\\n${indent}${end}`;\n        }\n        else {\n            return `${start}${fcPadding}${lines.join(' ')}${fcPadding}${end}`;\n        }\n    }\n}\nfunction addCommentBefore({ indent, options: { commentString } }, lines, comment, chompKeep) {\n    if (comment && chompKeep)\n        comment = comment.replace(/^\\n+/, '');\n    if (comment) {\n        const ic = indentComment(commentString(comment), indent);\n        lines.push(ic.trimStart()); // Avoid double indent on first line\n    }\n}\n\nexport { stringifyCollection };\n","import { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { Collection } from './Collection.js';\nimport { isPair, isScalar, MAP } from './identity.js';\nimport { Pair, createPair } from './Pair.js';\nimport { isScalarValue } from './Scalar.js';\n\nfunction findPair(items, key) {\n    const k = isScalar(key) ? key.value : key;\n    for (const it of items) {\n        if (isPair(it)) {\n            if (it.key === key || it.key === k)\n                return it;\n            if (isScalar(it.key) && it.key.value === k)\n                return it;\n        }\n    }\n    return undefined;\n}\nclass YAMLMap extends Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:map';\n    }\n    constructor(schema) {\n        super(MAP, schema);\n        this.items = [];\n    }\n    /**\n     * A generic collection parsing method that can be extended\n     * to other node classes that inherit from YAMLMap\n     */\n    static from(schema, obj, ctx) {\n        const { keepUndefined, replacer } = ctx;\n        const map = new this(schema);\n        const add = (key, value) => {\n            if (typeof replacer === 'function')\n                value = replacer.call(obj, key, value);\n            else if (Array.isArray(replacer) && !replacer.includes(key))\n                return;\n            if (value !== undefined || keepUndefined)\n                map.items.push(createPair(key, value, ctx));\n        };\n        if (obj instanceof Map) {\n            for (const [key, value] of obj)\n                add(key, value);\n        }\n        else if (obj && typeof obj === 'object') {\n            for (const key of Object.keys(obj))\n                add(key, obj[key]);\n        }\n        if (typeof schema.sortMapEntries === 'function') {\n            map.items.sort(schema.sortMapEntries);\n        }\n        return map;\n    }\n    /**\n     * Adds a value to the collection.\n     *\n     * @param overwrite - If not set `true`, using a key that is already in the\n     *   collection will throw. Otherwise, overwrites the previous value.\n     */\n    add(pair, overwrite) {\n        let _pair;\n        if (isPair(pair))\n            _pair = pair;\n        else if (!pair || typeof pair !== 'object' || !('key' in pair)) {\n            // In TypeScript, this never happens.\n            _pair = new Pair(pair, pair?.value);\n        }\n        else\n            _pair = new Pair(pair.key, pair.value);\n        const prev = findPair(this.items, _pair.key);\n        const sortEntries = this.schema?.sortMapEntries;\n        if (prev) {\n            if (!overwrite)\n                throw new Error(`Key ${_pair.key} already set`);\n            // For scalars, keep the old node & its comments and anchors\n            if (isScalar(prev.value) && isScalarValue(_pair.value))\n                prev.value.value = _pair.value;\n            else\n                prev.value = _pair.value;\n        }\n        else if (sortEntries) {\n            const i = this.items.findIndex(item => sortEntries(_pair, item) < 0);\n            if (i === -1)\n                this.items.push(_pair);\n            else\n                this.items.splice(i, 0, _pair);\n        }\n        else {\n            this.items.push(_pair);\n        }\n    }\n    delete(key) {\n        const it = findPair(this.items, key);\n        if (!it)\n            return false;\n        const del = this.items.splice(this.items.indexOf(it), 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const it = findPair(this.items, key);\n        const node = it?.value;\n        return (!keepScalar && isScalar(node) ? node.value : node) ?? undefined;\n    }\n    has(key) {\n        return !!findPair(this.items, key);\n    }\n    set(key, value) {\n        this.add(new Pair(key, value), true);\n    }\n    /**\n     * @param ctx - Conversion context, originally set in Document#toJS()\n     * @param {Class} Type - If set, forces the returned collection type\n     * @returns Instance of Type, Map, or Object\n     */\n    toJSON(_, ctx, Type) {\n        const map = Type ? new Type() : ctx?.mapAsMap ? new Map() : {};\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const item of this.items)\n            addPairToJSMap(ctx, map, item);\n        return map;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        for (const item of this.items) {\n            if (!isPair(item))\n                throw new Error(`Map items must all be pairs; found ${JSON.stringify(item)} instead`);\n        }\n        if (!ctx.allNullValues && this.hasAllNullValues(false))\n            ctx = Object.assign({}, ctx, { allNullValues: true });\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '',\n            flowChars: { start: '{', end: '}' },\n            itemIndent: ctx.indent || '',\n            onChompKeep,\n            onComment\n        });\n    }\n}\n\nexport { YAMLMap, findPair };\n","import { isMap } from '../../nodes/identity.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\n\nconst map = {\n    collection: 'map',\n    default: true,\n    nodeClass: YAMLMap,\n    tag: 'tag:yaml.org,2002:map',\n    resolve(map, onError) {\n        if (!isMap(map))\n            onError('Expected a mapping for this tag');\n        return map;\n    },\n    createNode: (schema, obj, ctx) => YAMLMap.from(schema, obj, ctx)\n};\n\nexport { map };\n","import { createNode } from '../doc/createNode.js';\nimport { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { Collection } from './Collection.js';\nimport { SEQ, isScalar } from './identity.js';\nimport { isScalarValue } from './Scalar.js';\nimport { toJS } from './toJS.js';\n\nclass YAMLSeq extends Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:seq';\n    }\n    constructor(schema) {\n        super(SEQ, schema);\n        this.items = [];\n    }\n    add(value) {\n        this.items.push(value);\n    }\n    /**\n     * Removes a value from the collection.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     *\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return false;\n        const del = this.items.splice(idx, 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return undefined;\n        const it = this.items[idx];\n        return !keepScalar && isScalar(it) ? it.value : it;\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     */\n    has(key) {\n        const idx = asItemIndex(key);\n        return typeof idx === 'number' && idx < this.items.length;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     *\n     * If `key` does not contain a representation of an integer, this will throw.\n     * It may be wrapped in a `Scalar`.\n     */\n    set(key, value) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            throw new Error(`Expected a valid index, not ${key}.`);\n        const prev = this.items[idx];\n        if (isScalar(prev) && isScalarValue(value))\n            prev.value = value;\n        else\n            this.items[idx] = value;\n    }\n    toJSON(_, ctx) {\n        const seq = [];\n        if (ctx?.onCreate)\n            ctx.onCreate(seq);\n        let i = 0;\n        for (const item of this.items)\n            seq.push(toJS(item, String(i++), ctx));\n        return seq;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '- ',\n            flowChars: { start: '[', end: ']' },\n            itemIndent: (ctx.indent || '') + '  ',\n            onChompKeep,\n            onComment\n        });\n    }\n    static from(schema, obj, ctx) {\n        const { replacer } = ctx;\n        const seq = new this(schema);\n        if (obj && Symbol.iterator in Object(obj)) {\n            let i = 0;\n            for (let it of obj) {\n                if (typeof replacer === 'function') {\n                    const key = obj instanceof Set ? it : String(i++);\n                    it = replacer.call(obj, key, it);\n                }\n                seq.items.push(createNode(it, undefined, ctx));\n            }\n        }\n        return seq;\n    }\n}\nfunction asItemIndex(key) {\n    let idx = isScalar(key) ? key.value : key;\n    if (idx && typeof idx === 'string')\n        idx = Number(idx);\n    return typeof idx === 'number' && Number.isInteger(idx) && idx >= 0\n        ? idx\n        : null;\n}\n\nexport { YAMLSeq };\n","import { isSeq } from '../../nodes/identity.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nconst seq = {\n    collection: 'seq',\n    default: true,\n    nodeClass: YAMLSeq,\n    tag: 'tag:yaml.org,2002:seq',\n    resolve(seq, onError) {\n        if (!isSeq(seq))\n            onError('Expected a sequence for this tag');\n        return seq;\n    },\n    createNode: (schema, obj, ctx) => YAMLSeq.from(schema, obj, ctx)\n};\n\nexport { seq };\n","import { stringifyString } from '../../stringify/stringifyString.js';\n\nconst string = {\n    identify: value => typeof value === 'string',\n    default: true,\n    tag: 'tag:yaml.org,2002:str',\n    resolve: str => str,\n    stringify(item, ctx, onComment, onChompKeep) {\n        ctx = Object.assign({ actualString: true }, ctx);\n        return stringifyString(item, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { string };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nconst nullTag = {\n    identify: value => value == null,\n    createNode: () => new Scalar(null),\n    default: true,\n    tag: 'tag:yaml.org,2002:null',\n    test: /^(?:~|[Nn]ull|NULL)?$/,\n    resolve: () => new Scalar(null),\n    stringify: ({ source }, ctx) => typeof source === 'string' && nullTag.test.test(source)\n        ? source\n        : ctx.options.nullStr\n};\n\nexport { nullTag };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nconst boolTag = {\n    identify: value => typeof value === 'boolean',\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n    resolve: str => new Scalar(str[0] === 't' || str[0] === 'T'),\n    stringify({ source, value }, ctx) {\n        if (source && boolTag.test.test(source)) {\n            const sv = source[0] === 't' || source[0] === 'T';\n            if (value === sv)\n                return source;\n        }\n        return value ? ctx.options.trueStr : ctx.options.falseStr;\n    }\n};\n\nexport { boolTag };\n","function stringifyNumber({ format, minFractionDigits, tag, value }) {\n    if (typeof value === 'bigint')\n        return String(value);\n    const num = typeof value === 'number' ? value : Number(value);\n    if (!isFinite(num))\n        return isNaN(num) ? '.nan' : num < 0 ? '-.inf' : '.inf';\n    let n = JSON.stringify(value);\n    if (!format &&\n        minFractionDigits &&\n        (!tag || tag === 'tag:yaml.org,2002:float') &&\n        /^\\d/.test(n)) {\n        let i = n.indexOf('.');\n        if (i < 0) {\n            i = n.length;\n            n += '.';\n        }\n        let d = minFractionDigits - (n.length - i - 1);\n        while (d-- > 0)\n            n += '0';\n    }\n    return n;\n}\n\nexport { stringifyNumber };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF|nan|NaN|NAN))$/,\n    resolve: str => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)[eE][-+]?[0-9]+$/,\n    resolve: str => parseFloat(str),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+\\.[0-9]*)$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str));\n        const dot = str.indexOf('.');\n        if (dot !== -1 && str[str.length - 1] === '0')\n            node.minFractionDigits = str.length - dot - 1;\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nconst intResolve = (str, offset, radix, { intAsBigInt }) => (intAsBigInt ? BigInt(str) : parseInt(str.substring(offset), radix));\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value) && value >= 0)\n        return prefix + value.toString(radix);\n    return stringifyNumber(node);\n}\nconst intOct = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^0o[0-7]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 8, opt),\n    stringify: node => intStringify(node, 8, '0o')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^0x[0-9a-fA-F]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intHex, intOct };\n","import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { boolTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intOct, int, intHex } from './int.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    boolTag,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float\n];\n\nexport { schema };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { map } from '../common/map.js';\nimport { seq } from '../common/seq.js';\n\nfunction intIdentify(value) {\n    return typeof value === 'bigint' || Number.isInteger(value);\n}\nconst stringifyJSON = ({ value }) => JSON.stringify(value);\nconst jsonScalars = [\n    {\n        identify: value => typeof value === 'string',\n        default: true,\n        tag: 'tag:yaml.org,2002:str',\n        resolve: str => str,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => value == null,\n        createNode: () => new Scalar(null),\n        default: true,\n        tag: 'tag:yaml.org,2002:null',\n        test: /^null$/,\n        resolve: () => null,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => typeof value === 'boolean',\n        default: true,\n        tag: 'tag:yaml.org,2002:bool',\n        test: /^true|false$/,\n        resolve: str => str === 'true',\n        stringify: stringifyJSON\n    },\n    {\n        identify: intIdentify,\n        default: true,\n        tag: 'tag:yaml.org,2002:int',\n        test: /^-?(?:0|[1-9][0-9]*)$/,\n        resolve: (str, _onError, { intAsBigInt }) => intAsBigInt ? BigInt(str) : parseInt(str, 10),\n        stringify: ({ value }) => intIdentify(value) ? value.toString() : JSON.stringify(value)\n    },\n    {\n        identify: value => typeof value === 'number',\n        default: true,\n        tag: 'tag:yaml.org,2002:float',\n        test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n        resolve: str => parseFloat(str),\n        stringify: stringifyJSON\n    }\n];\nconst jsonError = {\n    default: true,\n    tag: '',\n    test: /^/,\n    resolve(str, onError) {\n        onError(`Unresolved plain scalar ${JSON.stringify(str)}`);\n        return str;\n    }\n};\nconst schema = [map, seq].concat(jsonScalars, jsonError);\n\nexport { schema };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyString } from '../../stringify/stringifyString.js';\n\nconst binary = {\n    identify: value => value instanceof Uint8Array, // Buffer inherits from Uint8Array\n    default: false,\n    tag: 'tag:yaml.org,2002:binary',\n    /**\n     * Returns a Buffer in node and an Uint8Array in browsers\n     *\n     * To use the resulting buffer as an image, you'll want to do something like:\n     *\n     *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n     *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n     */\n    resolve(src, onError) {\n        if (typeof Buffer === 'function') {\n            return Buffer.from(src, 'base64');\n        }\n        else if (typeof atob === 'function') {\n            // On IE 11, atob() can't handle newlines\n            const str = atob(src.replace(/[\\n\\r]/g, ''));\n            const buffer = new Uint8Array(str.length);\n            for (let i = 0; i < str.length; ++i)\n                buffer[i] = str.charCodeAt(i);\n            return buffer;\n        }\n        else {\n            onError('This environment does not support reading binary tags; either Buffer or atob is required');\n            return src;\n        }\n    },\n    stringify({ comment, type, value }, ctx, onComment, onChompKeep) {\n        const buf = value; // checked earlier by binary.identify()\n        let str;\n        if (typeof Buffer === 'function') {\n            str =\n                buf instanceof Buffer\n                    ? buf.toString('base64')\n                    : Buffer.from(buf.buffer).toString('base64');\n        }\n        else if (typeof btoa === 'function') {\n            let s = '';\n            for (let i = 0; i < buf.length; ++i)\n                s += String.fromCharCode(buf[i]);\n            str = btoa(s);\n        }\n        else {\n            throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n        }\n        if (!type)\n            type = Scalar.BLOCK_LITERAL;\n        if (type !== Scalar.QUOTE_DOUBLE) {\n            const lineWidth = Math.max(ctx.options.lineWidth - ctx.indent.length, ctx.options.minContentWidth);\n            const n = Math.ceil(str.length / lineWidth);\n            const lines = new Array(n);\n            for (let i = 0, o = 0; i < n; ++i, o += lineWidth) {\n                lines[i] = str.substr(o, lineWidth);\n            }\n            str = lines.join(type === Scalar.BLOCK_LITERAL ? '\\n' : ' ');\n        }\n        return stringifyString({ comment, type, value: str }, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { binary };\n","import { isSeq, isPair, isMap } from '../../nodes/identity.js';\nimport { Pair, createPair } from '../../nodes/Pair.js';\nimport { Scalar } from '../../nodes/Scalar.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nfunction resolvePairs(seq, onError) {\n    if (isSeq(seq)) {\n        for (let i = 0; i < seq.items.length; ++i) {\n            let item = seq.items[i];\n            if (isPair(item))\n                continue;\n            else if (isMap(item)) {\n                if (item.items.length > 1)\n                    onError('Each pair must have its own sequence indicator');\n                const pair = item.items[0] || new Pair(new Scalar(null));\n                if (item.commentBefore)\n                    pair.key.commentBefore = pair.key.commentBefore\n                        ? `${item.commentBefore}\\n${pair.key.commentBefore}`\n                        : item.commentBefore;\n                if (item.comment) {\n                    const cn = pair.value ?? pair.key;\n                    cn.comment = cn.comment\n                        ? `${item.comment}\\n${cn.comment}`\n                        : item.comment;\n                }\n                item = pair;\n            }\n            seq.items[i] = isPair(item) ? item : new Pair(item);\n        }\n    }\n    else\n        onError('Expected a sequence for this tag');\n    return seq;\n}\nfunction createPairs(schema, iterable, ctx) {\n    const { replacer } = ctx;\n    const pairs = new YAMLSeq(schema);\n    pairs.tag = 'tag:yaml.org,2002:pairs';\n    let i = 0;\n    if (iterable && Symbol.iterator in Object(iterable))\n        for (let it of iterable) {\n            if (typeof replacer === 'function')\n                it = replacer.call(iterable, String(i++), it);\n            let key, value;\n            if (Array.isArray(it)) {\n                if (it.length === 2) {\n                    key = it[0];\n                    value = it[1];\n                }\n                else\n                    throw new TypeError(`Expected [key, value] tuple: ${it}`);\n            }\n            else if (it && it instanceof Object) {\n                const keys = Object.keys(it);\n                if (keys.length === 1) {\n                    key = keys[0];\n                    value = it[key];\n                }\n                else {\n                    throw new TypeError(`Expected tuple with one key, not ${keys.length} keys`);\n                }\n            }\n            else {\n                key = it;\n            }\n            pairs.items.push(createPair(key, value, ctx));\n        }\n    return pairs;\n}\nconst pairs = {\n    collection: 'seq',\n    default: false,\n    tag: 'tag:yaml.org,2002:pairs',\n    resolve: resolvePairs,\n    createNode: createPairs\n};\n\nexport { createPairs, pairs, resolvePairs };\n","import { isScalar, isPair } from '../../nodes/identity.js';\nimport { toJS } from '../../nodes/toJS.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\nimport { resolvePairs, createPairs } from './pairs.js';\n\nclass YAMLOMap extends YAMLSeq {\n    constructor() {\n        super();\n        this.add = YAMLMap.prototype.add.bind(this);\n        this.delete = YAMLMap.prototype.delete.bind(this);\n        this.get = YAMLMap.prototype.get.bind(this);\n        this.has = YAMLMap.prototype.has.bind(this);\n        this.set = YAMLMap.prototype.set.bind(this);\n        this.tag = YAMLOMap.tag;\n    }\n    /**\n     * If `ctx` is given, the return type is actually `Map<unknown, unknown>`,\n     * but TypeScript won't allow widening the signature of a child method.\n     */\n    toJSON(_, ctx) {\n        if (!ctx)\n            return super.toJSON(_);\n        const map = new Map();\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const pair of this.items) {\n            let key, value;\n            if (isPair(pair)) {\n                key = toJS(pair.key, '', ctx);\n                value = toJS(pair.value, key, ctx);\n            }\n            else {\n                key = toJS(pair, '', ctx);\n            }\n            if (map.has(key))\n                throw new Error('Ordered maps must not include duplicate keys');\n            map.set(key, value);\n        }\n        return map;\n    }\n    static from(schema, iterable, ctx) {\n        const pairs = createPairs(schema, iterable, ctx);\n        const omap = new this();\n        omap.items = pairs.items;\n        return omap;\n    }\n}\nYAMLOMap.tag = 'tag:yaml.org,2002:omap';\nconst omap = {\n    collection: 'seq',\n    identify: value => value instanceof Map,\n    nodeClass: YAMLOMap,\n    default: false,\n    tag: 'tag:yaml.org,2002:omap',\n    resolve(seq, onError) {\n        const pairs = resolvePairs(seq, onError);\n        const seenKeys = [];\n        for (const { key } of pairs.items) {\n            if (isScalar(key)) {\n                if (seenKeys.includes(key.value)) {\n                    onError(`Ordered maps must not include duplicate keys: ${key.value}`);\n                }\n                else {\n                    seenKeys.push(key.value);\n                }\n            }\n        }\n        return Object.assign(new YAMLOMap(), pairs);\n    },\n    createNode: (schema, iterable, ctx) => YAMLOMap.from(schema, iterable, ctx)\n};\n\nexport { YAMLOMap, omap };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nfunction boolStringify({ value, source }, ctx) {\n    const boolObj = value ? trueTag : falseTag;\n    if (source && boolObj.test.test(source))\n        return source;\n    return value ? ctx.options.trueStr : ctx.options.falseStr;\n}\nconst trueTag = {\n    identify: value => value === true,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n    resolve: () => new Scalar(true),\n    stringify: boolStringify\n};\nconst falseTag = {\n    identify: value => value === false,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/i,\n    resolve: () => new Scalar(false),\n    stringify: boolStringify\n};\n\nexport { falseTag, trueTag };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?\\.(?:inf|Inf|INF|nan|NaN|NAN)$/,\n    resolve: (str) => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:[0-9][0-9_]*)?(?:\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n    resolve: (str) => parseFloat(str.replace(/_/g, '')),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:[0-9][0-9_]*)?\\.[0-9_]*$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str.replace(/_/g, '')));\n        const dot = str.indexOf('.');\n        if (dot !== -1) {\n            const f = str.substring(dot + 1).replace(/_/g, '');\n            if (f[f.length - 1] === '0')\n                node.minFractionDigits = f.length;\n        }\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nfunction intResolve(str, offset, radix, { intAsBigInt }) {\n    const sign = str[0];\n    if (sign === '-' || sign === '+')\n        offset += 1;\n    str = str.substring(offset).replace(/_/g, '');\n    if (intAsBigInt) {\n        switch (radix) {\n            case 2:\n                str = `0b${str}`;\n                break;\n            case 8:\n                str = `0o${str}`;\n                break;\n            case 16:\n                str = `0x${str}`;\n                break;\n        }\n        const n = BigInt(str);\n        return sign === '-' ? BigInt(-1) * n : n;\n    }\n    const n = parseInt(str, radix);\n    return sign === '-' ? -1 * n : n;\n}\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value)) {\n        const str = value.toString(radix);\n        return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n    }\n    return stringifyNumber(node);\n}\nconst intBin = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'BIN',\n    test: /^[-+]?0b[0-1_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 2, opt),\n    stringify: node => intStringify(node, 2, '0b')\n};\nconst intOct = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^[-+]?0[0-7_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 1, 8, opt),\n    stringify: node => intStringify(node, 8, '0')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9][0-9_]*$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^[-+]?0x[0-9a-fA-F_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intBin, intHex, intOct };\n","import { isMap, isPair, isScalar } from '../../nodes/identity.js';\nimport { Pair, createPair } from '../../nodes/Pair.js';\nimport { YAMLMap, findPair } from '../../nodes/YAMLMap.js';\n\nclass YAMLSet extends YAMLMap {\n    constructor(schema) {\n        super(schema);\n        this.tag = YAMLSet.tag;\n    }\n    add(key) {\n        let pair;\n        if (isPair(key))\n            pair = key;\n        else if (key &&\n            typeof key === 'object' &&\n            'key' in key &&\n            'value' in key &&\n            key.value === null)\n            pair = new Pair(key.key, null);\n        else\n            pair = new Pair(key, null);\n        const prev = findPair(this.items, pair.key);\n        if (!prev)\n            this.items.push(pair);\n    }\n    /**\n     * If `keepPair` is `true`, returns the Pair matching `key`.\n     * Otherwise, returns the value of that Pair's key.\n     */\n    get(key, keepPair) {\n        const pair = findPair(this.items, key);\n        return !keepPair && isPair(pair)\n            ? isScalar(pair.key)\n                ? pair.key.value\n                : pair.key\n            : pair;\n    }\n    set(key, value) {\n        if (typeof value !== 'boolean')\n            throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof value}`);\n        const prev = findPair(this.items, key);\n        if (prev && !value) {\n            this.items.splice(this.items.indexOf(prev), 1);\n        }\n        else if (!prev && value) {\n            this.items.push(new Pair(key));\n        }\n    }\n    toJSON(_, ctx) {\n        return super.toJSON(_, ctx, Set);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        if (this.hasAllNullValues(true))\n            return super.toString(Object.assign({}, ctx, { allNullValues: true }), onComment, onChompKeep);\n        else\n            throw new Error('Set items must all have null values');\n    }\n    static from(schema, iterable, ctx) {\n        const { replacer } = ctx;\n        const set = new this(schema);\n        if (iterable && Symbol.iterator in Object(iterable))\n            for (let value of iterable) {\n                if (typeof replacer === 'function')\n                    value = replacer.call(iterable, value, value);\n                set.items.push(createPair(value, null, ctx));\n            }\n        return set;\n    }\n}\nYAMLSet.tag = 'tag:yaml.org,2002:set';\nconst set = {\n    collection: 'map',\n    identify: value => value instanceof Set,\n    nodeClass: YAMLSet,\n    default: false,\n    tag: 'tag:yaml.org,2002:set',\n    createNode: (schema, iterable, ctx) => YAMLSet.from(schema, iterable, ctx),\n    resolve(map, onError) {\n        if (isMap(map)) {\n            if (map.hasAllNullValues(true))\n                return Object.assign(new YAMLSet(), map);\n            else\n                onError('Set items must all have null values');\n        }\n        else\n            onError('Expected a mapping for this tag');\n        return map;\n    }\n};\n\nexport { YAMLSet, set };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\n/** Internal types handle bigint as number, because TS can't figure it out. */\nfunction parseSexagesimal(str, asBigInt) {\n    const sign = str[0];\n    const parts = sign === '-' || sign === '+' ? str.substring(1) : str;\n    const num = (n) => asBigInt ? BigInt(n) : Number(n);\n    const res = parts\n        .replace(/_/g, '')\n        .split(':')\n        .reduce((res, p) => res * num(60) + num(p), num(0));\n    return (sign === '-' ? num(-1) * res : res);\n}\n/**\n * hhhh:mm:ss.sss\n *\n * Internal types handle bigint as number, because TS can't figure it out.\n */\nfunction stringifySexagesimal(node) {\n    let { value } = node;\n    let num = (n) => n;\n    if (typeof value === 'bigint')\n        num = n => BigInt(n);\n    else if (isNaN(value) || !isFinite(value))\n        return stringifyNumber(node);\n    let sign = '';\n    if (value < 0) {\n        sign = '-';\n        value *= num(-1);\n    }\n    const _60 = num(60);\n    const parts = [value % _60]; // seconds, including ms\n    if (value < 60) {\n        parts.unshift(0); // at least one : is required\n    }\n    else {\n        value = (value - parts[0]) / _60;\n        parts.unshift(value % _60); // minutes\n        if (value >= 60) {\n            value = (value - parts[0]) / _60;\n            parts.unshift(value); // hours\n        }\n    }\n    return (sign +\n        parts\n            .map(n => String(n).padStart(2, '0'))\n            .join(':')\n            .replace(/000000\\d*$/, '') // % 60 may introduce error\n    );\n}\nconst intTime = {\n    identify: value => typeof value === 'bigint' || Number.isInteger(value),\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,\n    resolve: (str, _onError, { intAsBigInt }) => parseSexagesimal(str, intAsBigInt),\n    stringify: stringifySexagesimal\n};\nconst floatTime = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*$/,\n    resolve: str => parseSexagesimal(str, false),\n    stringify: stringifySexagesimal\n};\nconst timestamp = {\n    identify: value => value instanceof Date,\n    default: true,\n    tag: 'tag:yaml.org,2002:timestamp',\n    // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n    // may be omitted altogether, resulting in a date format. In such a case, the time part is\n    // assumed to be 00:00:00Z (start of day, UTC).\n    test: RegExp('^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n        '(?:' + // time is optional\n        '(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n        '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n        '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n        ')?$'),\n    resolve(str) {\n        const match = str.match(timestamp.test);\n        if (!match)\n            throw new Error('!!timestamp expects a date, starting with yyyy-mm-dd');\n        const [, year, month, day, hour, minute, second] = match.map(Number);\n        const millisec = match[7] ? Number((match[7] + '00').substr(1, 3)) : 0;\n        let date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec);\n        const tz = match[8];\n        if (tz && tz !== 'Z') {\n            let d = parseSexagesimal(tz, false);\n            if (Math.abs(d) < 30)\n                d *= 60;\n            date -= 60000 * d;\n        }\n        return new Date(date);\n    },\n    stringify: ({ value }) => value.toISOString().replace(/((T00:00)?:00)?\\.000Z$/, '')\n};\n\nexport { floatTime, intTime, timestamp };\n","import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { binary } from './binary.js';\nimport { trueTag, falseTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intBin, intOct, int, intHex } from './int.js';\nimport { omap } from './omap.js';\nimport { pairs } from './pairs.js';\nimport { set } from './set.js';\nimport { intTime, floatTime, timestamp } from './timestamp.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    trueTag,\n    falseTag,\n    intBin,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float,\n    binary,\n    omap,\n    pairs,\n    set,\n    intTime,\n    floatTime,\n    timestamp\n];\n\nexport { schema };\n","import { map } from './common/map.js';\nimport { nullTag } from './common/null.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { boolTag } from './core/bool.js';\nimport { float, floatExp, floatNaN } from './core/float.js';\nimport { int, intHex, intOct } from './core/int.js';\nimport { schema } from './core/schema.js';\nimport { schema as schema$1 } from './json/schema.js';\nimport { binary } from './yaml-1.1/binary.js';\nimport { omap } from './yaml-1.1/omap.js';\nimport { pairs } from './yaml-1.1/pairs.js';\nimport { schema as schema$2 } from './yaml-1.1/schema.js';\nimport { set } from './yaml-1.1/set.js';\nimport { timestamp, floatTime, intTime } from './yaml-1.1/timestamp.js';\n\nconst schemas = new Map([\n    ['core', schema],\n    ['failsafe', [map, seq, string]],\n    ['json', schema$1],\n    ['yaml11', schema$2],\n    ['yaml-1.1', schema$2]\n]);\nconst tagsByName = {\n    binary,\n    bool: boolTag,\n    float,\n    floatExp,\n    floatNaN,\n    floatTime,\n    int,\n    intHex,\n    intOct,\n    intTime,\n    map,\n    null: nullTag,\n    omap,\n    pairs,\n    seq,\n    set,\n    timestamp\n};\nconst coreKnownTags = {\n    'tag:yaml.org,2002:binary': binary,\n    'tag:yaml.org,2002:omap': omap,\n    'tag:yaml.org,2002:pairs': pairs,\n    'tag:yaml.org,2002:set': set,\n    'tag:yaml.org,2002:timestamp': timestamp\n};\nfunction getTags(customTags, schemaName) {\n    let tags = schemas.get(schemaName);\n    if (!tags) {\n        if (Array.isArray(customTags))\n            tags = [];\n        else {\n            const keys = Array.from(schemas.keys())\n                .filter(key => key !== 'yaml11')\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown schema \"${schemaName}\"; use one of ${keys} or define customTags array`);\n        }\n    }\n    if (Array.isArray(customTags)) {\n        for (const tag of customTags)\n            tags = tags.concat(tag);\n    }\n    else if (typeof customTags === 'function') {\n        tags = customTags(tags.slice());\n    }\n    return tags.map(tag => {\n        if (typeof tag !== 'string')\n            return tag;\n        const tagObj = tagsByName[tag];\n        if (tagObj)\n            return tagObj;\n        const keys = Object.keys(tagsByName)\n            .map(key => JSON.stringify(key))\n            .join(', ');\n        throw new Error(`Unknown custom tag \"${tag}\"; use one of ${keys}`);\n    });\n}\n\nexport { coreKnownTags, getTags };\n","import { MAP, SCALAR, SEQ } from '../nodes/identity.js';\nimport { map } from './common/map.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { getTags, coreKnownTags } from './tags.js';\n\nconst sortMapEntriesByKey = (a, b) => a.key < b.key ? -1 : a.key > b.key ? 1 : 0;\nclass Schema {\n    constructor({ compat, customTags, merge, resolveKnownTags, schema, sortMapEntries, toStringDefaults }) {\n        this.compat = Array.isArray(compat)\n            ? getTags(compat, 'compat')\n            : compat\n                ? getTags(null, compat)\n                : null;\n        this.merge = !!merge;\n        this.name = (typeof schema === 'string' && schema) || 'core';\n        this.knownTags = resolveKnownTags ? coreKnownTags : {};\n        this.tags = getTags(customTags, this.name);\n        this.toStringOptions = toStringDefaults ?? null;\n        Object.defineProperty(this, MAP, { value: map });\n        Object.defineProperty(this, SCALAR, { value: string });\n        Object.defineProperty(this, SEQ, { value: seq });\n        // Used by createMap()\n        this.sortMapEntries =\n            typeof sortMapEntries === 'function'\n                ? sortMapEntries\n                : sortMapEntries === true\n                    ? sortMapEntriesByKey\n                    : null;\n    }\n    clone() {\n        const copy = Object.create(Schema.prototype, Object.getOwnPropertyDescriptors(this));\n        copy.tags = this.tags.slice();\n        return copy;\n    }\n}\n\nexport { Schema };\n","import { isNode } from '../nodes/identity.js';\nimport { createStringifyContext, stringify } from './stringify.js';\nimport { indentComment, lineComment } from './stringifyComment.js';\n\nfunction stringifyDocument(doc, options) {\n    const lines = [];\n    let hasDirectives = options.directives === true;\n    if (options.directives !== false && doc.directives) {\n        const dir = doc.directives.toString(doc);\n        if (dir) {\n            lines.push(dir);\n            hasDirectives = true;\n        }\n        else if (doc.directives.docStart)\n            hasDirectives = true;\n    }\n    if (hasDirectives)\n        lines.push('---');\n    const ctx = createStringifyContext(doc, options);\n    const { commentString } = ctx.options;\n    if (doc.commentBefore) {\n        if (lines.length !== 1)\n            lines.unshift('');\n        const cs = commentString(doc.commentBefore);\n        lines.unshift(indentComment(cs, ''));\n    }\n    let chompKeep = false;\n    let contentComment = null;\n    if (doc.contents) {\n        if (isNode(doc.contents)) {\n            if (doc.contents.spaceBefore && hasDirectives)\n                lines.push('');\n            if (doc.contents.commentBefore) {\n                const cs = commentString(doc.contents.commentBefore);\n                lines.push(indentComment(cs, ''));\n            }\n            // top-level block scalars need to be indented if followed by a comment\n            ctx.forceBlockIndent = !!doc.comment;\n            contentComment = doc.contents.comment;\n        }\n        const onChompKeep = contentComment ? undefined : () => (chompKeep = true);\n        let body = stringify(doc.contents, ctx, () => (contentComment = null), onChompKeep);\n        if (contentComment)\n            body += lineComment(body, '', commentString(contentComment));\n        if ((body[0] === '|' || body[0] === '>') &&\n            lines[lines.length - 1] === '---') {\n            // Top-level block scalars with a preceding doc marker ought to use the\n            // same line for their header.\n            lines[lines.length - 1] = `--- ${body}`;\n        }\n        else\n            lines.push(body);\n    }\n    else {\n        lines.push(stringify(doc.contents, ctx));\n    }\n    if (doc.directives?.docEnd) {\n        if (doc.comment) {\n            const cs = commentString(doc.comment);\n            if (cs.includes('\\n')) {\n                lines.push('...');\n                lines.push(indentComment(cs, ''));\n            }\n            else {\n                lines.push(`... ${cs}`);\n            }\n        }\n        else {\n            lines.push('...');\n        }\n    }\n    else {\n        let dc = doc.comment;\n        if (dc && chompKeep)\n            dc = dc.replace(/^\\n+/, '');\n        if (dc) {\n            if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '')\n                lines.push('');\n            lines.push(indentComment(commentString(dc), ''));\n        }\n    }\n    return lines.join('\\n') + '\\n';\n}\n\nexport { stringifyDocument };\n","import { Alias } from '../nodes/Alias.js';\nimport { isEmptyPath, collectionFromPath } from '../nodes/Collection.js';\nimport { NODE_TYPE, DOC, isNode, isCollection, isScalar } from '../nodes/identity.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { toJS } from '../nodes/toJS.js';\nimport { Schema } from '../schema/Schema.js';\nimport { stringifyDocument } from '../stringify/stringifyDocument.js';\nimport { anchorNames, findNewAnchor, createNodeAnchors } from './anchors.js';\nimport { applyReviver } from './applyReviver.js';\nimport { createNode } from './createNode.js';\nimport { Directives } from './directives.js';\n\nclass Document {\n    constructor(value, replacer, options) {\n        /** A comment before this Document */\n        this.commentBefore = null;\n        /** A comment immediately after this Document */\n        this.comment = null;\n        /** Errors encountered during parsing. */\n        this.errors = [];\n        /** Warnings encountered during parsing. */\n        this.warnings = [];\n        Object.defineProperty(this, NODE_TYPE, { value: DOC });\n        let _replacer = null;\n        if (typeof replacer === 'function' || Array.isArray(replacer)) {\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const opt = Object.assign({\n            intAsBigInt: false,\n            keepSourceTokens: false,\n            logLevel: 'warn',\n            prettyErrors: true,\n            strict: true,\n            uniqueKeys: true,\n            version: '1.2'\n        }, options);\n        this.options = opt;\n        let { version } = opt;\n        if (options?._directives) {\n            this.directives = options._directives.atDocument();\n            if (this.directives.yaml.explicit)\n                version = this.directives.yaml.version;\n        }\n        else\n            this.directives = new Directives({ version });\n        this.setSchema(version, options);\n        // @ts-expect-error We can't really know that this matches Contents.\n        this.contents =\n            value === undefined ? null : this.createNode(value, _replacer, options);\n    }\n    /**\n     * Create a deep copy of this Document and its contents.\n     *\n     * Custom Node values that inherit from `Object` still refer to their original instances.\n     */\n    clone() {\n        const copy = Object.create(Document.prototype, {\n            [NODE_TYPE]: { value: DOC }\n        });\n        copy.commentBefore = this.commentBefore;\n        copy.comment = this.comment;\n        copy.errors = this.errors.slice();\n        copy.warnings = this.warnings.slice();\n        copy.options = Object.assign({}, this.options);\n        if (this.directives)\n            copy.directives = this.directives.clone();\n        copy.schema = this.schema.clone();\n        // @ts-expect-error We can't really know that this matches Contents.\n        copy.contents = isNode(this.contents)\n            ? this.contents.clone(copy.schema)\n            : this.contents;\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** Adds a value to the document. */\n    add(value) {\n        if (assertCollection(this.contents))\n            this.contents.add(value);\n    }\n    /** Adds a value to the document. */\n    addIn(path, value) {\n        if (assertCollection(this.contents))\n            this.contents.addIn(path, value);\n    }\n    /**\n     * Create a new `Alias` node, ensuring that the target `node` has the required anchor.\n     *\n     * If `node` already has an anchor, `name` is ignored.\n     * Otherwise, the `node.anchor` value will be set to `name`,\n     * or if an anchor with that name is already present in the document,\n     * `name` will be used as a prefix for a new unique anchor.\n     * If `name` is undefined, the generated anchor will use 'a' as a prefix.\n     */\n    createAlias(node, name) {\n        if (!node.anchor) {\n            const prev = anchorNames(this);\n            node.anchor =\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                !name || prev.has(name) ? findNewAnchor(name || 'a', prev) : name;\n        }\n        return new Alias(node.anchor);\n    }\n    createNode(value, replacer, options) {\n        let _replacer = undefined;\n        if (typeof replacer === 'function') {\n            value = replacer.call({ '': value }, '', value);\n            _replacer = replacer;\n        }\n        else if (Array.isArray(replacer)) {\n            const keyToStr = (v) => typeof v === 'number' || v instanceof String || v instanceof Number;\n            const asStr = replacer.filter(keyToStr).map(String);\n            if (asStr.length > 0)\n                replacer = replacer.concat(asStr);\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const { aliasDuplicateObjects, anchorPrefix, flow, keepUndefined, onTagObj, tag } = options ?? {};\n        const { onAnchor, setAnchors, sourceObjects } = createNodeAnchors(this, \n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        anchorPrefix || 'a');\n        const ctx = {\n            aliasDuplicateObjects: aliasDuplicateObjects ?? true,\n            keepUndefined: keepUndefined ?? false,\n            onAnchor,\n            onTagObj,\n            replacer: _replacer,\n            schema: this.schema,\n            sourceObjects\n        };\n        const node = createNode(value, tag, ctx);\n        if (flow && isCollection(node))\n            node.flow = true;\n        setAnchors();\n        return node;\n    }\n    /**\n     * Convert a key and a value into a `Pair` using the current schema,\n     * recursively wrapping all values as `Scalar` or `Collection` nodes.\n     */\n    createPair(key, value, options = {}) {\n        const k = this.createNode(key, null, options);\n        const v = this.createNode(value, null, options);\n        return new Pair(k, v);\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        return assertCollection(this.contents) ? this.contents.delete(key) : false;\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        if (isEmptyPath(path)) {\n            if (this.contents == null)\n                return false;\n            // @ts-expect-error Presumed impossible if Strict extends false\n            this.contents = null;\n            return true;\n        }\n        return assertCollection(this.contents)\n            ? this.contents.deleteIn(path)\n            : false;\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    get(key, keepScalar) {\n        return isCollection(this.contents)\n            ? this.contents.get(key, keepScalar)\n            : undefined;\n    }\n    /**\n     * Returns item at `path`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        if (isEmptyPath(path))\n            return !keepScalar && isScalar(this.contents)\n                ? this.contents.value\n                : this.contents;\n        return isCollection(this.contents)\n            ? this.contents.getIn(path, keepScalar)\n            : undefined;\n    }\n    /**\n     * Checks if the document includes a value with the key `key`.\n     */\n    has(key) {\n        return isCollection(this.contents) ? this.contents.has(key) : false;\n    }\n    /**\n     * Checks if the document includes a value at `path`.\n     */\n    hasIn(path) {\n        if (isEmptyPath(path))\n            return this.contents !== undefined;\n        return isCollection(this.contents) ? this.contents.hasIn(path) : false;\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    set(key, value) {\n        if (this.contents == null) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = collectionFromPath(this.schema, [key], value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.set(key, value);\n        }\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        if (isEmptyPath(path)) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = value;\n        }\n        else if (this.contents == null) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = collectionFromPath(this.schema, Array.from(path), value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.setIn(path, value);\n        }\n    }\n    /**\n     * Change the YAML version and schema used by the document.\n     * A `null` version disables support for directives, explicit tags, anchors, and aliases.\n     * It also requires the `schema` option to be given as a `Schema` instance value.\n     *\n     * Overrides all previously set schema options.\n     */\n    setSchema(version, options = {}) {\n        if (typeof version === 'number')\n            version = String(version);\n        let opt;\n        switch (version) {\n            case '1.1':\n                if (this.directives)\n                    this.directives.yaml.version = '1.1';\n                else\n                    this.directives = new Directives({ version: '1.1' });\n                opt = { merge: true, resolveKnownTags: false, schema: 'yaml-1.1' };\n                break;\n            case '1.2':\n            case 'next':\n                if (this.directives)\n                    this.directives.yaml.version = version;\n                else\n                    this.directives = new Directives({ version });\n                opt = { merge: false, resolveKnownTags: true, schema: 'core' };\n                break;\n            case null:\n                if (this.directives)\n                    delete this.directives;\n                opt = null;\n                break;\n            default: {\n                const sv = JSON.stringify(version);\n                throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${sv}`);\n            }\n        }\n        // Not using `instanceof Schema` to allow for duck typing\n        if (options.schema instanceof Object)\n            this.schema = options.schema;\n        else if (opt)\n            this.schema = new Schema(Object.assign(opt, options));\n        else\n            throw new Error(`With a null YAML version, the { schema: Schema } option is required`);\n    }\n    // json & jsonArg are only used from toJSON()\n    toJS({ json, jsonArg, mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        const ctx = {\n            anchors: new Map(),\n            doc: this,\n            keep: !json,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = toJS(this.contents, jsonArg ?? '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n    /**\n     * A JSON representation of the document `contents`.\n     *\n     * @param jsonArg Used by `JSON.stringify` to indicate the array index or\n     *   property name.\n     */\n    toJSON(jsonArg, onAnchor) {\n        return this.toJS({ json: true, jsonArg, mapAsMap: false, onAnchor });\n    }\n    /** A YAML representation of the document. */\n    toString(options = {}) {\n        if (this.errors.length > 0)\n            throw new Error('Document with errors cannot be stringified');\n        if ('indent' in options &&\n            (!Number.isInteger(options.indent) || Number(options.indent) <= 0)) {\n            const s = JSON.stringify(options.indent);\n            throw new Error(`\"indent\" option must be a positive integer, not ${s}`);\n        }\n        return stringifyDocument(this, options);\n    }\n}\nfunction assertCollection(contents) {\n    if (isCollection(contents))\n        return true;\n    throw new Error('Expected a YAML collection as document contents');\n}\n\nexport { Document };\n","class YAMLError extends Error {\n    constructor(name, pos, code, message) {\n        super();\n        this.name = name;\n        this.code = code;\n        this.message = message;\n        this.pos = pos;\n    }\n}\nclass YAMLParseError extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLParseError', pos, code, message);\n    }\n}\nclass YAMLWarning extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLWarning', pos, code, message);\n    }\n}\nconst prettifyError = (src, lc) => (error) => {\n    if (error.pos[0] === -1)\n        return;\n    error.linePos = error.pos.map(pos => lc.linePos(pos));\n    const { line, col } = error.linePos[0];\n    error.message += ` at line ${line}, column ${col}`;\n    let ci = col - 1;\n    let lineStr = src\n        .substring(lc.lineStarts[line - 1], lc.lineStarts[line])\n        .replace(/[\\n\\r]+$/, '');\n    // Trim to max 80 chars, keeping col position near the middle\n    if (ci >= 60 && lineStr.length > 80) {\n        const trimStart = Math.min(ci - 39, lineStr.length - 79);\n        lineStr = '…' + lineStr.substring(trimStart);\n        ci -= trimStart - 1;\n    }\n    if (lineStr.length > 80)\n        lineStr = lineStr.substring(0, 79) + '…';\n    // Include previous line in context if pointing at line start\n    if (line > 1 && /^ *$/.test(lineStr.substring(0, ci))) {\n        // Regexp won't match if start is trimmed\n        let prev = src.substring(lc.lineStarts[line - 2], lc.lineStarts[line - 1]);\n        if (prev.length > 80)\n            prev = prev.substring(0, 79) + '…\\n';\n        lineStr = prev + lineStr;\n    }\n    if (/[^ ]/.test(lineStr)) {\n        let count = 1;\n        const end = error.linePos[1];\n        if (end && end.line === line && end.col > col) {\n            count = Math.max(1, Math.min(end.col - col, 80 - ci));\n        }\n        const pointer = ' '.repeat(ci) + '^'.repeat(count);\n        error.message += `:\\n\\n${lineStr}\\n${pointer}\\n`;\n    }\n};\n\nexport { YAMLError, YAMLParseError, YAMLWarning, prettifyError };\n","function resolveProps(tokens, { flow, indicator, next, offset, onError, startOnNewline }) {\n    let spaceBefore = false;\n    let atNewline = startOnNewline;\n    let hasSpace = startOnNewline;\n    let comment = '';\n    let commentSep = '';\n    let hasNewline = false;\n    let hasNewlineAfterProp = false;\n    let reqSpace = false;\n    let anchor = null;\n    let tag = null;\n    let comma = null;\n    let found = null;\n    let start = null;\n    for (const token of tokens) {\n        if (reqSpace) {\n            if (token.type !== 'space' &&\n                token.type !== 'newline' &&\n                token.type !== 'comma')\n                onError(token.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n            reqSpace = false;\n        }\n        switch (token.type) {\n            case 'space':\n                // At the doc level, tabs at line start may be parsed\n                // as leading white space rather than indentation.\n                // In a flow collection, only the parser handles indent.\n                if (!flow &&\n                    atNewline &&\n                    indicator !== 'doc-start' &&\n                    token.source[0] === '\\t')\n                    onError(token, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n                hasSpace = true;\n                break;\n            case 'comment': {\n                if (!hasSpace)\n                    onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                const cb = token.source.substring(1) || ' ';\n                if (!comment)\n                    comment = cb;\n                else\n                    comment += commentSep + cb;\n                commentSep = '';\n                atNewline = false;\n                break;\n            }\n            case 'newline':\n                if (atNewline) {\n                    if (comment)\n                        comment += token.source;\n                    else\n                        spaceBefore = true;\n                }\n                else\n                    commentSep += token.source;\n                atNewline = true;\n                hasNewline = true;\n                if (anchor || tag)\n                    hasNewlineAfterProp = true;\n                hasSpace = true;\n                break;\n            case 'anchor':\n                if (anchor)\n                    onError(token, 'MULTIPLE_ANCHORS', 'A node can have at most one anchor');\n                if (token.source.endsWith(':'))\n                    onError(token.offset + token.source.length - 1, 'BAD_ALIAS', 'Anchor ending in : is ambiguous', true);\n                anchor = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            case 'tag': {\n                if (tag)\n                    onError(token, 'MULTIPLE_TAGS', 'A node can have at most one tag');\n                tag = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            }\n            case indicator:\n                // Could here handle preceding comments differently\n                if (anchor || tag)\n                    onError(token, 'BAD_PROP_ORDER', `Anchors and tags must be after the ${token.source} indicator`);\n                if (found)\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.source} in ${flow ?? 'collection'}`);\n                found = token;\n                atNewline = false;\n                hasSpace = false;\n                break;\n            case 'comma':\n                if (flow) {\n                    if (comma)\n                        onError(token, 'UNEXPECTED_TOKEN', `Unexpected , in ${flow}`);\n                    comma = token;\n                    atNewline = false;\n                    hasSpace = false;\n                    break;\n                }\n            // else fallthrough\n            default:\n                onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.type} token`);\n                atNewline = false;\n                hasSpace = false;\n        }\n    }\n    const last = tokens[tokens.length - 1];\n    const end = last ? last.offset + last.source.length : offset;\n    if (reqSpace &&\n        next &&\n        next.type !== 'space' &&\n        next.type !== 'newline' &&\n        next.type !== 'comma' &&\n        (next.type !== 'scalar' || next.source !== ''))\n        onError(next.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n    return {\n        comma,\n        found,\n        spaceBefore,\n        comment,\n        hasNewline,\n        hasNewlineAfterProp,\n        anchor,\n        tag,\n        end,\n        start: start ?? end\n    };\n}\n\nexport { resolveProps };\n","function containsNewline(key) {\n    if (!key)\n        return null;\n    switch (key.type) {\n        case 'alias':\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            if (key.source.includes('\\n'))\n                return true;\n            if (key.end)\n                for (const st of key.end)\n                    if (st.type === 'newline')\n                        return true;\n            return false;\n        case 'flow-collection':\n            for (const it of key.items) {\n                for (const st of it.start)\n                    if (st.type === 'newline')\n                        return true;\n                if (it.sep)\n                    for (const st of it.sep)\n                        if (st.type === 'newline')\n                            return true;\n                if (containsNewline(it.key) || containsNewline(it.value))\n                    return true;\n            }\n            return false;\n        default:\n            return true;\n    }\n}\n\nexport { containsNewline };\n","import { containsNewline } from './util-contains-newline.js';\n\nfunction flowIndentCheck(indent, fc, onError) {\n    if (fc?.type === 'flow-collection') {\n        const end = fc.end[0];\n        if (end.indent === indent &&\n            (end.source === ']' || end.source === '}') &&\n            containsNewline(fc)) {\n            const msg = 'Flow end indicator should be more indented than parent';\n            onError(end, 'BAD_INDENT', msg, true);\n        }\n    }\n}\n\nexport { flowIndentCheck };\n","import { isScalar } from '../nodes/identity.js';\n\nfunction mapIncludes(ctx, items, search) {\n    const { uniqueKeys } = ctx.options;\n    if (uniqueKeys === false)\n        return false;\n    const isEqual = typeof uniqueKeys === 'function'\n        ? uniqueKeys\n        : (a, b) => a === b ||\n            (isScalar(a) &&\n                isScalar(b) &&\n                a.value === b.value &&\n                !(a.value === '<<' && ctx.schema.merge));\n    return items.some(pair => isEqual(pair.key, search));\n}\n\nexport { mapIncludes };\n","import { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst startColMsg = 'All mapping items must start at the same column';\nfunction resolveBlockMap({ composeNode, composeEmptyNode }, ctx, bm, onError, tag) {\n    const NodeClass = tag?.nodeClass ?? YAMLMap;\n    const map = new NodeClass(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bm.offset;\n    let commentEnd = null;\n    for (const collItem of bm.items) {\n        const { start, key, sep, value } = collItem;\n        // key properties\n        const keyProps = resolveProps(start, {\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            startOnNewline: true\n        });\n        const implicitKey = !keyProps.found;\n        if (implicitKey) {\n            if (key) {\n                if (key.type === 'block-seq')\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'A block sequence may not be used as an implicit map key');\n                else if ('indent' in key && key.indent !== bm.indent)\n                    onError(offset, 'BAD_INDENT', startColMsg);\n            }\n            if (!keyProps.anchor && !keyProps.tag && !sep) {\n                commentEnd = keyProps.end;\n                if (keyProps.comment) {\n                    if (map.comment)\n                        map.comment += '\\n' + keyProps.comment;\n                    else\n                        map.comment = keyProps.comment;\n                }\n                continue;\n            }\n            if (keyProps.hasNewlineAfterProp || containsNewline(key)) {\n                onError(key ?? start[start.length - 1], 'MULTILINE_IMPLICIT_KEY', 'Implicit keys need to be on a single line');\n            }\n        }\n        else if (keyProps.found?.indent !== bm.indent) {\n            onError(offset, 'BAD_INDENT', startColMsg);\n        }\n        // key value\n        const keyStart = keyProps.end;\n        const keyNode = key\n            ? composeNode(ctx, key, keyProps, onError)\n            : composeEmptyNode(ctx, keyStart, start, null, keyProps, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bm.indent, key, onError);\n        if (mapIncludes(ctx, map.items, keyNode))\n            onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n        // value properties\n        const valueProps = resolveProps(sep ?? [], {\n            indicator: 'map-value-ind',\n            next: value,\n            offset: keyNode.range[2],\n            onError,\n            startOnNewline: !key || key.type === 'block-scalar'\n        });\n        offset = valueProps.end;\n        if (valueProps.found) {\n            if (implicitKey) {\n                if (value?.type === 'block-map' && !valueProps.hasNewline)\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'Nested mappings are not allowed in compact mappings');\n                if (ctx.options.strict &&\n                    keyProps.start < valueProps.found.offset - 1024)\n                    onError(keyNode.range, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit block mapping key');\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : composeEmptyNode(ctx, offset, sep, null, valueProps, onError);\n            if (ctx.schema.compat)\n                flowIndentCheck(bm.indent, value, onError);\n            offset = valueNode.range[2];\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n        else {\n            // key with no value\n            if (implicitKey)\n                onError(keyNode.range, 'MISSING_CHAR', 'Implicit map keys need to be followed by map values');\n            if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n    }\n    if (commentEnd && commentEnd < offset)\n        onError(commentEnd, 'IMPOSSIBLE', 'Map comment with trailing content');\n    map.range = [bm.offset, offset, commentEnd ?? offset];\n    return map;\n}\n\nexport { resolveBlockMap };\n","import { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveProps } from './resolve-props.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\n\nfunction resolveBlockSeq({ composeNode, composeEmptyNode }, ctx, bs, onError, tag) {\n    const NodeClass = tag?.nodeClass ?? YAMLSeq;\n    const seq = new NodeClass(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bs.offset;\n    let commentEnd = null;\n    for (const { start, value } of bs.items) {\n        const props = resolveProps(start, {\n            indicator: 'seq-item-ind',\n            next: value,\n            offset,\n            onError,\n            startOnNewline: true\n        });\n        if (!props.found) {\n            if (props.anchor || props.tag || value) {\n                if (value && value.type === 'block-seq')\n                    onError(props.end, 'BAD_INDENT', 'All sequence items must start at the same column');\n                else\n                    onError(offset, 'MISSING_CHAR', 'Sequence item without - indicator');\n            }\n            else {\n                commentEnd = props.end;\n                if (props.comment)\n                    seq.comment = props.comment;\n                continue;\n            }\n        }\n        const node = value\n            ? composeNode(ctx, value, props, onError)\n            : composeEmptyNode(ctx, props.end, start, null, props, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bs.indent, value, onError);\n        offset = node.range[2];\n        seq.items.push(node);\n    }\n    seq.range = [bs.offset, offset, commentEnd ?? offset];\n    return seq;\n}\n\nexport { resolveBlockSeq };\n","function resolveEnd(end, offset, reqSpace, onError) {\n    let comment = '';\n    if (end) {\n        let hasSpace = false;\n        let sep = '';\n        for (const token of end) {\n            const { source, type } = token;\n            switch (type) {\n                case 'space':\n                    hasSpace = true;\n                    break;\n                case 'comment': {\n                    if (reqSpace && !hasSpace)\n                        onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                    const cb = source.substring(1) || ' ';\n                    if (!comment)\n                        comment = cb;\n                    else\n                        comment += sep + cb;\n                    sep = '';\n                    break;\n                }\n                case 'newline':\n                    if (comment)\n                        sep += source;\n                    hasSpace = true;\n                    break;\n                default:\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${type} at node end`);\n            }\n            offset += source.length;\n        }\n    }\n    return { comment, offset };\n}\n\nexport { resolveEnd };\n","import { isPair } from '../nodes/identity.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst blockMsg = 'Block collections are not allowed within flow collections';\nconst isBlock = (token) => token && (token.type === 'block-map' || token.type === 'block-seq');\nfunction resolveFlowCollection({ composeNode, composeEmptyNode }, ctx, fc, onError, tag) {\n    const isMap = fc.start.source === '{';\n    const fcName = isMap ? 'flow map' : 'flow sequence';\n    const NodeClass = (tag?.nodeClass ?? (isMap ? YAMLMap : YAMLSeq));\n    const coll = new NodeClass(ctx.schema);\n    coll.flow = true;\n    const atRoot = ctx.atRoot;\n    if (atRoot)\n        ctx.atRoot = false;\n    let offset = fc.offset + fc.start.source.length;\n    for (let i = 0; i < fc.items.length; ++i) {\n        const collItem = fc.items[i];\n        const { start, key, sep, value } = collItem;\n        const props = resolveProps(start, {\n            flow: fcName,\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            startOnNewline: false\n        });\n        if (!props.found) {\n            if (!props.anchor && !props.tag && !sep && !value) {\n                if (i === 0 && props.comma)\n                    onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n                else if (i < fc.items.length - 1)\n                    onError(props.start, 'UNEXPECTED_TOKEN', `Unexpected empty item in ${fcName}`);\n                if (props.comment) {\n                    if (coll.comment)\n                        coll.comment += '\\n' + props.comment;\n                    else\n                        coll.comment = props.comment;\n                }\n                offset = props.end;\n                continue;\n            }\n            if (!isMap && ctx.options.strict && containsNewline(key))\n                onError(key, // checked by containsNewline()\n                'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n        }\n        if (i === 0) {\n            if (props.comma)\n                onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n        }\n        else {\n            if (!props.comma)\n                onError(props.start, 'MISSING_CHAR', `Missing , between ${fcName} items`);\n            if (props.comment) {\n                let prevItemComment = '';\n                loop: for (const st of start) {\n                    switch (st.type) {\n                        case 'comma':\n                        case 'space':\n                            break;\n                        case 'comment':\n                            prevItemComment = st.source.substring(1);\n                            break loop;\n                        default:\n                            break loop;\n                    }\n                }\n                if (prevItemComment) {\n                    let prev = coll.items[coll.items.length - 1];\n                    if (isPair(prev))\n                        prev = prev.value ?? prev.key;\n                    if (prev.comment)\n                        prev.comment += '\\n' + prevItemComment;\n                    else\n                        prev.comment = prevItemComment;\n                    props.comment = props.comment.substring(prevItemComment.length + 1);\n                }\n            }\n        }\n        if (!isMap && !sep && !props.found) {\n            // item is a value in a seq\n            // → key & sep are empty, start does not include ? or :\n            const valueNode = value\n                ? composeNode(ctx, value, props, onError)\n                : composeEmptyNode(ctx, props.end, sep, null, props, onError);\n            coll.items.push(valueNode);\n            offset = valueNode.range[2];\n            if (isBlock(value))\n                onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n        }\n        else {\n            // item is a key+value pair\n            // key value\n            const keyStart = props.end;\n            const keyNode = key\n                ? composeNode(ctx, key, props, onError)\n                : composeEmptyNode(ctx, keyStart, start, null, props, onError);\n            if (isBlock(key))\n                onError(keyNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            // value properties\n            const valueProps = resolveProps(sep ?? [], {\n                flow: fcName,\n                indicator: 'map-value-ind',\n                next: value,\n                offset: keyNode.range[2],\n                onError,\n                startOnNewline: false\n            });\n            if (valueProps.found) {\n                if (!isMap && !props.found && ctx.options.strict) {\n                    if (sep)\n                        for (const st of sep) {\n                            if (st === valueProps.found)\n                                break;\n                            if (st.type === 'newline') {\n                                onError(st, 'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n                                break;\n                            }\n                        }\n                    if (props.start < valueProps.found.offset - 1024)\n                        onError(valueProps.found, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit flow sequence key');\n                }\n            }\n            else if (value) {\n                if ('source' in value && value.source && value.source[0] === ':')\n                    onError(value, 'MISSING_CHAR', `Missing space after : in ${fcName}`);\n                else\n                    onError(valueProps.start, 'MISSING_CHAR', `Missing , or : between ${fcName} items`);\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : valueProps.found\n                    ? composeEmptyNode(ctx, valueProps.end, sep, null, valueProps, onError)\n                    : null;\n            if (valueNode) {\n                if (isBlock(value))\n                    onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            }\n            else if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            if (isMap) {\n                const map = coll;\n                if (mapIncludes(ctx, map.items, keyNode))\n                    onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n                map.items.push(pair);\n            }\n            else {\n                const map = new YAMLMap(ctx.schema);\n                map.flow = true;\n                map.items.push(pair);\n                coll.items.push(map);\n            }\n            offset = valueNode ? valueNode.range[2] : valueProps.end;\n        }\n    }\n    const expectedEnd = isMap ? '}' : ']';\n    const [ce, ...ee] = fc.end;\n    let cePos = offset;\n    if (ce && ce.source === expectedEnd)\n        cePos = ce.offset + ce.source.length;\n    else {\n        const name = fcName[0].toUpperCase() + fcName.substring(1);\n        const msg = atRoot\n            ? `${name} must end with a ${expectedEnd}`\n            : `${name} in block collection must be sufficiently indented and end with a ${expectedEnd}`;\n        onError(offset, atRoot ? 'MISSING_CHAR' : 'BAD_INDENT', msg);\n        if (ce && ce.source.length !== 1)\n            ee.unshift(ce);\n    }\n    if (ee.length > 0) {\n        const end = resolveEnd(ee, cePos, ctx.options.strict, onError);\n        if (end.comment) {\n            if (coll.comment)\n                coll.comment += '\\n' + end.comment;\n            else\n                coll.comment = end.comment;\n        }\n        coll.range = [fc.offset, cePos, end.offset];\n    }\n    else {\n        coll.range = [fc.offset, cePos, cePos];\n    }\n    return coll;\n}\n\nexport { resolveFlowCollection };\n","import { isNode } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveBlockMap } from './resolve-block-map.js';\nimport { resolveBlockSeq } from './resolve-block-seq.js';\nimport { resolveFlowCollection } from './resolve-flow-collection.js';\n\nfunction resolveCollection(CN, ctx, token, onError, tagName, tag) {\n    const coll = token.type === 'block-map'\n        ? resolveBlockMap(CN, ctx, token, onError, tag)\n        : token.type === 'block-seq'\n            ? resolveBlockSeq(CN, ctx, token, onError, tag)\n            : resolveFlowCollection(CN, ctx, token, onError, tag);\n    const Coll = coll.constructor;\n    // If we got a tagName matching the class, or the tag name is '!',\n    // then use the tagName from the node class used to create it.\n    if (tagName === '!' || tagName === Coll.tagName) {\n        coll.tag = Coll.tagName;\n        return coll;\n    }\n    if (tagName)\n        coll.tag = tagName;\n    return coll;\n}\nfunction composeCollection(CN, ctx, token, tagToken, onError) {\n    const tagName = !tagToken\n        ? null\n        : ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg));\n    const expType = token.type === 'block-map'\n        ? 'map'\n        : token.type === 'block-seq'\n            ? 'seq'\n            : token.start.source === '{'\n                ? 'map'\n                : 'seq';\n    // shortcut: check if it's a generic YAMLMap or YAMLSeq\n    // before jumping into the custom tag logic.\n    if (!tagToken ||\n        !tagName ||\n        tagName === '!' ||\n        (tagName === YAMLMap.tagName && expType === 'map') ||\n        (tagName === YAMLSeq.tagName && expType === 'seq') ||\n        !expType) {\n        return resolveCollection(CN, ctx, token, onError, tagName);\n    }\n    let tag = ctx.schema.tags.find(t => t.tag === tagName && t.collection === expType);\n    if (!tag) {\n        const kt = ctx.schema.knownTags[tagName];\n        if (kt && kt.collection === expType) {\n            ctx.schema.tags.push(Object.assign({}, kt, { default: false }));\n            tag = kt;\n        }\n        else {\n            if (kt?.collection) {\n                onError(tagToken, 'BAD_COLLECTION_TYPE', `${kt.tag} used for ${expType} collection, but expects ${kt.collection}`, true);\n            }\n            else {\n                onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, true);\n            }\n            return resolveCollection(CN, ctx, token, onError, tagName);\n        }\n    }\n    const coll = resolveCollection(CN, ctx, token, onError, tagName, tag);\n    const res = tag.resolve?.(coll, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg), ctx.options) ?? coll;\n    const node = isNode(res)\n        ? res\n        : new Scalar(res);\n    node.range = coll.range;\n    node.tag = tagName;\n    if (tag?.format)\n        node.format = tag.format;\n    return node;\n}\n\nexport { composeCollection };\n","import { Scalar } from '../nodes/Scalar.js';\n\nfunction resolveBlockScalar(scalar, strict, onError) {\n    const start = scalar.offset;\n    const header = parseBlockScalarHeader(scalar, strict, onError);\n    if (!header)\n        return { value: '', type: null, comment: '', range: [start, start, start] };\n    const type = header.mode === '>' ? Scalar.BLOCK_FOLDED : Scalar.BLOCK_LITERAL;\n    const lines = scalar.source ? splitLines(scalar.source) : [];\n    // determine the end of content & start of chomping\n    let chompStart = lines.length;\n    for (let i = lines.length - 1; i >= 0; --i) {\n        const content = lines[i][1];\n        if (content === '' || content === '\\r')\n            chompStart = i;\n        else\n            break;\n    }\n    // shortcut for empty contents\n    if (chompStart === 0) {\n        const value = header.chomp === '+' && lines.length > 0\n            ? '\\n'.repeat(Math.max(1, lines.length - 1))\n            : '';\n        let end = start + header.length;\n        if (scalar.source)\n            end += scalar.source.length;\n        return { value, type, comment: header.comment, range: [start, end, end] };\n    }\n    // find the indentation level to trim from start\n    let trimIndent = scalar.indent + header.indent;\n    let offset = scalar.offset + header.length;\n    let contentStart = 0;\n    for (let i = 0; i < chompStart; ++i) {\n        const [indent, content] = lines[i];\n        if (content === '' || content === '\\r') {\n            if (header.indent === 0 && indent.length > trimIndent)\n                trimIndent = indent.length;\n        }\n        else {\n            if (indent.length < trimIndent) {\n                const message = 'Block scalars with more-indented leading empty lines must use an explicit indentation indicator';\n                onError(offset + indent.length, 'MISSING_CHAR', message);\n            }\n            if (header.indent === 0)\n                trimIndent = indent.length;\n            contentStart = i;\n            break;\n        }\n        offset += indent.length + content.length + 1;\n    }\n    // include trailing more-indented empty lines in content\n    for (let i = lines.length - 1; i >= chompStart; --i) {\n        if (lines[i][0].length > trimIndent)\n            chompStart = i + 1;\n    }\n    let value = '';\n    let sep = '';\n    let prevMoreIndented = false;\n    // leading whitespace is kept intact\n    for (let i = 0; i < contentStart; ++i)\n        value += lines[i][0].slice(trimIndent) + '\\n';\n    for (let i = contentStart; i < chompStart; ++i) {\n        let [indent, content] = lines[i];\n        offset += indent.length + content.length + 1;\n        const crlf = content[content.length - 1] === '\\r';\n        if (crlf)\n            content = content.slice(0, -1);\n        /* istanbul ignore if already caught in lexer */\n        if (content && indent.length < trimIndent) {\n            const src = header.indent\n                ? 'explicit indentation indicator'\n                : 'first line';\n            const message = `Block scalar lines must not be less indented than their ${src}`;\n            onError(offset - content.length - (crlf ? 2 : 1), 'BAD_INDENT', message);\n            indent = '';\n        }\n        if (type === Scalar.BLOCK_LITERAL) {\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n        }\n        else if (indent.length > trimIndent || content[0] === '\\t') {\n            // more-indented content within a folded block\n            if (sep === ' ')\n                sep = '\\n';\n            else if (!prevMoreIndented && sep === '\\n')\n                sep = '\\n\\n';\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n            prevMoreIndented = true;\n        }\n        else if (content === '') {\n            // empty line\n            if (sep === '\\n')\n                value += '\\n';\n            else\n                sep = '\\n';\n        }\n        else {\n            value += sep + content;\n            sep = ' ';\n            prevMoreIndented = false;\n        }\n    }\n    switch (header.chomp) {\n        case '-':\n            break;\n        case '+':\n            for (let i = chompStart; i < lines.length; ++i)\n                value += '\\n' + lines[i][0].slice(trimIndent);\n            if (value[value.length - 1] !== '\\n')\n                value += '\\n';\n            break;\n        default:\n            value += '\\n';\n    }\n    const end = start + header.length + scalar.source.length;\n    return { value, type, comment: header.comment, range: [start, end, end] };\n}\nfunction parseBlockScalarHeader({ offset, props }, strict, onError) {\n    /* istanbul ignore if should not happen */\n    if (props[0].type !== 'block-scalar-header') {\n        onError(props[0], 'IMPOSSIBLE', 'Block scalar header not found');\n        return null;\n    }\n    const { source } = props[0];\n    const mode = source[0];\n    let indent = 0;\n    let chomp = '';\n    let error = -1;\n    for (let i = 1; i < source.length; ++i) {\n        const ch = source[i];\n        if (!chomp && (ch === '-' || ch === '+'))\n            chomp = ch;\n        else {\n            const n = Number(ch);\n            if (!indent && n)\n                indent = n;\n            else if (error === -1)\n                error = offset + i;\n        }\n    }\n    if (error !== -1)\n        onError(error, 'UNEXPECTED_TOKEN', `Block scalar header includes extra characters: ${source}`);\n    let hasSpace = false;\n    let comment = '';\n    let length = source.length;\n    for (let i = 1; i < props.length; ++i) {\n        const token = props[i];\n        switch (token.type) {\n            case 'space':\n                hasSpace = true;\n            // fallthrough\n            case 'newline':\n                length += token.source.length;\n                break;\n            case 'comment':\n                if (strict && !hasSpace) {\n                    const message = 'Comments must be separated from other tokens by white space characters';\n                    onError(token, 'MISSING_CHAR', message);\n                }\n                length += token.source.length;\n                comment = token.source.substring(1);\n                break;\n            case 'error':\n                onError(token, 'UNEXPECTED_TOKEN', token.message);\n                length += token.source.length;\n                break;\n            /* istanbul ignore next should not happen */\n            default: {\n                const message = `Unexpected token in block scalar header: ${token.type}`;\n                onError(token, 'UNEXPECTED_TOKEN', message);\n                const ts = token.source;\n                if (ts && typeof ts === 'string')\n                    length += ts.length;\n            }\n        }\n    }\n    return { mode, indent, chomp, comment, length };\n}\n/** @returns Array of lines split up as `[indent, content]` */\nfunction splitLines(source) {\n    const split = source.split(/\\n( *)/);\n    const first = split[0];\n    const m = first.match(/^( *)/);\n    const line0 = m?.[1]\n        ? [m[1], first.slice(m[1].length)]\n        : ['', first];\n    const lines = [line0];\n    for (let i = 1; i < split.length; i += 2)\n        lines.push([split[i], split[i + 1]]);\n    return lines;\n}\n\nexport { resolveBlockScalar };\n","import { Scalar } from '../nodes/Scalar.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction resolveFlowScalar(scalar, strict, onError) {\n    const { offset, type, source, end } = scalar;\n    let _type;\n    let value;\n    const _onError = (rel, code, msg) => onError(offset + rel, code, msg);\n    switch (type) {\n        case 'scalar':\n            _type = Scalar.PLAIN;\n            value = plainValue(source, _onError);\n            break;\n        case 'single-quoted-scalar':\n            _type = Scalar.QUOTE_SINGLE;\n            value = singleQuotedValue(source, _onError);\n            break;\n        case 'double-quoted-scalar':\n            _type = Scalar.QUOTE_DOUBLE;\n            value = doubleQuotedValue(source, _onError);\n            break;\n        /* istanbul ignore next should not happen */\n        default:\n            onError(scalar, 'UNEXPECTED_TOKEN', `Expected a flow scalar value, but found: ${type}`);\n            return {\n                value: '',\n                type: null,\n                comment: '',\n                range: [offset, offset + source.length, offset + source.length]\n            };\n    }\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, strict, onError);\n    return {\n        value,\n        type: _type,\n        comment: re.comment,\n        range: [offset, valueEnd, re.offset]\n    };\n}\nfunction plainValue(source, onError) {\n    let badChar = '';\n    switch (source[0]) {\n        /* istanbul ignore next should not happen */\n        case '\\t':\n            badChar = 'a tab character';\n            break;\n        case ',':\n            badChar = 'flow indicator character ,';\n            break;\n        case '%':\n            badChar = 'directive indicator character %';\n            break;\n        case '|':\n        case '>': {\n            badChar = `block scalar indicator ${source[0]}`;\n            break;\n        }\n        case '@':\n        case '`': {\n            badChar = `reserved character ${source[0]}`;\n            break;\n        }\n    }\n    if (badChar)\n        onError(0, 'BAD_SCALAR_START', `Plain value cannot start with ${badChar}`);\n    return foldLines(source);\n}\nfunction singleQuotedValue(source, onError) {\n    if (source[source.length - 1] !== \"'\" || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', \"Missing closing 'quote\");\n    return foldLines(source.slice(1, -1)).replace(/''/g, \"'\");\n}\nfunction foldLines(source) {\n    /**\n     * The negative lookbehind here and in the `re` RegExp is to\n     * prevent causing a polynomial search time in certain cases.\n     *\n     * The try-catch is for Safari, which doesn't support this yet:\n     * https://caniuse.com/js-regexp-lookbehind\n     */\n    let first, line;\n    try {\n        first = new RegExp('(.*?)(?<![ \\t])[ \\t]*\\r?\\n', 'sy');\n        line = new RegExp('[ \\t]*(.*?)(?:(?<![ \\t])[ \\t]*)?\\r?\\n', 'sy');\n    }\n    catch (_) {\n        first = /(.*?)[ \\t]*\\r?\\n/sy;\n        line = /[ \\t]*(.*?)[ \\t]*\\r?\\n/sy;\n    }\n    let match = first.exec(source);\n    if (!match)\n        return source;\n    let res = match[1];\n    let sep = ' ';\n    let pos = first.lastIndex;\n    line.lastIndex = pos;\n    while ((match = line.exec(source))) {\n        if (match[1] === '') {\n            if (sep === '\\n')\n                res += sep;\n            else\n                sep = '\\n';\n        }\n        else {\n            res += sep + match[1];\n            sep = ' ';\n        }\n        pos = line.lastIndex;\n    }\n    const last = /[ \\t]*(.*)/sy;\n    last.lastIndex = pos;\n    match = last.exec(source);\n    return res + sep + (match?.[1] ?? '');\n}\nfunction doubleQuotedValue(source, onError) {\n    let res = '';\n    for (let i = 1; i < source.length - 1; ++i) {\n        const ch = source[i];\n        if (ch === '\\r' && source[i + 1] === '\\n')\n            continue;\n        if (ch === '\\n') {\n            const { fold, offset } = foldNewline(source, i);\n            res += fold;\n            i = offset;\n        }\n        else if (ch === '\\\\') {\n            let next = source[++i];\n            const cc = escapeCodes[next];\n            if (cc)\n                res += cc;\n            else if (next === '\\n') {\n                // skip escaped newlines, but still trim the following line\n                next = source[i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === '\\r' && source[i + 1] === '\\n') {\n                // skip escaped CRLF newlines, but still trim the following line\n                next = source[++i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === 'x' || next === 'u' || next === 'U') {\n                const length = { x: 2, u: 4, U: 8 }[next];\n                res += parseCharCode(source, i + 1, length, onError);\n                i += length;\n            }\n            else {\n                const raw = source.substr(i - 1, 2);\n                onError(i - 1, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n                res += raw;\n            }\n        }\n        else if (ch === ' ' || ch === '\\t') {\n            // trim trailing whitespace\n            const wsStart = i;\n            let next = source[i + 1];\n            while (next === ' ' || next === '\\t')\n                next = source[++i + 1];\n            if (next !== '\\n' && !(next === '\\r' && source[i + 2] === '\\n'))\n                res += i > wsStart ? source.slice(wsStart, i + 1) : ch;\n        }\n        else {\n            res += ch;\n        }\n    }\n    if (source[source.length - 1] !== '\"' || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', 'Missing closing \"quote');\n    return res;\n}\n/**\n * Fold a single newline into a space, multiple newlines to N - 1 newlines.\n * Presumes `source[offset] === '\\n'`\n */\nfunction foldNewline(source, offset) {\n    let fold = '';\n    let ch = source[offset + 1];\n    while (ch === ' ' || ch === '\\t' || ch === '\\n' || ch === '\\r') {\n        if (ch === '\\r' && source[offset + 2] !== '\\n')\n            break;\n        if (ch === '\\n')\n            fold += '\\n';\n        offset += 1;\n        ch = source[offset + 1];\n    }\n    if (!fold)\n        fold = ' ';\n    return { fold, offset };\n}\nconst escapeCodes = {\n    '0': '\\0', // null character\n    a: '\\x07', // bell character\n    b: '\\b', // backspace\n    e: '\\x1b', // escape character\n    f: '\\f', // form feed\n    n: '\\n', // line feed\n    r: '\\r', // carriage return\n    t: '\\t', // horizontal tab\n    v: '\\v', // vertical tab\n    N: '\\u0085', // Unicode next line\n    _: '\\u00a0', // Unicode non-breaking space\n    L: '\\u2028', // Unicode line separator\n    P: '\\u2029', // Unicode paragraph separator\n    ' ': ' ',\n    '\"': '\"',\n    '/': '/',\n    '\\\\': '\\\\',\n    '\\t': '\\t'\n};\nfunction parseCharCode(source, offset, length, onError) {\n    const cc = source.substr(offset, length);\n    const ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);\n    const code = ok ? parseInt(cc, 16) : NaN;\n    if (isNaN(code)) {\n        const raw = source.substr(offset - 2, length + 2);\n        onError(offset - 2, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n        return raw;\n    }\n    return String.fromCodePoint(code);\n}\n\nexport { resolveFlowScalar };\n","import { SCALAR, isScalar } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockScalar } from './resolve-block-scalar.js';\nimport { resolveFlowScalar } from './resolve-flow-scalar.js';\n\nfunction composeScalar(ctx, token, tagToken, onError) {\n    const { value, type, comment, range } = token.type === 'block-scalar'\n        ? resolveBlockScalar(token, ctx.options.strict, onError)\n        : resolveFlowScalar(token, ctx.options.strict, onError);\n    const tagName = tagToken\n        ? ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg))\n        : null;\n    const tag = tagToken && tagName\n        ? findScalarTagByName(ctx.schema, value, tagName, tagToken, onError)\n        : token.type === 'scalar'\n            ? findScalarTagByTest(ctx, value, token, onError)\n            : ctx.schema[SCALAR];\n    let scalar;\n    try {\n        const res = tag.resolve(value, msg => onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n        scalar = isScalar(res) ? res : new Scalar(res);\n    }\n    catch (error) {\n        const msg = error instanceof Error ? error.message : String(error);\n        onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg);\n        scalar = new Scalar(value);\n    }\n    scalar.range = range;\n    scalar.source = value;\n    if (type)\n        scalar.type = type;\n    if (tagName)\n        scalar.tag = tagName;\n    if (tag.format)\n        scalar.format = tag.format;\n    if (comment)\n        scalar.comment = comment;\n    return scalar;\n}\nfunction findScalarTagByName(schema, value, tagName, tagToken, onError) {\n    if (tagName === '!')\n        return schema[SCALAR]; // non-specific tag\n    const matchWithTest = [];\n    for (const tag of schema.tags) {\n        if (!tag.collection && tag.tag === tagName) {\n            if (tag.default && tag.test)\n                matchWithTest.push(tag);\n            else\n                return tag;\n        }\n    }\n    for (const tag of matchWithTest)\n        if (tag.test?.test(value))\n            return tag;\n    const kt = schema.knownTags[tagName];\n    if (kt && !kt.collection) {\n        // Ensure that the known tag is available for stringifying,\n        // but does not get used by default.\n        schema.tags.push(Object.assign({}, kt, { default: false, test: undefined }));\n        return kt;\n    }\n    onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, tagName !== 'tag:yaml.org,2002:str');\n    return schema[SCALAR];\n}\nfunction findScalarTagByTest({ directives, schema }, value, token, onError) {\n    const tag = schema.tags.find(tag => tag.default && tag.test?.test(value)) || schema[SCALAR];\n    if (schema.compat) {\n        const compat = schema.compat.find(tag => tag.default && tag.test?.test(value)) ??\n            schema[SCALAR];\n        if (tag.tag !== compat.tag) {\n            const ts = directives.tagString(tag.tag);\n            const cs = directives.tagString(compat.tag);\n            const msg = `Value may be parsed as either ${ts} or ${cs}`;\n            onError(token, 'TAG_RESOLVE_FAILED', msg, true);\n        }\n    }\n    return tag;\n}\n\nexport { composeScalar };\n","function emptyScalarPosition(offset, before, pos) {\n    if (before) {\n        if (pos === null)\n            pos = before.length;\n        for (let i = pos - 1; i >= 0; --i) {\n            let st = before[i];\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                case 'newline':\n                    offset -= st.source.length;\n                    continue;\n            }\n            // Technically, an empty scalar is immediately after the last non-empty\n            // node, but it's more useful to place it after any whitespace.\n            st = before[++i];\n            while (st?.type === 'space') {\n                offset += st.source.length;\n                st = before[++i];\n            }\n            break;\n        }\n    }\n    return offset;\n}\n\nexport { emptyScalarPosition };\n","import { Alias } from '../nodes/Alias.js';\nimport { composeCollection } from './compose-collection.js';\nimport { composeScalar } from './compose-scalar.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { emptyScalarPosition } from './util-empty-scalar-position.js';\n\nconst CN = { composeNode, composeEmptyNode };\nfunction composeNode(ctx, token, props, onError) {\n    const { spaceBefore, comment, anchor, tag } = props;\n    let node;\n    let isSrcToken = true;\n    switch (token.type) {\n        case 'alias':\n            node = composeAlias(ctx, token, onError);\n            if (anchor || tag)\n                onError(token, 'ALIAS_PROPS', 'An alias node must not specify any properties');\n            break;\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'block-scalar':\n            node = composeScalar(ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        case 'block-map':\n        case 'block-seq':\n        case 'flow-collection':\n            node = composeCollection(CN, ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        default: {\n            const message = token.type === 'error'\n                ? token.message\n                : `Unsupported token (type: ${token.type})`;\n            onError(token, 'UNEXPECTED_TOKEN', message);\n            node = composeEmptyNode(ctx, token.offset, undefined, null, props, onError);\n            isSrcToken = false;\n        }\n    }\n    if (anchor && node.anchor === '')\n        onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        if (token.type === 'scalar' && token.source === '')\n            node.comment = comment;\n        else\n            node.commentBefore = comment;\n    }\n    // @ts-expect-error Type checking misses meaning of isSrcToken\n    if (ctx.options.keepSourceTokens && isSrcToken)\n        node.srcToken = token;\n    return node;\n}\nfunction composeEmptyNode(ctx, offset, before, pos, { spaceBefore, comment, anchor, tag, end }, onError) {\n    const token = {\n        type: 'scalar',\n        offset: emptyScalarPosition(offset, before, pos),\n        indent: -1,\n        source: ''\n    };\n    const node = composeScalar(ctx, token, tag, onError);\n    if (anchor) {\n        node.anchor = anchor.source.substring(1);\n        if (node.anchor === '')\n            onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        node.comment = comment;\n        node.range[2] = end;\n    }\n    return node;\n}\nfunction composeAlias({ options }, { offset, source, end }, onError) {\n    const alias = new Alias(source.substring(1));\n    if (alias.source === '')\n        onError(offset, 'BAD_ALIAS', 'Alias cannot be an empty string');\n    if (alias.source.endsWith(':'))\n        onError(offset + source.length - 1, 'BAD_ALIAS', 'Alias ending in : is ambiguous', true);\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, options.strict, onError);\n    alias.range = [offset, valueEnd, re.offset];\n    if (re.comment)\n        alias.comment = re.comment;\n    return alias;\n}\n\nexport { composeEmptyNode, composeNode };\n","import { Document } from '../doc/Document.js';\nimport { composeNode, composeEmptyNode } from './compose-node.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\n\nfunction composeDoc(options, directives, { offset, start, value, end }, onError) {\n    const opts = Object.assign({ _directives: directives }, options);\n    const doc = new Document(undefined, opts);\n    const ctx = {\n        atRoot: true,\n        directives: doc.directives,\n        options: doc.options,\n        schema: doc.schema\n    };\n    const props = resolveProps(start, {\n        indicator: 'doc-start',\n        next: value ?? end?.[0],\n        offset,\n        onError,\n        startOnNewline: true\n    });\n    if (props.found) {\n        doc.directives.docStart = true;\n        if (value &&\n            (value.type === 'block-map' || value.type === 'block-seq') &&\n            !props.hasNewline)\n            onError(props.end, 'MISSING_CHAR', 'Block collection cannot start on same line with directives-end marker');\n    }\n    // @ts-expect-error If Contents is set, let's trust the user\n    doc.contents = value\n        ? composeNode(ctx, value, props, onError)\n        : composeEmptyNode(ctx, props.end, start, null, props, onError);\n    const contentEnd = doc.contents.range[2];\n    const re = resolveEnd(end, contentEnd, false, onError);\n    if (re.comment)\n        doc.comment = re.comment;\n    doc.range = [offset, contentEnd, re.offset];\n    return doc;\n}\n\nexport { composeDoc };\n","import { Directives } from '../doc/directives.js';\nimport { Document } from '../doc/Document.js';\nimport { YAMLWarning, YAMLParseError } from '../errors.js';\nimport { isCollection, isPair } from '../nodes/identity.js';\nimport { composeDoc } from './compose-doc.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction getErrorPos(src) {\n    if (typeof src === 'number')\n        return [src, src + 1];\n    if (Array.isArray(src))\n        return src.length === 2 ? src : [src[0], src[1]];\n    const { offset, source } = src;\n    return [offset, offset + (typeof source === 'string' ? source.length : 1)];\n}\nfunction parsePrelude(prelude) {\n    let comment = '';\n    let atComment = false;\n    let afterEmptyLine = false;\n    for (let i = 0; i < prelude.length; ++i) {\n        const source = prelude[i];\n        switch (source[0]) {\n            case '#':\n                comment +=\n                    (comment === '' ? '' : afterEmptyLine ? '\\n\\n' : '\\n') +\n                        (source.substring(1) || ' ');\n                atComment = true;\n                afterEmptyLine = false;\n                break;\n            case '%':\n                if (prelude[i + 1]?.[0] !== '#')\n                    i += 1;\n                atComment = false;\n                break;\n            default:\n                // This may be wrong after doc-end, but in that case it doesn't matter\n                if (!atComment)\n                    afterEmptyLine = true;\n                atComment = false;\n        }\n    }\n    return { comment, afterEmptyLine };\n}\n/**\n * Compose a stream of CST nodes into a stream of YAML Documents.\n *\n * ```ts\n * import { Composer, Parser } from 'yaml'\n *\n * const src: string = ...\n * const tokens = new Parser().parse(src)\n * const docs = new Composer().compose(tokens)\n * ```\n */\nclass Composer {\n    constructor(options = {}) {\n        this.doc = null;\n        this.atDirectives = false;\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n        this.onError = (source, code, message, warning) => {\n            const pos = getErrorPos(source);\n            if (warning)\n                this.warnings.push(new YAMLWarning(pos, code, message));\n            else\n                this.errors.push(new YAMLParseError(pos, code, message));\n        };\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        this.directives = new Directives({ version: options.version || '1.2' });\n        this.options = options;\n    }\n    decorate(doc, afterDoc) {\n        const { comment, afterEmptyLine } = parsePrelude(this.prelude);\n        //console.log({ dc: doc.comment, prelude, comment })\n        if (comment) {\n            const dc = doc.contents;\n            if (afterDoc) {\n                doc.comment = doc.comment ? `${doc.comment}\\n${comment}` : comment;\n            }\n            else if (afterEmptyLine || doc.directives.docStart || !dc) {\n                doc.commentBefore = comment;\n            }\n            else if (isCollection(dc) && !dc.flow && dc.items.length > 0) {\n                let it = dc.items[0];\n                if (isPair(it))\n                    it = it.key;\n                const cb = it.commentBefore;\n                it.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n            else {\n                const cb = dc.commentBefore;\n                dc.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n        }\n        if (afterDoc) {\n            Array.prototype.push.apply(doc.errors, this.errors);\n            Array.prototype.push.apply(doc.warnings, this.warnings);\n        }\n        else {\n            doc.errors = this.errors;\n            doc.warnings = this.warnings;\n        }\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n    }\n    /**\n     * Current stream status information.\n     *\n     * Mostly useful at the end of input for an empty stream.\n     */\n    streamInfo() {\n        return {\n            comment: parsePrelude(this.prelude).comment,\n            directives: this.directives,\n            errors: this.errors,\n            warnings: this.warnings\n        };\n    }\n    /**\n     * Compose tokens into documents.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *compose(tokens, forceDoc = false, endOffset = -1) {\n        for (const token of tokens)\n            yield* this.next(token);\n        yield* this.end(forceDoc, endOffset);\n    }\n    /** Advance the composer by one CST token. */\n    *next(token) {\n        switch (token.type) {\n            case 'directive':\n                this.directives.add(token.source, (offset, message, warning) => {\n                    const pos = getErrorPos(token);\n                    pos[0] += offset;\n                    this.onError(pos, 'BAD_DIRECTIVE', message, warning);\n                });\n                this.prelude.push(token.source);\n                this.atDirectives = true;\n                break;\n            case 'document': {\n                const doc = composeDoc(this.options, this.directives, token, this.onError);\n                if (this.atDirectives && !doc.directives.docStart)\n                    this.onError(token, 'MISSING_CHAR', 'Missing directives-end/doc-start indicator line');\n                this.decorate(doc, false);\n                if (this.doc)\n                    yield this.doc;\n                this.doc = doc;\n                this.atDirectives = false;\n                break;\n            }\n            case 'byte-order-mark':\n            case 'space':\n                break;\n            case 'comment':\n            case 'newline':\n                this.prelude.push(token.source);\n                break;\n            case 'error': {\n                const msg = token.source\n                    ? `${token.message}: ${JSON.stringify(token.source)}`\n                    : token.message;\n                const error = new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg);\n                if (this.atDirectives || !this.doc)\n                    this.errors.push(error);\n                else\n                    this.doc.errors.push(error);\n                break;\n            }\n            case 'doc-end': {\n                if (!this.doc) {\n                    const msg = 'Unexpected doc-end without preceding document';\n                    this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg));\n                    break;\n                }\n                this.doc.directives.docEnd = true;\n                const end = resolveEnd(token.end, token.offset + token.source.length, this.doc.options.strict, this.onError);\n                this.decorate(this.doc, true);\n                if (end.comment) {\n                    const dc = this.doc.comment;\n                    this.doc.comment = dc ? `${dc}\\n${end.comment}` : end.comment;\n                }\n                this.doc.range[2] = end.offset;\n                break;\n            }\n            default:\n                this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', `Unsupported token ${token.type}`));\n        }\n    }\n    /**\n     * Call at end of input to yield any remaining document.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *end(forceDoc = false, endOffset = -1) {\n        if (this.doc) {\n            this.decorate(this.doc, true);\n            yield this.doc;\n            this.doc = null;\n        }\n        else if (forceDoc) {\n            const opts = Object.assign({ _directives: this.directives }, this.options);\n            const doc = new Document(undefined, opts);\n            if (this.atDirectives)\n                this.onError(endOffset, 'MISSING_CHAR', 'Missing directives-end indicator line');\n            doc.range = [0, endOffset, endOffset];\n            this.decorate(doc, false);\n            yield doc;\n        }\n    }\n}\n\nexport { Composer };\n","import { resolveBlockScalar } from '../compose/resolve-block-scalar.js';\nimport { resolveFlowScalar } from '../compose/resolve-flow-scalar.js';\nimport { YAMLParseError } from '../errors.js';\nimport { stringifyString } from '../stringify/stringifyString.js';\n\nfunction resolveAsScalar(token, strict = true, onError) {\n    if (token) {\n        const _onError = (pos, code, message) => {\n            const offset = typeof pos === 'number' ? pos : Array.isArray(pos) ? pos[0] : pos.offset;\n            if (onError)\n                onError(offset, code, message);\n            else\n                throw new YAMLParseError([offset, offset + 1], code, message);\n        };\n        switch (token.type) {\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return resolveFlowScalar(token, strict, _onError);\n            case 'block-scalar':\n                return resolveBlockScalar(token, strict, _onError);\n        }\n    }\n    return null;\n}\n/**\n * Create a new scalar token with `value`\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.end Comments and whitespace after the end of the value, or after the block scalar header. If undefined, a newline will be added.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.indent The indent level of the token.\n * @param context.inFlow Is this scalar within a flow collection? This may affect the resolved type of the token's value.\n * @param context.offset The offset position of the token.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction createScalarToken(value, context) {\n    const { implicitKey = false, indent, inFlow = false, offset = -1, type = 'PLAIN' } = context;\n    const source = stringifyString({ type, value }, {\n        implicitKey,\n        indent: indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    const end = context.end ?? [\n        { type: 'newline', offset: -1, indent, source: '\\n' }\n    ];\n    switch (source[0]) {\n        case '|':\n        case '>': {\n            const he = source.indexOf('\\n');\n            const head = source.substring(0, he);\n            const body = source.substring(he + 1) + '\\n';\n            const props = [\n                { type: 'block-scalar-header', offset, indent, source: head }\n            ];\n            if (!addEndtoBlockProps(props, end))\n                props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n            return { type: 'block-scalar', offset, indent, props, source: body };\n        }\n        case '\"':\n            return { type: 'double-quoted-scalar', offset, indent, source, end };\n        case \"'\":\n            return { type: 'single-quoted-scalar', offset, indent, source, end };\n        default:\n            return { type: 'scalar', offset, indent, source, end };\n    }\n}\n/**\n * Set the value of `token` to the given string `value`, overwriting any previous contents and type that it may have.\n *\n * Best efforts are made to retain any comments previously associated with the `token`,\n * though all contents within a collection's `items` will be overwritten.\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param token Any token. If it does not include an `indent` value, the value will be stringified as if it were an implicit key.\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.afterKey In most cases, values after a key should have an additional level of indentation.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.inFlow Being within a flow collection may affect the resolved type of the token's value.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction setScalarValue(token, value, context = {}) {\n    let { afterKey = false, implicitKey = false, inFlow = false, type } = context;\n    let indent = 'indent' in token ? token.indent : null;\n    if (afterKey && typeof indent === 'number')\n        indent += 2;\n    if (!type)\n        switch (token.type) {\n            case 'single-quoted-scalar':\n                type = 'QUOTE_SINGLE';\n                break;\n            case 'double-quoted-scalar':\n                type = 'QUOTE_DOUBLE';\n                break;\n            case 'block-scalar': {\n                const header = token.props[0];\n                if (header.type !== 'block-scalar-header')\n                    throw new Error('Invalid block scalar header');\n                type = header.source[0] === '>' ? 'BLOCK_FOLDED' : 'BLOCK_LITERAL';\n                break;\n            }\n            default:\n                type = 'PLAIN';\n        }\n    const source = stringifyString({ type, value }, {\n        implicitKey: implicitKey || indent === null,\n        indent: indent !== null && indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    switch (source[0]) {\n        case '|':\n        case '>':\n            setBlockScalarValue(token, source);\n            break;\n        case '\"':\n            setFlowScalarValue(token, source, 'double-quoted-scalar');\n            break;\n        case \"'\":\n            setFlowScalarValue(token, source, 'single-quoted-scalar');\n            break;\n        default:\n            setFlowScalarValue(token, source, 'scalar');\n    }\n}\nfunction setBlockScalarValue(token, source) {\n    const he = source.indexOf('\\n');\n    const head = source.substring(0, he);\n    const body = source.substring(he + 1) + '\\n';\n    if (token.type === 'block-scalar') {\n        const header = token.props[0];\n        if (header.type !== 'block-scalar-header')\n            throw new Error('Invalid block scalar header');\n        header.source = head;\n        token.source = body;\n    }\n    else {\n        const { offset } = token;\n        const indent = 'indent' in token ? token.indent : -1;\n        const props = [\n            { type: 'block-scalar-header', offset, indent, source: head }\n        ];\n        if (!addEndtoBlockProps(props, 'end' in token ? token.end : undefined))\n            props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n        for (const key of Object.keys(token))\n            if (key !== 'type' && key !== 'offset')\n                delete token[key];\n        Object.assign(token, { type: 'block-scalar', indent, props, source: body });\n    }\n}\n/** @returns `true` if last token is a newline */\nfunction addEndtoBlockProps(props, end) {\n    if (end)\n        for (const st of end)\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                    props.push(st);\n                    break;\n                case 'newline':\n                    props.push(st);\n                    return true;\n            }\n    return false;\n}\nfunction setFlowScalarValue(token, source, type) {\n    switch (token.type) {\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            token.type = type;\n            token.source = source;\n            break;\n        case 'block-scalar': {\n            const end = token.props.slice(1);\n            let oa = source.length;\n            if (token.props[0].type === 'block-scalar-header')\n                oa -= token.props[0].source.length;\n            for (const tok of end)\n                tok.offset += oa;\n            delete token.props;\n            Object.assign(token, { type, source, end });\n            break;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            const offset = token.offset + source.length;\n            const nl = { type: 'newline', offset, indent: token.indent, source: '\\n' };\n            delete token.items;\n            Object.assign(token, { type, source, end: [nl] });\n            break;\n        }\n        default: {\n            const indent = 'indent' in token ? token.indent : -1;\n            const end = 'end' in token && Array.isArray(token.end)\n                ? token.end.filter(st => st.type === 'space' ||\n                    st.type === 'comment' ||\n                    st.type === 'newline')\n                : [];\n            for (const key of Object.keys(token))\n                if (key !== 'type' && key !== 'offset')\n                    delete token[key];\n            Object.assign(token, { type, indent, source, end });\n        }\n    }\n}\n\nexport { createScalarToken, resolveAsScalar, setScalarValue };\n","/**\n * Stringify a CST document, token, or collection item\n *\n * Fair warning: This applies no validation whatsoever, and\n * simply concatenates the sources in their logical order.\n */\nconst stringify = (cst) => 'type' in cst ? stringifyToken(cst) : stringifyItem(cst);\nfunction stringifyToken(token) {\n    switch (token.type) {\n        case 'block-scalar': {\n            let res = '';\n            for (const tok of token.props)\n                res += stringifyToken(tok);\n            return res + token.source;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            let res = '';\n            for (const item of token.items)\n                res += stringifyItem(item);\n            return res;\n        }\n        case 'flow-collection': {\n            let res = token.start.source;\n            for (const item of token.items)\n                res += stringifyItem(item);\n            for (const st of token.end)\n                res += st.source;\n            return res;\n        }\n        case 'document': {\n            let res = stringifyItem(token);\n            if (token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n        default: {\n            let res = token.source;\n            if ('end' in token && token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n    }\n}\nfunction stringifyItem({ start, key, sep, value }) {\n    let res = '';\n    for (const st of start)\n        res += st.source;\n    if (key)\n        res += stringifyToken(key);\n    if (sep)\n        for (const st of sep)\n            res += st.source;\n    if (value)\n        res += stringifyToken(value);\n    return res;\n}\n\nexport { stringify };\n","const BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove item');\n/**\n * Apply a visitor to a CST document or item.\n *\n * Walks through the tree (depth-first) starting from the root, calling a\n * `visitor` function with two arguments when entering each item:\n *   - `item`: The current item, which included the following members:\n *     - `start: SourceToken[]` – Source tokens before the key or value,\n *       possibly including its anchor or tag.\n *     - `key?: Token | null` – Set for pair values. May then be `null`, if\n *       the key before the `:` separator is empty.\n *     - `sep?: SourceToken[]` – Source tokens between the key and the value,\n *       which should include the `:` map value indicator if `value` is set.\n *     - `value?: Token` – The value of a sequence item, or of a map pair.\n *   - `path`: The steps from the root to the current node, as an array of\n *     `['key' | 'value', number]` tuples.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this token, continue with\n *      next sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current item, then continue with the next one\n *   - `number`: Set the index of the next step. This is useful especially if\n *     the index of the current token has changed.\n *   - `function`: Define the next visitor for this item. After the original\n *     visitor is called on item entry, next visitors are called after handling\n *     a non-empty `key` and when exiting the item.\n */\nfunction visit(cst, visitor) {\n    if ('type' in cst && cst.type === 'document')\n        cst = { start: cst.start, value: cst.value };\n    _visit(Object.freeze([]), cst, visitor);\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current item */\nvisit.SKIP = SKIP;\n/** Remove the current item */\nvisit.REMOVE = REMOVE;\n/** Find the item at `path` from `cst` as the root */\nvisit.itemAtPath = (cst, path) => {\n    let item = cst;\n    for (const [field, index] of path) {\n        const tok = item?.[field];\n        if (tok && 'items' in tok) {\n            item = tok.items[index];\n        }\n        else\n            return undefined;\n    }\n    return item;\n};\n/**\n * Get the immediate parent collection of the item at `path` from `cst` as the root.\n *\n * Throws an error if the collection is not found, which should never happen if the item itself exists.\n */\nvisit.parentCollection = (cst, path) => {\n    const parent = visit.itemAtPath(cst, path.slice(0, -1));\n    const field = path[path.length - 1][0];\n    const coll = parent?.[field];\n    if (coll && 'items' in coll)\n        return coll;\n    throw new Error('Parent collection not found');\n};\nfunction _visit(path, item, visitor) {\n    let ctrl = visitor(item, path);\n    if (typeof ctrl === 'symbol')\n        return ctrl;\n    for (const field of ['key', 'value']) {\n        const token = item[field];\n        if (token && 'items' in token) {\n            for (let i = 0; i < token.items.length; ++i) {\n                const ci = _visit(Object.freeze(path.concat([[field, i]])), token.items[i], visitor);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    token.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n            if (typeof ctrl === 'function' && field === 'key')\n                ctrl = ctrl(item, path);\n        }\n    }\n    return typeof ctrl === 'function' ? ctrl(item, path) : ctrl;\n}\n\nexport { visit };\n","export { createScalarToken, resolveAsScalar, setScalarValue } from './cst-scalar.js';\nexport { stringify } from './cst-stringify.js';\nexport { visit } from './cst-visit.js';\n\n/** The byte order mark */\nconst BOM = '\\u{FEFF}';\n/** Start of doc-mode */\nconst DOCUMENT = '\\x02'; // C0: Start of Text\n/** Unexpected end of flow-mode */\nconst FLOW_END = '\\x18'; // C0: Cancel\n/** Next token is a scalar value */\nconst SCALAR = '\\x1f'; // C0: Unit Separator\n/** @returns `true` if `token` is a flow or block collection */\nconst isCollection = (token) => !!token && 'items' in token;\n/** @returns `true` if `token` is a flow or block scalar; not an alias */\nconst isScalar = (token) => !!token &&\n    (token.type === 'scalar' ||\n        token.type === 'single-quoted-scalar' ||\n        token.type === 'double-quoted-scalar' ||\n        token.type === 'block-scalar');\n/* istanbul ignore next */\n/** Get a printable representation of a lexer token */\nfunction prettyToken(token) {\n    switch (token) {\n        case BOM:\n            return '<BOM>';\n        case DOCUMENT:\n            return '<DOC>';\n        case FLOW_END:\n            return '<FLOW_END>';\n        case SCALAR:\n            return '<SCALAR>';\n        default:\n            return JSON.stringify(token);\n    }\n}\n/** Identify the type of a lexer token. May return `null` for unknown tokens. */\nfunction tokenType(source) {\n    switch (source) {\n        case BOM:\n            return 'byte-order-mark';\n        case DOCUMENT:\n            return 'doc-mode';\n        case FLOW_END:\n            return 'flow-error-end';\n        case SCALAR:\n            return 'scalar';\n        case '---':\n            return 'doc-start';\n        case '...':\n            return 'doc-end';\n        case '':\n        case '\\n':\n        case '\\r\\n':\n            return 'newline';\n        case '-':\n            return 'seq-item-ind';\n        case '?':\n            return 'explicit-key-ind';\n        case ':':\n            return 'map-value-ind';\n        case '{':\n            return 'flow-map-start';\n        case '}':\n            return 'flow-map-end';\n        case '[':\n            return 'flow-seq-start';\n        case ']':\n            return 'flow-seq-end';\n        case ',':\n            return 'comma';\n    }\n    switch (source[0]) {\n        case ' ':\n        case '\\t':\n            return 'space';\n        case '#':\n            return 'comment';\n        case '%':\n            return 'directive-line';\n        case '*':\n            return 'alias';\n        case '&':\n            return 'anchor';\n        case '!':\n            return 'tag';\n        case \"'\":\n            return 'single-quoted-scalar';\n        case '\"':\n            return 'double-quoted-scalar';\n        case '|':\n        case '>':\n            return 'block-scalar-header';\n    }\n    return null;\n}\n\nexport { BOM, DOCUMENT, FLOW_END, SCALAR, isCollection, isScalar, prettyToken, tokenType };\n","import { BOM, DOCUMENT, FLOW_END, SCALAR } from './cst.js';\n\n/*\nSTART -> stream\n\nstream\n  directive -> line-end -> stream\n  indent + line-end -> stream\n  [else] -> line-start\n\nline-end\n  comment -> line-end\n  newline -> .\n  input-end -> END\n\nline-start\n  doc-start -> doc\n  doc-end -> stream\n  [else] -> indent -> block-start\n\nblock-start\n  seq-item-start -> block-start\n  explicit-key-start -> block-start\n  map-value-start -> block-start\n  [else] -> doc\n\ndoc\n  line-end -> line-start\n  spaces -> doc\n  anchor -> doc\n  tag -> doc\n  flow-start -> flow -> doc\n  flow-end -> error -> doc\n  seq-item-start -> error -> doc\n  explicit-key-start -> error -> doc\n  map-value-start -> doc\n  alias -> doc\n  quote-start -> quoted-scalar -> doc\n  block-scalar-header -> line-end -> block-scalar(min) -> line-start\n  [else] -> plain-scalar(false, min) -> doc\n\nflow\n  line-end -> flow\n  spaces -> flow\n  anchor -> flow\n  tag -> flow\n  flow-start -> flow -> flow\n  flow-end -> .\n  seq-item-start -> error -> flow\n  explicit-key-start -> flow\n  map-value-start -> flow\n  alias -> flow\n  quote-start -> quoted-scalar -> flow\n  comma -> flow\n  [else] -> plain-scalar(true, 0) -> flow\n\nquoted-scalar\n  quote-end -> .\n  [else] -> quoted-scalar\n\nblock-scalar(min)\n  newline + peek(indent < min) -> .\n  [else] -> block-scalar(min)\n\nplain-scalar(is-flow, min)\n  scalar-end(is-flow) -> .\n  peek(newline + (indent < min)) -> .\n  [else] -> plain-scalar(min)\n*/\nfunction isEmpty(ch) {\n    switch (ch) {\n        case undefined:\n        case ' ':\n        case '\\n':\n        case '\\r':\n        case '\\t':\n            return true;\n        default:\n            return false;\n    }\n}\nconst hexDigits = '0123456789ABCDEFabcdef'.split('');\nconst tagChars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-#;/?:@&=+$_.!~*'()\".split('');\nconst invalidFlowScalarChars = ',[]{}'.split('');\nconst invalidAnchorChars = ' ,[]{}\\n\\r\\t'.split('');\nconst isNotAnchorChar = (ch) => !ch || invalidAnchorChars.includes(ch);\n/**\n * Splits an input string into lexical tokens, i.e. smaller strings that are\n * easily identifiable by `tokens.tokenType()`.\n *\n * Lexing starts always in a \"stream\" context. Incomplete input may be buffered\n * until a complete token can be emitted.\n *\n * In addition to slices of the original input, the following control characters\n * may also be emitted:\n *\n * - `\\x02` (Start of Text): A document starts with the next token\n * - `\\x18` (Cancel): Unexpected end of flow-mode (indicates an error)\n * - `\\x1f` (Unit Separator): Next token is a scalar value\n * - `\\u{FEFF}` (Byte order mark): Emitted separately outside documents\n */\nclass Lexer {\n    constructor() {\n        /**\n         * Flag indicating whether the end of the current buffer marks the end of\n         * all input\n         */\n        this.atEnd = false;\n        /**\n         * Explicit indent set in block scalar header, as an offset from the current\n         * minimum indent, so e.g. set to 1 from a header `|2+`. Set to -1 if not\n         * explicitly set.\n         */\n        this.blockScalarIndent = -1;\n        /**\n         * Block scalars that include a + (keep) chomping indicator in their header\n         * include trailing empty lines, which are otherwise excluded from the\n         * scalar's contents.\n         */\n        this.blockScalarKeep = false;\n        /** Current input */\n        this.buffer = '';\n        /**\n         * Flag noting whether the map value indicator : can immediately follow this\n         * node within a flow context.\n         */\n        this.flowKey = false;\n        /** Count of surrounding flow collection levels. */\n        this.flowLevel = 0;\n        /**\n         * Minimum level of indentation required for next lines to be parsed as a\n         * part of the current scalar value.\n         */\n        this.indentNext = 0;\n        /** Indentation level of the current line. */\n        this.indentValue = 0;\n        /** Position of the next \\n character. */\n        this.lineEndPos = null;\n        /** Stores the state of the lexer if reaching the end of incpomplete input */\n        this.next = null;\n        /** A pointer to `buffer`; the current position of the lexer. */\n        this.pos = 0;\n    }\n    /**\n     * Generate YAML tokens from the `source` string. If `incomplete`,\n     * a part of the last line may be left as a buffer for the next call.\n     *\n     * @returns A generator of lexical tokens\n     */\n    *lex(source, incomplete = false) {\n        if (source) {\n            this.buffer = this.buffer ? this.buffer + source : source;\n            this.lineEndPos = null;\n        }\n        this.atEnd = !incomplete;\n        let next = this.next ?? 'stream';\n        while (next && (incomplete || this.hasChars(1)))\n            next = yield* this.parseNext(next);\n    }\n    atLineEnd() {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (ch === ' ' || ch === '\\t')\n            ch = this.buffer[++i];\n        if (!ch || ch === '#' || ch === '\\n')\n            return true;\n        if (ch === '\\r')\n            return this.buffer[i + 1] === '\\n';\n        return false;\n    }\n    charAt(n) {\n        return this.buffer[this.pos + n];\n    }\n    continueScalar(offset) {\n        let ch = this.buffer[offset];\n        if (this.indentNext > 0) {\n            let indent = 0;\n            while (ch === ' ')\n                ch = this.buffer[++indent + offset];\n            if (ch === '\\r') {\n                const next = this.buffer[indent + offset + 1];\n                if (next === '\\n' || (!next && !this.atEnd))\n                    return offset + indent + 1;\n            }\n            return ch === '\\n' || indent >= this.indentNext || (!ch && !this.atEnd)\n                ? offset + indent\n                : -1;\n        }\n        if (ch === '-' || ch === '.') {\n            const dt = this.buffer.substr(offset, 3);\n            if ((dt === '---' || dt === '...') && isEmpty(this.buffer[offset + 3]))\n                return -1;\n        }\n        return offset;\n    }\n    getLine() {\n        let end = this.lineEndPos;\n        if (typeof end !== 'number' || (end !== -1 && end < this.pos)) {\n            end = this.buffer.indexOf('\\n', this.pos);\n            this.lineEndPos = end;\n        }\n        if (end === -1)\n            return this.atEnd ? this.buffer.substring(this.pos) : null;\n        if (this.buffer[end - 1] === '\\r')\n            end -= 1;\n        return this.buffer.substring(this.pos, end);\n    }\n    hasChars(n) {\n        return this.pos + n <= this.buffer.length;\n    }\n    setNext(state) {\n        this.buffer = this.buffer.substring(this.pos);\n        this.pos = 0;\n        this.lineEndPos = null;\n        this.next = state;\n        return null;\n    }\n    peek(n) {\n        return this.buffer.substr(this.pos, n);\n    }\n    *parseNext(next) {\n        switch (next) {\n            case 'stream':\n                return yield* this.parseStream();\n            case 'line-start':\n                return yield* this.parseLineStart();\n            case 'block-start':\n                return yield* this.parseBlockStart();\n            case 'doc':\n                return yield* this.parseDocument();\n            case 'flow':\n                return yield* this.parseFlowCollection();\n            case 'quoted-scalar':\n                return yield* this.parseQuotedScalar();\n            case 'block-scalar':\n                return yield* this.parseBlockScalar();\n            case 'plain-scalar':\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseStream() {\n        let line = this.getLine();\n        if (line === null)\n            return this.setNext('stream');\n        if (line[0] === BOM) {\n            yield* this.pushCount(1);\n            line = line.substring(1);\n        }\n        if (line[0] === '%') {\n            let dirEnd = line.length;\n            const cs = line.indexOf('#');\n            if (cs !== -1) {\n                const ch = line[cs - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd = cs - 1;\n            }\n            while (true) {\n                const ch = line[dirEnd - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd -= 1;\n                else\n                    break;\n            }\n            const n = (yield* this.pushCount(dirEnd)) + (yield* this.pushSpaces(true));\n            yield* this.pushCount(line.length - n); // possible comment\n            this.pushNewline();\n            return 'stream';\n        }\n        if (this.atLineEnd()) {\n            const sp = yield* this.pushSpaces(true);\n            yield* this.pushCount(line.length - sp);\n            yield* this.pushNewline();\n            return 'stream';\n        }\n        yield DOCUMENT;\n        return yield* this.parseLineStart();\n    }\n    *parseLineStart() {\n        const ch = this.charAt(0);\n        if (!ch && !this.atEnd)\n            return this.setNext('line-start');\n        if (ch === '-' || ch === '.') {\n            if (!this.atEnd && !this.hasChars(4))\n                return this.setNext('line-start');\n            const s = this.peek(3);\n            if (s === '---' && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                this.indentValue = 0;\n                this.indentNext = 0;\n                return 'doc';\n            }\n            else if (s === '...' && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                return 'stream';\n            }\n        }\n        this.indentValue = yield* this.pushSpaces(false);\n        if (this.indentNext > this.indentValue && !isEmpty(this.charAt(1)))\n            this.indentNext = this.indentValue;\n        return yield* this.parseBlockStart();\n    }\n    *parseBlockStart() {\n        const [ch0, ch1] = this.peek(2);\n        if (!ch1 && !this.atEnd)\n            return this.setNext('block-start');\n        if ((ch0 === '-' || ch0 === '?' || ch0 === ':') && isEmpty(ch1)) {\n            const n = (yield* this.pushCount(1)) + (yield* this.pushSpaces(true));\n            this.indentNext = this.indentValue + 1;\n            this.indentValue += n;\n            return yield* this.parseBlockStart();\n        }\n        return 'doc';\n    }\n    *parseDocument() {\n        yield* this.pushSpaces(true);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('doc');\n        let n = yield* this.pushIndicators();\n        switch (line[n]) {\n            case '#':\n                yield* this.pushCount(line.length - n);\n            // fallthrough\n            case undefined:\n                yield* this.pushNewline();\n                return yield* this.parseLineStart();\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel = 1;\n                return 'flow';\n            case '}':\n            case ']':\n                // this is an error\n                yield* this.pushCount(1);\n                return 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'doc';\n            case '\"':\n            case \"'\":\n                return yield* this.parseQuotedScalar();\n            case '|':\n            case '>':\n                n += yield* this.parseBlockScalarHeader();\n                n += yield* this.pushSpaces(true);\n                yield* this.pushCount(line.length - n);\n                yield* this.pushNewline();\n                return yield* this.parseBlockScalar();\n            default:\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseFlowCollection() {\n        let nl, sp;\n        let indent = -1;\n        do {\n            nl = yield* this.pushNewline();\n            if (nl > 0) {\n                sp = yield* this.pushSpaces(false);\n                this.indentValue = indent = sp;\n            }\n            else {\n                sp = 0;\n            }\n            sp += yield* this.pushSpaces(true);\n        } while (nl + sp > 0);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('flow');\n        if ((indent !== -1 && indent < this.indentNext && line[0] !== '#') ||\n            (indent === 0 &&\n                (line.startsWith('---') || line.startsWith('...')) &&\n                isEmpty(line[3]))) {\n            // Allowing for the terminal ] or } at the same (rather than greater)\n            // indent level as the initial [ or { is technically invalid, but\n            // failing here would be surprising to users.\n            const atFlowEndMarker = indent === this.indentNext - 1 &&\n                this.flowLevel === 1 &&\n                (line[0] === ']' || line[0] === '}');\n            if (!atFlowEndMarker) {\n                // this is an error\n                this.flowLevel = 0;\n                yield FLOW_END;\n                return yield* this.parseLineStart();\n            }\n        }\n        let n = 0;\n        while (line[n] === ',') {\n            n += yield* this.pushCount(1);\n            n += yield* this.pushSpaces(true);\n            this.flowKey = false;\n        }\n        n += yield* this.pushIndicators();\n        switch (line[n]) {\n            case undefined:\n                return 'flow';\n            case '#':\n                yield* this.pushCount(line.length - n);\n                return 'flow';\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel += 1;\n                return 'flow';\n            case '}':\n            case ']':\n                yield* this.pushCount(1);\n                this.flowKey = true;\n                this.flowLevel -= 1;\n                return this.flowLevel ? 'flow' : 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'flow';\n            case '\"':\n            case \"'\":\n                this.flowKey = true;\n                return yield* this.parseQuotedScalar();\n            case ':': {\n                const next = this.charAt(1);\n                if (this.flowKey || isEmpty(next) || next === ',') {\n                    this.flowKey = false;\n                    yield* this.pushCount(1);\n                    yield* this.pushSpaces(true);\n                    return 'flow';\n                }\n            }\n            // fallthrough\n            default:\n                this.flowKey = false;\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseQuotedScalar() {\n        const quote = this.charAt(0);\n        let end = this.buffer.indexOf(quote, this.pos + 1);\n        if (quote === \"'\") {\n            while (end !== -1 && this.buffer[end + 1] === \"'\")\n                end = this.buffer.indexOf(\"'\", end + 2);\n        }\n        else {\n            // double-quote\n            while (end !== -1) {\n                let n = 0;\n                while (this.buffer[end - 1 - n] === '\\\\')\n                    n += 1;\n                if (n % 2 === 0)\n                    break;\n                end = this.buffer.indexOf('\"', end + 1);\n            }\n        }\n        // Only looking for newlines within the quotes\n        const qb = this.buffer.substring(0, end);\n        let nl = qb.indexOf('\\n', this.pos);\n        if (nl !== -1) {\n            while (nl !== -1) {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = qb.indexOf('\\n', cs);\n            }\n            if (nl !== -1) {\n                // this is an error caused by an unexpected unindent\n                end = nl - (qb[nl - 1] === '\\r' ? 2 : 1);\n            }\n        }\n        if (end === -1) {\n            if (!this.atEnd)\n                return this.setNext('quoted-scalar');\n            end = this.buffer.length;\n        }\n        yield* this.pushToIndex(end + 1, false);\n        return this.flowLevel ? 'flow' : 'doc';\n    }\n    *parseBlockScalarHeader() {\n        this.blockScalarIndent = -1;\n        this.blockScalarKeep = false;\n        let i = this.pos;\n        while (true) {\n            const ch = this.buffer[++i];\n            if (ch === '+')\n                this.blockScalarKeep = true;\n            else if (ch > '0' && ch <= '9')\n                this.blockScalarIndent = Number(ch) - 1;\n            else if (ch !== '-')\n                break;\n        }\n        return yield* this.pushUntil(ch => isEmpty(ch) || ch === '#');\n    }\n    *parseBlockScalar() {\n        let nl = this.pos - 1; // may be -1 if this.pos === 0\n        let indent = 0;\n        let ch;\n        loop: for (let i = this.pos; (ch = this.buffer[i]); ++i) {\n            switch (ch) {\n                case ' ':\n                    indent += 1;\n                    break;\n                case '\\n':\n                    nl = i;\n                    indent = 0;\n                    break;\n                case '\\r': {\n                    const next = this.buffer[i + 1];\n                    if (!next && !this.atEnd)\n                        return this.setNext('block-scalar');\n                    if (next === '\\n')\n                        break;\n                } // fallthrough\n                default:\n                    break loop;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('block-scalar');\n        if (indent >= this.indentNext) {\n            if (this.blockScalarIndent === -1)\n                this.indentNext = indent;\n            else\n                this.indentNext += this.blockScalarIndent;\n            do {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = this.buffer.indexOf('\\n', cs);\n            } while (nl !== -1);\n            if (nl === -1) {\n                if (!this.atEnd)\n                    return this.setNext('block-scalar');\n                nl = this.buffer.length;\n            }\n        }\n        if (!this.blockScalarKeep) {\n            do {\n                let i = nl - 1;\n                let ch = this.buffer[i];\n                if (ch === '\\r')\n                    ch = this.buffer[--i];\n                const lastChar = i; // Drop the line if last char not more indented\n                while (ch === ' ' || ch === '\\t')\n                    ch = this.buffer[--i];\n                if (ch === '\\n' && i >= this.pos && i + 1 + indent > lastChar)\n                    nl = i;\n                else\n                    break;\n            } while (true);\n        }\n        yield SCALAR;\n        yield* this.pushToIndex(nl + 1, true);\n        return yield* this.parseLineStart();\n    }\n    *parsePlainScalar() {\n        const inFlow = this.flowLevel > 0;\n        let end = this.pos - 1;\n        let i = this.pos - 1;\n        let ch;\n        while ((ch = this.buffer[++i])) {\n            if (ch === ':') {\n                const next = this.buffer[i + 1];\n                if (isEmpty(next) || (inFlow && next === ','))\n                    break;\n                end = i;\n            }\n            else if (isEmpty(ch)) {\n                let next = this.buffer[i + 1];\n                if (ch === '\\r') {\n                    if (next === '\\n') {\n                        i += 1;\n                        ch = '\\n';\n                        next = this.buffer[i + 1];\n                    }\n                    else\n                        end = i;\n                }\n                if (next === '#' || (inFlow && invalidFlowScalarChars.includes(next)))\n                    break;\n                if (ch === '\\n') {\n                    const cs = this.continueScalar(i + 1);\n                    if (cs === -1)\n                        break;\n                    i = Math.max(i, cs - 2); // to advance, but still account for ' #'\n                }\n            }\n            else {\n                if (inFlow && invalidFlowScalarChars.includes(ch))\n                    break;\n                end = i;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('plain-scalar');\n        yield SCALAR;\n        yield* this.pushToIndex(end + 1, true);\n        return inFlow ? 'flow' : 'doc';\n    }\n    *pushCount(n) {\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos += n;\n            return n;\n        }\n        return 0;\n    }\n    *pushToIndex(i, allowEmpty) {\n        const s = this.buffer.slice(this.pos, i);\n        if (s) {\n            yield s;\n            this.pos += s.length;\n            return s.length;\n        }\n        else if (allowEmpty)\n            yield '';\n        return 0;\n    }\n    *pushIndicators() {\n        switch (this.charAt(0)) {\n            case '!':\n                return ((yield* this.pushTag()) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '&':\n                return ((yield* this.pushUntil(isNotAnchorChar)) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '-': // this is an error\n            case '?': // this is an error outside flow collections\n            case ':': {\n                const inFlow = this.flowLevel > 0;\n                const ch1 = this.charAt(1);\n                if (isEmpty(ch1) || (inFlow && invalidFlowScalarChars.includes(ch1))) {\n                    if (!inFlow)\n                        this.indentNext = this.indentValue + 1;\n                    else if (this.flowKey)\n                        this.flowKey = false;\n                    return ((yield* this.pushCount(1)) +\n                        (yield* this.pushSpaces(true)) +\n                        (yield* this.pushIndicators()));\n                }\n            }\n        }\n        return 0;\n    }\n    *pushTag() {\n        if (this.charAt(1) === '<') {\n            let i = this.pos + 2;\n            let ch = this.buffer[i];\n            while (!isEmpty(ch) && ch !== '>')\n                ch = this.buffer[++i];\n            return yield* this.pushToIndex(ch === '>' ? i + 1 : i, false);\n        }\n        else {\n            let i = this.pos + 1;\n            let ch = this.buffer[i];\n            while (ch) {\n                if (tagChars.includes(ch))\n                    ch = this.buffer[++i];\n                else if (ch === '%' &&\n                    hexDigits.includes(this.buffer[i + 1]) &&\n                    hexDigits.includes(this.buffer[i + 2])) {\n                    ch = this.buffer[(i += 3)];\n                }\n                else\n                    break;\n            }\n            return yield* this.pushToIndex(i, false);\n        }\n    }\n    *pushNewline() {\n        const ch = this.buffer[this.pos];\n        if (ch === '\\n')\n            return yield* this.pushCount(1);\n        else if (ch === '\\r' && this.charAt(1) === '\\n')\n            return yield* this.pushCount(2);\n        else\n            return 0;\n    }\n    *pushSpaces(allowTabs) {\n        let i = this.pos - 1;\n        let ch;\n        do {\n            ch = this.buffer[++i];\n        } while (ch === ' ' || (allowTabs && ch === '\\t'));\n        const n = i - this.pos;\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos = i;\n        }\n        return n;\n    }\n    *pushUntil(test) {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (!test(ch))\n            ch = this.buffer[++i];\n        return yield* this.pushToIndex(i, false);\n    }\n}\n\nexport { Lexer };\n","/**\n * Tracks newlines during parsing in order to provide an efficient API for\n * determining the one-indexed `{ line, col }` position for any offset\n * within the input.\n */\nclass LineCounter {\n    constructor() {\n        this.lineStarts = [];\n        /**\n         * Should be called in ascending order. Otherwise, call\n         * `lineCounter.lineStarts.sort()` before calling `linePos()`.\n         */\n        this.addNewLine = (offset) => this.lineStarts.push(offset);\n        /**\n         * Performs a binary search and returns the 1-indexed { line, col }\n         * position of `offset`. If `line === 0`, `addNewLine` has never been\n         * called or `offset` is before the first known newline.\n         */\n        this.linePos = (offset) => {\n            let low = 0;\n            let high = this.lineStarts.length;\n            while (low < high) {\n                const mid = (low + high) >> 1; // Math.floor((low + high) / 2)\n                if (this.lineStarts[mid] < offset)\n                    low = mid + 1;\n                else\n                    high = mid;\n            }\n            if (this.lineStarts[low] === offset)\n                return { line: low + 1, col: 1 };\n            if (low === 0)\n                return { line: 0, col: offset };\n            const start = this.lineStarts[low - 1];\n            return { line: low, col: offset - start + 1 };\n        };\n    }\n}\n\nexport { LineCounter };\n","import { tokenType } from './cst.js';\nimport { Lexer } from './lexer.js';\n\nfunction includesToken(list, type) {\n    for (let i = 0; i < list.length; ++i)\n        if (list[i].type === type)\n            return true;\n    return false;\n}\nfunction findNonEmptyIndex(list) {\n    for (let i = 0; i < list.length; ++i) {\n        switch (list[i].type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                break;\n            default:\n                return i;\n        }\n    }\n    return -1;\n}\nfunction isFlowToken(token) {\n    switch (token?.type) {\n        case 'alias':\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'flow-collection':\n            return true;\n        default:\n            return false;\n    }\n}\nfunction getPrevProps(parent) {\n    switch (parent.type) {\n        case 'document':\n            return parent.start;\n        case 'block-map': {\n            const it = parent.items[parent.items.length - 1];\n            return it.sep ?? it.start;\n        }\n        case 'block-seq':\n            return parent.items[parent.items.length - 1].start;\n        /* istanbul ignore next should not happen */\n        default:\n            return [];\n    }\n}\n/** Note: May modify input array */\nfunction getFirstKeyStartProps(prev) {\n    if (prev.length === 0)\n        return [];\n    let i = prev.length;\n    loop: while (--i >= 0) {\n        switch (prev[i].type) {\n            case 'doc-start':\n            case 'explicit-key-ind':\n            case 'map-value-ind':\n            case 'seq-item-ind':\n            case 'newline':\n                break loop;\n        }\n    }\n    while (prev[++i]?.type === 'space') {\n        /* loop */\n    }\n    return prev.splice(i, prev.length);\n}\nfunction fixFlowSeqItems(fc) {\n    if (fc.start.type === 'flow-seq-start') {\n        for (const it of fc.items) {\n            if (it.sep &&\n                !it.value &&\n                !includesToken(it.start, 'explicit-key-ind') &&\n                !includesToken(it.sep, 'map-value-ind')) {\n                if (it.key)\n                    it.value = it.key;\n                delete it.key;\n                if (isFlowToken(it.value)) {\n                    if (it.value.end)\n                        Array.prototype.push.apply(it.value.end, it.sep);\n                    else\n                        it.value.end = it.sep;\n                }\n                else\n                    Array.prototype.push.apply(it.start, it.sep);\n                delete it.sep;\n            }\n        }\n    }\n}\n/**\n * A YAML concrete syntax tree (CST) parser\n *\n * ```ts\n * const src: string = ...\n * for (const token of new Parser().parse(src)) {\n *   // token: Token\n * }\n * ```\n *\n * To use the parser with a user-provided lexer:\n *\n * ```ts\n * function* parse(source: string, lexer: Lexer) {\n *   const parser = new Parser()\n *   for (const lexeme of lexer.lex(source))\n *     yield* parser.next(lexeme)\n *   yield* parser.end()\n * }\n *\n * const src: string = ...\n * const lexer = new Lexer()\n * for (const token of parse(src, lexer)) {\n *   // token: Token\n * }\n * ```\n */\nclass Parser {\n    /**\n     * @param onNewLine - If defined, called separately with the start position of\n     *   each new line (in `parse()`, including the start of input).\n     */\n    constructor(onNewLine) {\n        /** If true, space and sequence indicators count as indentation */\n        this.atNewLine = true;\n        /** If true, next token is a scalar value */\n        this.atScalar = false;\n        /** Current indentation level */\n        this.indent = 0;\n        /** Current offset since the start of parsing */\n        this.offset = 0;\n        /** On the same line with a block map key */\n        this.onKeyLine = false;\n        /** Top indicates the node that's currently being built */\n        this.stack = [];\n        /** The source of the current token, set in parse() */\n        this.source = '';\n        /** The type of the current token, set in parse() */\n        this.type = '';\n        // Must be defined after `next()`\n        this.lexer = new Lexer();\n        this.onNewLine = onNewLine;\n    }\n    /**\n     * Parse `source` as a YAML stream.\n     * If `incomplete`, a part of the last line may be left as a buffer for the next call.\n     *\n     * Errors are not thrown, but yielded as `{ type: 'error', message }` tokens.\n     *\n     * @returns A generator of tokens representing each directive, document, and other structure.\n     */\n    *parse(source, incomplete = false) {\n        if (this.onNewLine && this.offset === 0)\n            this.onNewLine(0);\n        for (const lexeme of this.lexer.lex(source, incomplete))\n            yield* this.next(lexeme);\n        if (!incomplete)\n            yield* this.end();\n    }\n    /**\n     * Advance the parser by the `source` of one lexical token.\n     */\n    *next(source) {\n        this.source = source;\n        if (this.atScalar) {\n            this.atScalar = false;\n            yield* this.step();\n            this.offset += source.length;\n            return;\n        }\n        const type = tokenType(source);\n        if (!type) {\n            const message = `Not a YAML token: ${source}`;\n            yield* this.pop({ type: 'error', offset: this.offset, message, source });\n            this.offset += source.length;\n        }\n        else if (type === 'scalar') {\n            this.atNewLine = false;\n            this.atScalar = true;\n            this.type = 'scalar';\n        }\n        else {\n            this.type = type;\n            yield* this.step();\n            switch (type) {\n                case 'newline':\n                    this.atNewLine = true;\n                    this.indent = 0;\n                    if (this.onNewLine)\n                        this.onNewLine(this.offset + source.length);\n                    break;\n                case 'space':\n                    if (this.atNewLine && source[0] === ' ')\n                        this.indent += source.length;\n                    break;\n                case 'explicit-key-ind':\n                case 'map-value-ind':\n                case 'seq-item-ind':\n                    if (this.atNewLine)\n                        this.indent += source.length;\n                    break;\n                case 'doc-mode':\n                case 'flow-error-end':\n                    return;\n                default:\n                    this.atNewLine = false;\n            }\n            this.offset += source.length;\n        }\n    }\n    /** Call at end of input to push out any remaining constructions */\n    *end() {\n        while (this.stack.length > 0)\n            yield* this.pop();\n    }\n    get sourceToken() {\n        const st = {\n            type: this.type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n        return st;\n    }\n    *step() {\n        const top = this.peek(1);\n        if (this.type === 'doc-end' && (!top || top.type !== 'doc-end')) {\n            while (this.stack.length > 0)\n                yield* this.pop();\n            this.stack.push({\n                type: 'doc-end',\n                offset: this.offset,\n                source: this.source\n            });\n            return;\n        }\n        if (!top)\n            return yield* this.stream();\n        switch (top.type) {\n            case 'document':\n                return yield* this.document(top);\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return yield* this.scalar(top);\n            case 'block-scalar':\n                return yield* this.blockScalar(top);\n            case 'block-map':\n                return yield* this.blockMap(top);\n            case 'block-seq':\n                return yield* this.blockSequence(top);\n            case 'flow-collection':\n                return yield* this.flowCollection(top);\n            case 'doc-end':\n                return yield* this.documentEnd(top);\n        }\n        /* istanbul ignore next should not happen */\n        yield* this.pop();\n    }\n    peek(n) {\n        return this.stack[this.stack.length - n];\n    }\n    *pop(error) {\n        const token = error ?? this.stack.pop();\n        /* istanbul ignore if should not happen */\n        if (!token) {\n            const message = 'Tried to pop an empty stack';\n            yield { type: 'error', offset: this.offset, source: '', message };\n        }\n        else if (this.stack.length === 0) {\n            yield token;\n        }\n        else {\n            const top = this.peek(1);\n            if (token.type === 'block-scalar') {\n                // Block scalars use their parent rather than header indent\n                token.indent = 'indent' in top ? top.indent : 0;\n            }\n            else if (token.type === 'flow-collection' && top.type === 'document') {\n                // Ignore all indent for top-level flow collections\n                token.indent = 0;\n            }\n            if (token.type === 'flow-collection')\n                fixFlowSeqItems(token);\n            switch (top.type) {\n                case 'document':\n                    top.value = token;\n                    break;\n                case 'block-scalar':\n                    top.props.push(token); // error\n                    break;\n                case 'block-map': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value) {\n                        top.items.push({ start: [], key: token, sep: [] });\n                        this.onKeyLine = true;\n                        return;\n                    }\n                    else if (it.sep) {\n                        it.value = token;\n                    }\n                    else {\n                        Object.assign(it, { key: token, sep: [] });\n                        this.onKeyLine = !includesToken(it.start, 'explicit-key-ind');\n                        return;\n                    }\n                    break;\n                }\n                case 'block-seq': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value)\n                        top.items.push({ start: [], value: token });\n                    else\n                        it.value = token;\n                    break;\n                }\n                case 'flow-collection': {\n                    const it = top.items[top.items.length - 1];\n                    if (!it || it.value)\n                        top.items.push({ start: [], key: token, sep: [] });\n                    else if (it.sep)\n                        it.value = token;\n                    else\n                        Object.assign(it, { key: token, sep: [] });\n                    return;\n                }\n                /* istanbul ignore next should not happen */\n                default:\n                    yield* this.pop();\n                    yield* this.pop(token);\n            }\n            if ((top.type === 'document' ||\n                top.type === 'block-map' ||\n                top.type === 'block-seq') &&\n                (token.type === 'block-map' || token.type === 'block-seq')) {\n                const last = token.items[token.items.length - 1];\n                if (last &&\n                    !last.sep &&\n                    !last.value &&\n                    last.start.length > 0 &&\n                    findNonEmptyIndex(last.start) === -1 &&\n                    (token.indent === 0 ||\n                        last.start.every(st => st.type !== 'comment' || st.indent < token.indent))) {\n                    if (top.type === 'document')\n                        top.end = last.start;\n                    else\n                        top.items.push({ start: last.start });\n                    token.items.splice(-1, 1);\n                }\n            }\n        }\n    }\n    *stream() {\n        switch (this.type) {\n            case 'directive-line':\n                yield { type: 'directive', offset: this.offset, source: this.source };\n                return;\n            case 'byte-order-mark':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                yield this.sourceToken;\n                return;\n            case 'doc-mode':\n            case 'doc-start': {\n                const doc = {\n                    type: 'document',\n                    offset: this.offset,\n                    start: []\n                };\n                if (this.type === 'doc-start')\n                    doc.start.push(this.sourceToken);\n                this.stack.push(doc);\n                return;\n            }\n        }\n        yield {\n            type: 'error',\n            offset: this.offset,\n            message: `Unexpected ${this.type} token in YAML stream`,\n            source: this.source\n        };\n    }\n    *document(doc) {\n        if (doc.value)\n            return yield* this.lineEnd(doc);\n        switch (this.type) {\n            case 'doc-start': {\n                if (findNonEmptyIndex(doc.start) !== -1) {\n                    yield* this.pop();\n                    yield* this.step();\n                }\n                else\n                    doc.start.push(this.sourceToken);\n                return;\n            }\n            case 'anchor':\n            case 'tag':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                doc.start.push(this.sourceToken);\n                return;\n        }\n        const bv = this.startBlockValue(doc);\n        if (bv)\n            this.stack.push(bv);\n        else {\n            yield {\n                type: 'error',\n                offset: this.offset,\n                message: `Unexpected ${this.type} token in YAML document`,\n                source: this.source\n            };\n        }\n    }\n    *scalar(scalar) {\n        if (this.type === 'map-value-ind') {\n            const prev = getPrevProps(this.peek(2));\n            const start = getFirstKeyStartProps(prev);\n            let sep;\n            if (scalar.end) {\n                sep = scalar.end;\n                sep.push(this.sourceToken);\n                delete scalar.end;\n            }\n            else\n                sep = [this.sourceToken];\n            const map = {\n                type: 'block-map',\n                offset: scalar.offset,\n                indent: scalar.indent,\n                items: [{ start, key: scalar, sep }]\n            };\n            this.onKeyLine = true;\n            this.stack[this.stack.length - 1] = map;\n        }\n        else\n            yield* this.lineEnd(scalar);\n    }\n    *blockScalar(scalar) {\n        switch (this.type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                scalar.props.push(this.sourceToken);\n                return;\n            case 'scalar':\n                scalar.source = this.source;\n                // block-scalar source includes trailing newline\n                this.atNewLine = true;\n                this.indent = 0;\n                if (this.onNewLine) {\n                    let nl = this.source.indexOf('\\n') + 1;\n                    while (nl !== 0) {\n                        this.onNewLine(this.offset + nl);\n                        nl = this.source.indexOf('\\n', nl) + 1;\n                    }\n                }\n                yield* this.pop();\n                break;\n            /* istanbul ignore next should not happen */\n            default:\n                yield* this.pop();\n                yield* this.step();\n        }\n    }\n    *blockMap(map) {\n        const it = map.items[map.items.length - 1];\n        // it.sep is true-ish if pair already has key or : separator\n        switch (this.type) {\n            case 'newline':\n                this.onKeyLine = false;\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value) {\n                    map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    if (this.atIndentedComment(it.start, map.indent)) {\n                        const prev = map.items[map.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            map.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n        }\n        if (this.indent >= map.indent) {\n            const atNextItem = !this.onKeyLine &&\n                this.indent === map.indent &&\n                it.sep &&\n                this.type !== 'seq-item-ind';\n            // For empty nodes, assign newline-separated not indented empty tokens to following node\n            let start = [];\n            if (atNextItem && it.sep && !it.value) {\n                const nl = [];\n                for (let i = 0; i < it.sep.length; ++i) {\n                    const st = it.sep[i];\n                    switch (st.type) {\n                        case 'newline':\n                            nl.push(i);\n                            break;\n                        case 'space':\n                            break;\n                        case 'comment':\n                            if (st.indent > map.indent)\n                                nl.length = 0;\n                            break;\n                        default:\n                            nl.length = 0;\n                    }\n                }\n                if (nl.length >= 2)\n                    start = it.sep.splice(nl[1]);\n            }\n            switch (this.type) {\n                case 'anchor':\n                case 'tag':\n                    if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        it.sep.push(this.sourceToken);\n                    }\n                    else {\n                        it.start.push(this.sourceToken);\n                    }\n                    return;\n                case 'explicit-key-ind':\n                    if (!it.sep && !includesToken(it.start, 'explicit-key-ind')) {\n                        it.start.push(this.sourceToken);\n                    }\n                    else if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                    }\n                    else {\n                        this.stack.push({\n                            type: 'block-map',\n                            offset: this.offset,\n                            indent: this.indent,\n                            items: [{ start: [this.sourceToken] }]\n                        });\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'map-value-ind':\n                    if (includesToken(it.start, 'explicit-key-ind')) {\n                        if (!it.sep) {\n                            if (includesToken(it.start, 'newline')) {\n                                Object.assign(it, { key: null, sep: [this.sourceToken] });\n                            }\n                            else {\n                                const start = getFirstKeyStartProps(it.start);\n                                this.stack.push({\n                                    type: 'block-map',\n                                    offset: this.offset,\n                                    indent: this.indent,\n                                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                                });\n                            }\n                        }\n                        else if (it.value) {\n                            map.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else if (isFlowToken(it.key) &&\n                            !includesToken(it.sep, 'newline')) {\n                            const start = getFirstKeyStartProps(it.start);\n                            const key = it.key;\n                            const sep = it.sep;\n                            sep.push(this.sourceToken);\n                            // @ts-expect-error type guard is wrong here\n                            delete it.key, delete it.sep;\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key, sep }]\n                            });\n                        }\n                        else if (start.length > 0) {\n                            // Not actually at next item\n                            it.sep = it.sep.concat(start, this.sourceToken);\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    else {\n                        if (!it.sep) {\n                            Object.assign(it, { key: null, sep: [this.sourceToken] });\n                        }\n                        else if (it.value || atNextItem) {\n                            map.items.push({ start, key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start: [], key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (atNextItem || it.value) {\n                        map.items.push({ start, key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        this.stack.push(fs);\n                    }\n                    else {\n                        Object.assign(it, { key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    return;\n                }\n                default: {\n                    const bv = this.startBlockValue(map);\n                    if (bv) {\n                        if (atNextItem &&\n                            bv.type !== 'block-seq' &&\n                            includesToken(it.start, 'explicit-key-ind')) {\n                            map.items.push({ start });\n                        }\n                        this.stack.push(bv);\n                        return;\n                    }\n                }\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *blockSequence(seq) {\n        const it = seq.items[seq.items.length - 1];\n        switch (this.type) {\n            case 'newline':\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        seq.items.push({ start: [this.sourceToken] });\n                }\n                else\n                    it.start.push(this.sourceToken);\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value)\n                    seq.items.push({ start: [this.sourceToken] });\n                else {\n                    if (this.atIndentedComment(it.start, seq.indent)) {\n                        const prev = seq.items[seq.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            seq.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'anchor':\n            case 'tag':\n                if (it.value || this.indent <= seq.indent)\n                    break;\n                it.start.push(this.sourceToken);\n                return;\n            case 'seq-item-ind':\n                if (this.indent !== seq.indent)\n                    break;\n                if (it.value || includesToken(it.start, 'seq-item-ind'))\n                    seq.items.push({ start: [this.sourceToken] });\n                else\n                    it.start.push(this.sourceToken);\n                return;\n        }\n        if (this.indent > seq.indent) {\n            const bv = this.startBlockValue(seq);\n            if (bv) {\n                this.stack.push(bv);\n                return;\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *flowCollection(fc) {\n        const it = fc.items[fc.items.length - 1];\n        if (this.type === 'flow-error-end') {\n            let top;\n            do {\n                yield* this.pop();\n                top = this.peek(1);\n            } while (top && top.type === 'flow-collection');\n        }\n        else if (fc.end.length === 0) {\n            switch (this.type) {\n                case 'comma':\n                case 'explicit-key-ind':\n                    if (!it || it.sep)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'map-value-ind':\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        Object.assign(it, { key: null, sep: [this.sourceToken] });\n                    return;\n                case 'space':\n                case 'comment':\n                case 'newline':\n                case 'anchor':\n                case 'tag':\n                    if (!it || it.value)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: fs, sep: [] });\n                    else if (it.sep)\n                        this.stack.push(fs);\n                    else\n                        Object.assign(it, { key: fs, sep: [] });\n                    return;\n                }\n                case 'flow-map-end':\n                case 'flow-seq-end':\n                    fc.end.push(this.sourceToken);\n                    return;\n            }\n            const bv = this.startBlockValue(fc);\n            /* istanbul ignore else should not happen */\n            if (bv)\n                this.stack.push(bv);\n            else {\n                yield* this.pop();\n                yield* this.step();\n            }\n        }\n        else {\n            const parent = this.peek(2);\n            if (parent.type === 'block-map' &&\n                ((this.type === 'map-value-ind' && parent.indent === fc.indent) ||\n                    (this.type === 'newline' &&\n                        !parent.items[parent.items.length - 1].sep))) {\n                yield* this.pop();\n                yield* this.step();\n            }\n            else if (this.type === 'map-value-ind' &&\n                parent.type !== 'flow-collection') {\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                fixFlowSeqItems(fc);\n                const sep = fc.end.splice(1, fc.end.length);\n                sep.push(this.sourceToken);\n                const map = {\n                    type: 'block-map',\n                    offset: fc.offset,\n                    indent: fc.indent,\n                    items: [{ start, key: fc, sep }]\n                };\n                this.onKeyLine = true;\n                this.stack[this.stack.length - 1] = map;\n            }\n            else {\n                yield* this.lineEnd(fc);\n            }\n        }\n    }\n    flowScalar(type) {\n        if (this.onNewLine) {\n            let nl = this.source.indexOf('\\n') + 1;\n            while (nl !== 0) {\n                this.onNewLine(this.offset + nl);\n                nl = this.source.indexOf('\\n', nl) + 1;\n            }\n        }\n        return {\n            type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n    }\n    startBlockValue(parent) {\n        switch (this.type) {\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return this.flowScalar(this.type);\n            case 'block-scalar-header':\n                return {\n                    type: 'block-scalar',\n                    offset: this.offset,\n                    indent: this.indent,\n                    props: [this.sourceToken],\n                    source: ''\n                };\n            case 'flow-map-start':\n            case 'flow-seq-start':\n                return {\n                    type: 'flow-collection',\n                    offset: this.offset,\n                    indent: this.indent,\n                    start: this.sourceToken,\n                    items: [],\n                    end: []\n                };\n            case 'seq-item-ind':\n                return {\n                    type: 'block-seq',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start: [this.sourceToken] }]\n                };\n            case 'explicit-key-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                start.push(this.sourceToken);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start }]\n                };\n            }\n            case 'map-value-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                };\n            }\n        }\n        return null;\n    }\n    atIndentedComment(start, indent) {\n        if (this.type !== 'comment')\n            return false;\n        if (this.indent <= indent)\n            return false;\n        return start.every(st => st.type === 'newline' || st.type === 'space');\n    }\n    *documentEnd(docEnd) {\n        if (this.type !== 'doc-mode') {\n            if (docEnd.end)\n                docEnd.end.push(this.sourceToken);\n            else\n                docEnd.end = [this.sourceToken];\n            if (this.type === 'newline')\n                yield* this.pop();\n        }\n    }\n    *lineEnd(token) {\n        switch (this.type) {\n            case 'comma':\n            case 'doc-start':\n            case 'doc-end':\n            case 'flow-seq-end':\n            case 'flow-map-end':\n            case 'map-value-ind':\n                yield* this.pop();\n                yield* this.step();\n                break;\n            case 'newline':\n                this.onKeyLine = false;\n            // fallthrough\n            case 'space':\n            case 'comment':\n            default:\n                // all other values are errors\n                if (token.end)\n                    token.end.push(this.sourceToken);\n                else\n                    token.end = [this.sourceToken];\n                if (this.type === 'newline')\n                    yield* this.pop();\n        }\n    }\n}\n\nexport { Parser };\n","import { Composer } from './compose/composer.js';\nimport { Document } from './doc/Document.js';\nimport { prettifyError, YAMLParseError } from './errors.js';\nimport { warn } from './log.js';\nimport { LineCounter } from './parse/line-counter.js';\nimport { Parser } from './parse/parser.js';\n\nfunction parseOptions(options) {\n    const prettyErrors = options.prettyErrors !== false;\n    const lineCounter = options.lineCounter || (prettyErrors && new LineCounter()) || null;\n    return { lineCounter, prettyErrors };\n}\n/**\n * Parse the input as a stream of YAML documents.\n *\n * Documents should be separated from each other by `...` or `---` marker lines.\n *\n * @returns If an empty `docs` array is returned, it will be of type\n *   EmptyStream and contain additional stream information. In\n *   TypeScript, you should use `'empty' in docs` as a type guard for it.\n */\nfunction parseAllDocuments(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    const docs = Array.from(composer.compose(parser.parse(source)));\n    if (prettyErrors && lineCounter)\n        for (const doc of docs) {\n            doc.errors.forEach(prettifyError(source, lineCounter));\n            doc.warnings.forEach(prettifyError(source, lineCounter));\n        }\n    if (docs.length > 0)\n        return docs;\n    return Object.assign([], { empty: true }, composer.streamInfo());\n}\n/** Parse an input string into a single YAML.Document */\nfunction parseDocument(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    // `doc` is always set by compose.end(true) at the very latest\n    let doc = null;\n    for (const _doc of composer.compose(parser.parse(source), true, source.length)) {\n        if (!doc)\n            doc = _doc;\n        else if (doc.options.logLevel !== 'silent') {\n            doc.errors.push(new YAMLParseError(_doc.range.slice(0, 2), 'MULTIPLE_DOCS', 'Source contains multiple documents; please use YAML.parseAllDocuments()'));\n            break;\n        }\n    }\n    if (prettyErrors && lineCounter) {\n        doc.errors.forEach(prettifyError(source, lineCounter));\n        doc.warnings.forEach(prettifyError(source, lineCounter));\n    }\n    return doc;\n}\nfunction parse(src, reviver, options) {\n    let _reviver = undefined;\n    if (typeof reviver === 'function') {\n        _reviver = reviver;\n    }\n    else if (options === undefined && reviver && typeof reviver === 'object') {\n        options = reviver;\n    }\n    const doc = parseDocument(src, options);\n    if (!doc)\n        return null;\n    doc.warnings.forEach(warning => warn(doc.options.logLevel, warning));\n    if (doc.errors.length > 0) {\n        if (doc.options.logLevel !== 'silent')\n            throw doc.errors[0];\n        else\n            doc.errors = [];\n    }\n    return doc.toJS(Object.assign({ reviver: _reviver }, options));\n}\nfunction stringify(value, replacer, options) {\n    let _replacer = null;\n    if (typeof replacer === 'function' || Array.isArray(replacer)) {\n        _replacer = replacer;\n    }\n    else if (options === undefined && replacer) {\n        options = replacer;\n    }\n    if (typeof options === 'string')\n        options = options.length;\n    if (typeof options === 'number') {\n        const indent = Math.round(options);\n        options = indent < 1 ? undefined : indent > 8 ? { indent: 8 } : { indent };\n    }\n    if (value === undefined) {\n        const { keepUndefined } = options ?? replacer ?? {};\n        if (!keepUndefined)\n            return undefined;\n    }\n    return new Document(value, _replacer, options).toString(options);\n}\n\nexport { parse, parseAllDocuments, parseDocument, stringify };\n","import { PageContainer } from '@ant-design/pro-components';\nimport type { SelectProps } from 'antd';\nimport { Button, Card, Select } from 'antd';\nimport XML from 'fast-xml-parser';\nimport * as LosslessJSON from 'lossless-json';\nimport { useState } from 'react';\nimport AceEditor from 'react-ace';\nimport type { AceOptions } from 'react-ace/types';\nimport YAML from 'yaml';\n\nimport Iconify from '@/components/Iconify';\nimport { format } from '@/utils/formatter.ts';\n\nimport 'ace-builds/src-noconflict/ext-searchbox';\nimport 'ace-builds/src-noconflict/mode-json';\nimport 'ace-builds/src-noconflict/mode-xml';\nimport 'ace-builds/src-noconflict/mode-yaml';\nimport 'ace-builds/src-noconflict/theme-monokai';\n\nconst CodeTypeOptions: SelectProps['options'] = [\n  { label: 'JSON', value: 'json' },\n  { label: 'YAML', value: 'yaml' },\n  { label: 'XML', value: 'xml' },\n];\n\nconst options: AceOptions = {\n  useWorker: false,\n  tabSize: 2,\n  wrap: true,\n  showLineNumbers: true,\n};\n\nconst targetAceEditorOptions: AceOptions = {\n  useWorker: false,\n  tabSize: 2,\n  wrap: true,\n  showLineNumbers: true,\n};\nexport const Component = () => {\n  const [sourceType, setSourceType] = useState<string>('json');\n  const [targetType, setTargetType] = useState<string>('yaml');\n  const [sourceValue, setSourceValue] = useState<string>('');\n  const [targetValue, setTargetValue] = useState<string>('');\n\n  const onClickSyncAltBtn = () => {\n    const targetTypeTmp = targetType;\n    setTargetType(sourceType);\n    setSourceType(targetTypeTmp);\n  };\n  const onClickConversionBtn = () => {\n    if (sourceValue === undefined || sourceValue === '') {\n      return;\n    }\n\n    let sourceObj = null;\n\n    // 解析 source\n    try {\n      if (sourceType === 'json') {\n        sourceObj = LosslessJSON.parse(sourceValue, null, LosslessJSON.parseNumberAndBigInt);\n      } else if (sourceType === 'yaml') {\n        sourceObj = YAML.parse(sourceValue, { intAsBigInt: true });\n      } else if (sourceType === 'xml') {\n        const xmlParser = new XML.XMLParser();\n        sourceObj = xmlParser.parse(sourceValue);\n      }\n    } catch (e) {\n      alert(e);\n    }\n\n    // 设置 target\n    try {\n      if (targetType === 'yaml') {\n        format(YAML.stringify(sourceObj), 'yaml').then((val) => {\n          setTargetValue(val);\n        });\n      } else if (targetType === 'json') {\n        format(LosslessJSON.stringify(sourceObj) || '', 'json').then((val) => {\n          setTargetValue(val);\n        });\n      } else if (targetType === 'xml') {\n        const xmlBuilder = new XML.XMLBuilder({\n          ignoreAttributes: false,\n          format: true,\n          oneListGroup: true,\n          suppressEmptyNode: true,\n        });\n        setTargetValue(xmlBuilder.build(sourceObj));\n      }\n    } catch (e) {\n      alert(e);\n    }\n  };\n  return (\n    <PageContainer title={false} className=\"bg-gray-50\">\n      <div className=\"mx-auto flex h-[calc(100dvh-56px)] max-w-screen-xl flex-col p-4 md:h-screen\">\n        <Card>\n          <div className=\"flex gap-4\">\n            <div className=\"max-w-[150px] flex-auto\">\n              <Select options={CodeTypeOptions} value={sourceType} onSelect={setSourceType} className=\"w-full\" />\n            </div>\n            <div className=\"flex-auto flex-shrink-0 flex-grow-0\">\n              <Button icon={<Iconify icon=\"material-symbols:sync-alt\" />} onClick={onClickSyncAltBtn} />\n            </div>\n            <div className=\"max-w-[150px] flex-auto\">\n              <Select options={CodeTypeOptions} value={targetType} onSelect={setTargetType} className=\"w-full\" />\n            </div>\n            <div className=\"flex-auto\">\n              <Button onClick={onClickConversionBtn}>转换</Button>\n            </div>\n          </div>\n        </Card>\n        <div className=\"mt-4 grid flex-1 grid-cols-1 gap-4 md:grid-cols-2\">\n          <div>\n            <AceEditor\n              mode={sourceType}\n              theme=\"monokai\"\n              width=\"100%\"\n              height=\"\"\n              className=\"h-full\"\n              setOptions={options}\n              value={sourceValue}\n              onChange={setSourceValue}\n            />\n          </div>\n          <div>\n            <AceEditor\n              mode={targetType}\n              theme=\"monokai\"\n              width=\"100%\"\n              height=\"\"\n              className=\"h-full\"\n              setOptions={targetAceEditorOptions}\n              value={targetValue}\n              onChange={setTargetValue}\n            />\n          </div>\n        </div>\n      </div>\n    </PageContainer>\n  );\n};\n"],"names":["nameStartChar","nameChar","nameRegexp","regexName","getAllMatches","string","regex","matches","match","allmatches","len","index","isName","exports","v","obj","target","arrayMode","keys","i","util","require$$0","defaultOptions","validator","xmlData","options","tags","tagFound","reachedRoot","readPI","tagStartPos","readCommentAndCDATA","closingTag","tagName","validateTagName","msg","getErrorObject","getLineNumberForPosition","result","readAttributeStr","attrStr","attrStrStart","isValid","validateAttributeString","otg","openPos","afterAmp","validateAmpersand","isWhiteSpace","t","char","start","tagname","angleBracketsCount","doubleQuote","singleQuote","startChar","tagClosed","validAttrStrRegxp","attrNames","getPositionFromMatch","attrName","validateAttrName","validateNumberAmpersand","re","count","code","message","lineNumber","lines","val","jPath","attrs","buildOptions","OptionsBuilder","XmlNode","key","node","xmlNode","readDocType","entities","hasBody","comment","exp","isEntity","readEntityExp","validateEntityName","isElement","isAttlist","isNotation","isComment","entityName","name","DocTypeReader","hexRegex","numRegex","consider","toNumber","str","trimmedStr","sign","leadingZeros","numTrimmedByZeros","trimZeros","eNotation","num","numStr","strnum","require$$1","require$$2","require$$3","OrderedObjParser$1","_","addExternalEntities","parseXml","parseTextData","resolveNameSpace","buildAttributesMap","isItStopNode","replaceEntitiesValue","readStopNodeData","saveTextToParentTag","addChild","externalEntities","entKeys","ent","dontTrim","hasAttributes","isLeafNode","escapeEntities","newval","parseValue","prefix","attrsRegx","oldVal","aName","newVal","attrCollection","xmlObj","currentNode","textData","closeIndex","findClosingIndex","colonIndex","lastTagName","propIndex","tagData","readTagExp","childNode","endIndex","tagExp","rawTagName","attrExpPresent","lastTag","tagContent","entity","stopNodes","currentTagName","allNodesExp","stopNodePath","stopNodeExp","tagExpWithClosingIndex","closingChar","attrBoundary","ch","errMsg","closingIndex","removeNSPrefix","separatorIndex","startIndex","openTagCount","shouldParse","OrderedObjParser_1","OrderedObjParser","prettify","compress","arr","text","compressedObj","tagObj","property","propName","newJpath","isLeaf","isLeafTag","assignAttributes","attrMap","jpath","atrrName","textNodeName","propCount","node2json","XMLParser$1","validationOption","orderedObjParser","orderedResult","value","XMLParser_1","XMLParser","EOL","toXml","jArray","indentation","arrToStr","xmlStr","isPreviousElementTag","newJPath","tagText","isStopNode","attStr","attr_to_str","tempInd","piTextNodeName","newIdentation","tagStart","tagValue","attr","attrVal","textValue","orderedJs2Xml","buildFromOrderedJs","a","Builder","isAttribute","processTextOrObjNode","indentate","jObj","level","arrLen","listTagVal","j","item","Ks","L","object","tagEndExp","piClosingChar","closeTag","json2xml","XMLBuilder","fxp","ALIAS","DOC","MAP","PAIR","SCALAR","SEQ","NODE_TYPE","isAlias","isDocument","isMap","isPair","isScalar","isSeq","isCollection","isNode","hasAnchor","BREAK","SKIP","REMOVE","visit","visitor","visitor_","initVisitor","visit_","path","ctrl","callVisitor","replaceNode","ci","ck","cv","visitAsync","visitAsync_","_a","_b","_c","_d","_e","parent","pt","escapeChars","escapeTagName","tn","Directives","yaml","copy","res","line","onError","parts","handle","version","source","verbatim","suffix","error","tag","doc","tagEntries","tagNames","_key","anchorIsValid","anchor","anchorNames","root","anchors","findNewAnchor","exclude","createNodeAnchors","aliasObjects","sourceObjects","prevAnchors","ref","applyReviver","reviver","v0","v1","k","toJS","arg","ctx","data","NodeBase","type","mapAsMap","maxAliasCount","onAnchor","Alias","found","_arg","getAliasCount","_onComment","_onChompKeep","src","c","kc","vc","isScalarValue","Scalar","defaultTagPrefix","findTagObject","createNode","map","aliasDuplicateObjects","onTagObj","schema","collectionFromPath","isEmptyPath","Collection","it","rest","keepScalar","allowScalar","stringifyComment","indentComment","indent","lineComment","FOLD_FLOW","FOLD_BLOCK","FOLD_QUOTED","foldFlowLines","mode","indentAtStart","lineWidth","minContentWidth","onFold","onOverflow","endStep","folds","escapedFolds","end","split","prev","overflow","escStart","escEnd","consumeMoreIndentedLines","next","fold","getFoldOptions","isBlock","containsDocumentMarker","lineLengthOverLimit","indentLength","limit","strLen","doubleQuotedString","json","implicitKey","minMultiLineLength","singleQuotedString","quotedString","qs","hasDouble","hasSingle","blockEndNewlines","blockString","onComment","onChompKeep","blockQuote","commentString","literal","chomp","endStart","endNlPos","startWithSpace","startEnd","startNlPos","header","body","plainString","actualString","indentStep","inFlow","test","compat","stringifyString","ss","_stringify","_type","defaultKeyType","defaultStringType","createStringifyContext","opt","getTagObject","stringifyProps","props","stringify","o","stringifyPair","allNullValues","indentSeq","simpleKeys","keyComment","explicitKey","keyCommentDone","chompKeep","vsb","vcb","valueComment","valueCommentDone","valueStr","ws","cs","vs0","nl0","hasNewline","flow","hasPropsLine","sp0","warn","logLevel","warning","MERGE_KEY","addPairToJSMap","isMergeKey","mergeToJSMap","jsKey","stringKey","stringifyKey","jsValue","srcMap","strCtx","strKey","jsonStr","createPair","Pair","pair","stringifyCollection","collection","stringifyFlowCollection","stringifyBlockCollection","items","blockItemPrefix","flowChars","itemIndent","itemCtx","addCommentBefore","ik","fcPadding","reqNewline","linesAtValue","iv","sum","ic","findPair","YAMLMap","keepUndefined","replacer","add","overwrite","_pair","sortEntries","Type","YAMLSeq","idx","asItemIndex","seq","nullTag","boolTag","sv","stringifyNumber","format","minFractionDigits","n","d","floatNaN","floatExp","float","dot","intIdentify","intResolve","offset","radix","intAsBigInt","intStringify","intOct","_onError","int","intHex","stringifyJSON","jsonScalars","jsonError","binary","buffer","buf","s","resolvePairs","cn","createPairs","iterable","pairs","YAMLOMap","omap","seenKeys","boolStringify","trueTag","falseTag","f","intBin","YAMLSet","keepPair","set","parseSexagesimal","asBigInt","p","stringifySexagesimal","_60","intTime","floatTime","timestamp","year","month","day","hour","minute","second","millisec","date","tz","schemas","schema$1","schema$2","tagsByName","coreKnownTags","getTags","customTags","schemaName","sortMapEntriesByKey","b","Schema","merge","resolveKnownTags","sortMapEntries","toStringDefaults","stringifyDocument","hasDirectives","dir","contentComment","dc","Document","_replacer","assertCollection","keyToStr","asStr","anchorPrefix","setAnchors","jsonArg","contents","YAMLError","pos","YAMLParseError","YAMLWarning","prettifyError","lc","col","lineStr","trimStart","pointer","resolveProps","tokens","indicator","startOnNewline","spaceBefore","atNewline","hasSpace","commentSep","hasNewlineAfterProp","reqSpace","comma","token","cb","last","containsNewline","st","flowIndentCheck","fc","mapIncludes","search","uniqueKeys","isEqual","startColMsg","resolveBlockMap","composeNode","composeEmptyNode","bm","NodeClass","commentEnd","collItem","sep","keyProps","keyStart","keyNode","valueProps","valueNode","resolveBlockSeq","bs","resolveEnd","blockMsg","resolveFlowCollection","fcName","coll","atRoot","prevItemComment","loop","expectedEnd","ce","ee","cePos","resolveCollection","CN","Coll","composeCollection","tagToken","expType","kt","resolveBlockScalar","scalar","strict","parseBlockScalarHeader","splitLines","chompStart","content","trimIndent","contentStart","prevMoreIndented","crlf","length","ts","first","m","resolveFlowScalar","rel","plainValue","singleQuotedValue","doubleQuotedValue","valueEnd","badChar","foldLines","foldNewline","cc","escapeCodes","parseCharCode","raw","wsStart","composeScalar","range","findScalarTagByName","findScalarTagByTest","matchWithTest","directives","emptyScalarPosition","before","isSrcToken","composeAlias","alias","composeDoc","opts","contentEnd","getErrorPos","parsePrelude","prelude","atComment","afterEmptyLine","Composer","afterDoc","forceDoc","endOffset","resolveAsScalar","createScalarToken","context","he","head","addEndtoBlockProps","setScalarValue","afterKey","setBlockScalarValue","setFlowScalarValue","oa","tok","nl","cst","stringifyToken","stringifyItem","_visit","field","BOM","DOCUMENT","FLOW_END","prettyToken","tokenType","isEmpty","hexDigits","tagChars","invalidFlowScalarChars","invalidAnchorChars","isNotAnchorChar","Lexer","incomplete","dt","state","dirEnd","sp","ch0","ch1","quote","qb","lastChar","allowEmpty","allowTabs","LineCounter","low","high","mid","includesToken","list","findNonEmptyIndex","isFlowToken","getPrevProps","getFirstKeyStartProps","fixFlowSeqItems","Parser","onNewLine","lexeme","top","bv","atNextItem","fs","docEnd","parseOptions","prettyErrors","parseAllDocuments","lineCounter","parser","composer","docs","parseDocument","_doc","parse","_reviver","CodeTypeOptions","targetAceEditorOptions","Component","sourceType","setSourceType","useState","targetType","setTargetType","sourceValue","setSourceValue","targetValue","setTargetValue","onClickSyncAltBtn","targetTypeTmp","onClickConversionBtn","sourceObj","LosslessJSON.parse","LosslessJSON.parseNumberAndBigInt","YAML","XML","e","LosslessJSON.stringify","xmlBuilder","jsx","PageContainer","jsxs","Card","Select","Button","Iconify","AceEditor"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81]}