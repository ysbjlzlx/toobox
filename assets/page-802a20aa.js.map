{"version":3,"file":"page-802a20aa.js","sources":["../../node_modules/react-is/cjs/react-is.production.min.js","../../node_modules/react-is/index.js","../../node_modules/react-markdown/lib/uri-transformer.js","../../node_modules/is-buffer/index.js","../../node_modules/unist-util-stringify-position/lib/index.js","../../node_modules/vfile-message/lib/index.js","../../node_modules/vfile/lib/minpath.browser.js","../../node_modules/vfile/lib/minproc.browser.js","../../node_modules/vfile/lib/minurl.shared.js","../../node_modules/vfile/lib/minurl.browser.js","../../node_modules/vfile/lib/index.js","../../node_modules/bail/index.js","../../node_modules/extend/index.js","../../node_modules/is-plain-obj/index.js","../../node_modules/trough/index.js","../../node_modules/unified/lib/index.js","../../node_modules/mdast-util-to-string/lib/index.js","../../node_modules/micromark-util-chunked/index.js","../../node_modules/micromark-util-combine-extensions/index.js","../../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../../node_modules/micromark-util-character/index.js","../../node_modules/micromark-factory-space/index.js","../../node_modules/micromark/lib/initialize/content.js","../../node_modules/micromark/lib/initialize/document.js","../../node_modules/micromark-util-classify-character/index.js","../../node_modules/micromark-util-resolve-all/index.js","../../node_modules/micromark-core-commonmark/lib/attention.js","../../node_modules/micromark-core-commonmark/lib/autolink.js","../../node_modules/micromark-core-commonmark/lib/blank-line.js","../../node_modules/micromark-core-commonmark/lib/block-quote.js","../../node_modules/micromark-core-commonmark/lib/character-escape.js","../../node_modules/decode-named-character-reference/index.dom.js","../../node_modules/micromark-core-commonmark/lib/character-reference.js","../../node_modules/micromark-core-commonmark/lib/code-fenced.js","../../node_modules/micromark-core-commonmark/lib/code-indented.js","../../node_modules/micromark-core-commonmark/lib/code-text.js","../../node_modules/micromark-util-subtokenize/index.js","../../node_modules/micromark-core-commonmark/lib/content.js","../../node_modules/micromark-factory-destination/index.js","../../node_modules/micromark-factory-label/index.js","../../node_modules/micromark-factory-title/index.js","../../node_modules/micromark-factory-whitespace/index.js","../../node_modules/micromark-util-normalize-identifier/index.js","../../node_modules/micromark-core-commonmark/lib/definition.js","../../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../../node_modules/micromark-core-commonmark/lib/heading-atx.js","../../node_modules/micromark-util-html-tag-name/index.js","../../node_modules/micromark-core-commonmark/lib/html-flow.js","../../node_modules/micromark-core-commonmark/lib/html-text.js","../../node_modules/micromark-core-commonmark/lib/label-end.js","../../node_modules/micromark-core-commonmark/lib/label-start-image.js","../../node_modules/micromark-core-commonmark/lib/label-start-link.js","../../node_modules/micromark-core-commonmark/lib/line-ending.js","../../node_modules/micromark-core-commonmark/lib/thematic-break.js","../../node_modules/micromark-core-commonmark/lib/list.js","../../node_modules/micromark-core-commonmark/lib/setext-underline.js","../../node_modules/micromark/lib/initialize/flow.js","../../node_modules/micromark/lib/initialize/text.js","../../node_modules/micromark/lib/create-tokenizer.js","../../node_modules/micromark/lib/constructs.js","../../node_modules/micromark/lib/parse.js","../../node_modules/micromark/lib/preprocess.js","../../node_modules/micromark/lib/postprocess.js","../../node_modules/micromark-util-decode-numeric-character-reference/index.js","../../node_modules/micromark-util-decode-string/index.js","../../node_modules/mdast-util-from-markdown/lib/index.js","../../node_modules/remark-parse/lib/index.js","../../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../../node_modules/mdast-util-to-hast/lib/handlers/break.js","../../node_modules/mdast-util-to-hast/lib/handlers/code.js","../../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../../node_modules/micromark-util-sanitize-uri/index.js","../../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../../node_modules/mdast-util-to-hast/lib/handlers/html.js","../../node_modules/mdast-util-to-hast/lib/revert.js","../../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../../node_modules/mdast-util-to-hast/lib/handlers/image.js","../../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../../node_modules/mdast-util-to-hast/lib/handlers/link.js","../../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../../node_modules/mdast-util-to-hast/lib/handlers/list.js","../../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../../node_modules/mdast-util-to-hast/lib/handlers/root.js","../../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../../node_modules/unist-util-position/lib/index.js","../../node_modules/mdast-util-to-hast/lib/handlers/table.js","../../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../../node_modules/trim-lines/index.js","../../node_modules/mdast-util-to-hast/lib/handlers/text.js","../../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../../node_modules/mdast-util-to-hast/lib/handlers/index.js","../../node_modules/unist-util-is/lib/index.js","../../node_modules/unist-util-visit-parents/lib/index.js","../../node_modules/unist-util-visit/lib/index.js","../../node_modules/unist-util-generated/lib/index.js","../../node_modules/mdast-util-definitions/lib/index.js","../../node_modules/mdast-util-to-hast/lib/state.js","../../node_modules/mdast-util-to-hast/lib/footer.js","../../node_modules/mdast-util-to-hast/lib/index.js","../../node_modules/remark-rehype/lib/index.js","../../node_modules/property-information/lib/util/schema.js","../../node_modules/property-information/lib/util/merge.js","../../node_modules/property-information/lib/normalize.js","../../node_modules/property-information/lib/util/info.js","../../node_modules/property-information/lib/util/types.js","../../node_modules/property-information/lib/util/defined-info.js","../../node_modules/property-information/lib/util/create.js","../../node_modules/property-information/lib/xlink.js","../../node_modules/property-information/lib/xml.js","../../node_modules/property-information/lib/util/case-sensitive-transform.js","../../node_modules/property-information/lib/util/case-insensitive-transform.js","../../node_modules/property-information/lib/xmlns.js","../../node_modules/property-information/lib/aria.js","../../node_modules/property-information/lib/html.js","../../node_modules/property-information/lib/svg.js","../../node_modules/property-information/lib/find.js","../../node_modules/property-information/lib/hast-to-react.js","../../node_modules/property-information/index.js","../../node_modules/react-markdown/lib/rehype-filter.js","../../node_modules/hast-util-whitespace/index.js","../../node_modules/space-separated-tokens/index.js","../../node_modules/comma-separated-tokens/index.js","../../node_modules/inline-style-parser/index.js","../../node_modules/style-to-object/index.js","../../node_modules/react-markdown/lib/ast-to-react.js","../../node_modules/react-markdown/lib/react-markdown.js","../../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../../node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../../node_modules/micromark-extension-gfm-table/lib/syntax.js","../../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../../node_modules/micromark-extension-gfm/index.js","../../node_modules/ccount/index.js","../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../../node_modules/mdast-util-find-and-replace/lib/index.js","../../node_modules/mdast-util-gfm-autolink-literal/lib/index.js","../../node_modules/mdast-util-to-markdown/lib/util/association.js","../../node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../../node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../../node_modules/mdast-util-to-markdown/lib/util/safe.js","../../node_modules/mdast-util-to-markdown/lib/util/track.js","../../node_modules/mdast-util-gfm-footnote/lib/index.js","../../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../../node_modules/mdast-util-gfm-strikethrough/lib/index.js","../../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../../node_modules/markdown-table/index.js","../../node_modules/mdast-util-gfm-table/lib/index.js","../../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../../node_modules/mdast-util-gfm-task-list-item/lib/index.js","../../node_modules/mdast-util-gfm/lib/index.js","../../node_modules/remark-gfm/index.js","../../node_modules/ace-builds/src-noconflict/mode-markdown.js","../../src/pages/markdown/page.tsx"],"sourcesContent":["/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return (\n    fileUrlOrPath !== null &&\n    typeof fileUrlOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string | URL} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {string | URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Buffer`\n   *   (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding || undefined)\n  }\n\n  /**\n   * Create a warning message associated with the file.\n   *\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Create an info message associated with the file.\n   *\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Create a fatal error associated with the file.\n   *\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Message.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value)\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n */\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const includeImageAlt = (options || {}).includeImageAlt\n  return one(\n    value,\n    typeof includeImageAlt === 'boolean' ? includeImageAlt : true\n  )\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt) {\n  return (\n    (node(value) &&\n      (('value' in value && value.value) ||\n        (includeImageAlt && 'alt' in value && value.alt) ||\n        ('children' in value && all(value.children, includeImageAlt)))) ||\n    (Array.isArray(value) && all(value, includeImageAlt)) ||\n    ''\n  )\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding | Options | null | undefined} [encoding]\n   * @param {Options | null | undefined} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n    return compiler(options)(\n      postprocess(\n        // @ts-expect-error: micromark types need to accept `null`.\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    // @ts-expect-error Patched.\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    let tail = node.children[node.children.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      }\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    setData('inReference', true)\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\n  /** @type {Properties} */\n  const properties = {}\n\n  if (lang) {\n    properties.className = ['language-' + lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    state.footnoteOrder.push(id)\n    state.footnoteCounts[id] = 1\n    counter = state.footnoteOrder.length\n  } else {\n    state.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = state.footnoteCounts[id]\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id:\n        state.clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// …are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  const footnoteById = state.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return {type: 'text', value: '![' + node.alt + suffix}\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start.line && end.line) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(node, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {position, pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  const footnoteById = {}\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough\n\n  state.handlers = {...handlers, ...settings.handlers}\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree)\n  state.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  state.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {}\n\n  state.patch = patch\n  state.applyData = applyData\n  state.one = oneBound\n  state.all = allBound\n  state.wrap = wrap\n  // To do: next major: remove `augment`.\n  state.augment = augment\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return state\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that’s a state :)\n    return one(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that’s a state :)\n    return all(state, parent)\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        }\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = {...result.properties, ...hProperties}\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  const type = node && node.type\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent)\n  }\n\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? {...node, children: all(state, node)} : node\n  }\n\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent)\n  }\n\n  return defaultUnknownHandler(state, node)\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n    while (++index < nodes.length) {\n      const result = one(state, nodes[index], parent)\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastText | HastElement} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: all(state, node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, null)\n  const foot = footer(state)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template {import('react').ElementType} T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {uriTransformer} from './uri-transformer.js'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const transform =\n    options.transformLinkUri === undefined\n      ? uriTransformer\n      : options.transformLinkUri\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = index\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && transform) {\n    properties.href = transform(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  asciiDigit,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst www = {\n  tokenize: tokenizeWww,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst punctuation = {\n  tokenize: tokenizePunctuation,\n  partial: true\n}\nconst namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst httpAutolink = {\n  tokenize: tokenizeHttpAutolink,\n  previous: previousHttp\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n/** @type {ConstructRecord} */\n\nconst text = {}\n/** @type {Extension} */\n\nexport const gfmAutolinkLiteral = {\n  text\n}\nlet code = 48 // Add alphanumerics.\n\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\n\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n/** @type {Tokenizer} */\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean} */\n\n  let hasDot\n  /** @type {boolean|undefined} */\n\n  let hasDigitInLastSegment\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n  /** @type {State} */\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (code === 45 || code === 95) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      if (!hasDigitInLastSegment && asciiDigit(code)) {\n        hasDigitInLastSegment = true\n      }\n\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n  /** @type {State} */\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    hasDigitInLastSegment = undefined\n    return label\n  }\n  /** @type {State} */\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n  /** @type {State} */\n\n  function afterDashOrUnderscore(code) {\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (hasDot && !hasDigitInLastSegment) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww') // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that’s not how it’s implemented by them).\n\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 72 && code !== 104) ||\n      !previousHttp(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n  /** @type {State} */\n\n  function t1(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function t2(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function p(code) {\n    if (code === 80 || code === 112) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function s(code) {\n    if (code === 83 || code === 115) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n  /** @type {State} */\n\n  function colon(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash1(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash2(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return w2\n  }\n  /** @type {State} */\n\n  function w2(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function w3(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function dot(code) {\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean|undefined} */\n  let hasUnderscoreInLastSegment\n  /** @type {boolean|undefined} */\n\n  let hasUnderscoreInLastLastSegment\n  return domain\n  /** @type {State} */\n\n  function domain(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 || code === 95) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    } // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n\n    if (\n      code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function punctuationContinuation(code) {\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    if (code === 95) hasUnderscoreInLastSegment = true\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePath(effects, ok) {\n  let balance = 0\n  return inPath\n  /** @type {State} */\n\n  function inPath(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (code === 40) {\n      balance++\n    }\n\n    if (code === 41) {\n      return effects.check(\n        punctuation,\n        parenAtPathEnd,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it’s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    } // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction trailingPunctuation(code) {\n  return (\n    code === 33 ||\n    code === 34 ||\n    code === 39 ||\n    code === 41 ||\n    code === 42 ||\n    code === 44 ||\n    code === 46 ||\n    code === 58 ||\n    code === 59 ||\n    code === 60 ||\n    code === 63 ||\n    code === 95 ||\n    code === 126\n  )\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction pathEnd(code) {\n  return code === null || code === 60 || markdownLineEndingOrSpace(code)\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n/** @type {Previous} */\n\nfunction previousEmail(code) {\n  return code !== 47 && previousHttp(code)\n}\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\n\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n\n  while (index--) {\n    const token = events[index][1]\n\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    } // @ts-expect-error If we’ve seen this token, and it was marked as not\n    // having any unbalanced bracket before it, we can exit.\n\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n\n  if (events.length > 0 && !result) {\n    // @ts-expect-error Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @returns {Extension}\n */\n\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    const token = self.events[index][1]\n\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    } // Exit if we’ve walked far enough.\n\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n\n    if (id.charCodeAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n/** @type {Resolver} */\n\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token|undefined} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker' // The whole (without `!`):\n\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // The `^` marker\n\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  } // Increment the end 1 character.\n\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n  /** @type {Array<Event>} */\n\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context], // The `[`\n    events[index + 3],\n    events[index + 4], // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context], // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context], // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n  /** @type {State} */\n\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n  /** @type {State} */\n\n  function callData(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size++ > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      effects.exit('chunkString')\n      token = effects.exit('gfmFootnoteCallString')\n      return defined.includes(normalizeIdentifier(self.sliceSerialize(token)))\n        ? end(code)\n        : nok(code)\n    }\n\n    effects.consume(code)\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    return code === 92 ? callEscape : callData\n  }\n  /** @type {State} */\n\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n\n    return callData(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    effects.exit('gfmFootnoteCall')\n    return ok\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n\n  let identifier\n  let size = 0\n  /** @type {boolean|undefined} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelStart\n  }\n  /** @type {State} */\n\n  function labelStart(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      return atBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      size++\n      return atBreak\n    }\n\n    effects.enter('chunkString').contentType = 'string'\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      markdownLineEnding(code) ||\n      code === 91 ||\n      code === 93 ||\n      size > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n\n      return factorySpace(effects, done, 'gfmFootnoteDefinitionWhitespace')\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!defined.includes(identifier)) {\n      defined.push(identifier)\n    }\n\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n/** @type {Exiter} */\n\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (`boolean`, default:\n *   `true`).\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfmStrikethrough(options = {}) {\n  let single = options.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n\n  function resolveAllStrikethrough(events, context) {\n    let index = -1 // Walk through all events.\n\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index // Now walk back to find an opener.\n\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open && // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            } // Opening.\n\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ] // Between.\n\n            splice(\n              nextEvents,\n              nextEvents.length,\n              0,\n              resolveAll(\n                context.parser.constructs.insideSpan.null,\n                events.slice(open + 1, index),\n                context\n              )\n            ) // Closing.\n\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n\n    return events\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n    /** @type {State} */\n\n    function more(code) {\n      const before = classifyCharacter(previous)\n\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n/**\n * @typedef {'left'|'center'|'right'|'none'} Align\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Extension} */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolve: resolveTable\n    }\n  }\n}\nconst nextPrefixedOrBlank = {\n  tokenize: tokenizeNextPrefixedOrBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  /** @type {boolean|undefined} */\n\n  let inHead\n  /** @type {boolean|undefined} */\n\n  let inDelimiterRow\n  /** @type {boolean|undefined} */\n\n  let inRow\n  /** @type {number|undefined} */\n\n  let contentStart\n  /** @type {number|undefined} */\n\n  let contentEnd\n  /** @type {number|undefined} */\n\n  let cellStart\n  /** @type {boolean|undefined} */\n\n  let seenCellInRow\n\n  while (++index < events.length) {\n    const token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        const content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        /** @type {Token} */\n\n        const text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          // @ts-expect-error It’s fine.\n          contentType: 'text'\n        }\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart !== undefined &&\n      cellStart + (seenCellInRow ? 0 : 1) < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      const cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      cellStart = index + 1\n      seenCellInRow = true\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  /** @type {Array<Align>} */\n\n  const align = []\n  let tableHeaderCount = 0\n  /** @type {boolean|undefined} */\n\n  let seenDelimiter\n  /** @type {boolean|undefined} */\n\n  let hasDash\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // @ts-expect-error Custom.\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function cellDividerHead(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n  /** @type {State} */\n\n  function cellBreakHead(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndHead(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceHead(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n  /** @type {State} */\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeHead(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    } // Anything else.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n    const originalInterrupt = self.interrupt\n    self.interrupt = true\n    return effects.attempt(\n      {\n        tokenize: tokenizeRowEnd,\n        partial: true\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        effects.enter('tableDelimiterRow')\n        return atDelimiterRowBreak(code)\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        return nok(code)\n      }\n    )(code)\n  }\n  /** @type {State} */\n\n  function atDelimiterRowBreak(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push('none')\n      return inFillerDelimiter\n    }\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    } // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceDelimiter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function inFillerDelimiter(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function afterLeftAlignment(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    } // Anything else is not ok.\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function afterRightAlignment(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    } // `|`\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow') // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, bodyStart, 'linePrefix', 4),\n        tableClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n  /** @type {State} */\n\n  function rowStartBody(code) {\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function cellDividerBody(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n  /** @type {State} */\n\n  function cellBreakBody(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndBody(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    } // `|`\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceBody(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n  /** @type {State} */\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeBody(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    } // Anything else.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, rowStartBody, 'linePrefix', 4),\n        tableBodyClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeRowEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, prefixed, 'linePrefix')\n    }\n    /** @type {State} */\n\n    function prefixed(code) {\n      // Blank or interrupting line.\n      if (\n        self.parser.lazy[self.now().line] ||\n        code === null ||\n        markdownLineEnding(code)\n      ) {\n        return nok(code)\n      }\n\n      const tail = self.events[self.events.length - 1] // Indented code can interrupt delimiter and body rows.\n\n      if (\n        !self.parser.constructs.disable.null.includes('codeIndented') &&\n        tail &&\n        tail[1].type === 'linePrefix' &&\n        tail[2].sliceSerialize(tail[1], true).length >= 4\n      ) {\n        return nok(code)\n      }\n\n      self._gfmTableDynamicInterruptHack = true\n      return effects.check(\n        self.parser.constructs.flow,\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return nok(code)\n        },\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return ok(code)\n        }\n      )(code)\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check') // EOL.\n\n    effects.consume(code)\n    return whitespace\n  }\n  /** @type {State} */\n\n  function whitespace(code) {\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    } // EOF or whitespace\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      return ok(code)\n    } // Anything else.\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n  /** @type {State} */\n\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null || // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    // To match how GH works in comments, use `markdownSpace` (`[ \\t]`) instead\n    // of `markdownLineEndingOrSpace` (`[ \\t\\r\\n]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction spaceThenNonSpace(effects, ok, nok) {\n  const self = this\n  return factorySpace(effects, after, 'whitespace')\n  /** @type {State} */\n\n  function after(code) {\n    const tail = self.events[self.events.length - 1]\n    return (\n      // We either found spaces…\n      ((tail && tail[1].type === 'whitespace') || // …or it was followed by a line ending, in which case, there has to be\n        // non-whitespace after that line ending, because otherwise we’d get an\n        // EOF as the content is closed with blank lines.\n        markdownLineEnding(code)) &&\n        code !== null\n        ? ok(code)\n        : nok(code)\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Support to compile GFM to HTML.\n *\n * @param {HtmlOptions} [options]\n * @returns {HtmlExtension}\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {Extract<Node, MdastParent>} Parent\n * @typedef {Exclude<Parent, Root>} ContentParent\n *\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[Root, ...Array<ContentParent>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | undefined | null}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {string | RegExp} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n *   Several find and replaces, in object form.\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n * @typedef {string | ReplaceFunction} Replace\n *   Thing to replace with.\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore.\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param tree\n *   Tree to change.\n * @param find\n *   Patterns to find.\n * @param replace\n *   Things to replace with (when `find` is `Find`) or configuration.\n * @param options\n *   Configuration (when `find` is not `Find`).\n * @returns\n *   Given, modified, tree.\n */\n// To do: next major: remove `find` & `replace` combo, remove schema.\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   (<Tree extends Node>(tree: Tree, find: Find, replace?: Replace | null | undefined, options?: Options | null | undefined) => Tree) &\n   *   (<Tree extends Node>(tree: Tree, schema: FindAndReplaceSchema | FindAndReplaceList, options?: Options | null | undefined) => Tree)\n   * )}\n   **/\n  (\n    /**\n     * @template {Node} Tree\n     * @param {Tree} tree\n     * @param {Find | FindAndReplaceSchema | FindAndReplaceList} find\n     * @param {Replace | Options | null | undefined} [replace]\n     * @param {Options | null | undefined} [options]\n     * @returns {Tree}\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options | null | undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      // To do next major: don’t return the given tree.\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types.js').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent | undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = parents[index]\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error: TS doesn’t understand but it’s perfect.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * Handle a text node which is not in an ignored parent.\n       *\n       * @param {Text} node\n       *   Text node.\n       * @param {Array<Parent>} parents\n       *   Parents.\n       * @returns {VisitorResult}\n       *   Result.\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          const position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            // @ts-expect-error: stack is fine.\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          // It wasn’t a match after all.\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * Turn a schema into pairs.\n *\n * @param {FindAndReplaceSchema | FindAndReplaceList} schema\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n// To do: next major: expose functions instead of extensions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM autolink literals.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Link | Array<PhrasingContent> | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('../types.js').AssociationId} AssociationId\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * Get an identifier from an association to match it to others.\n *\n * Associations are nodes that match to something else through an ID:\n * <https://github.com/syntax-tree/mdast#association>.\n *\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another:\n * controversially, character escapes and references don’t work in this\n * matching: `&copy;` does not match `©`, and `\\+` does not match `+`.\n *\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character\n * escapes and all character references.\n *\n * @type {AssociationId}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('../types.js').FlowContent} FlowContent\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * @param {Parent & {children: Array<FlowContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {TrackFields} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nexport function containerFlow(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  const tracker = state.createTracker(info)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      state.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(\n        tracker.move(between(child, children[index + 1], parent, state))\n      )\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n\n/**\n * @param {Node} left\n * @param {Node} right\n * @param {Parent} parent\n * @param {State} state\n * @returns {string}\n */\nfunction between(left, right, parent, state) {\n  let index = state.join.length\n\n  while (index--) {\n    const result = state.join[index](left, right, parent, state)\n\n    if (result === true || result === 1) {\n      break\n    }\n\n    if (typeof result === 'number') {\n      return '\\n'.repeat(1 + result)\n    }\n\n    if (result === false) {\n      return '\\n\\n<!---->\\n\\n'\n    }\n  }\n\n  return '\\n\\n'\n}\n","/**\n * @typedef {import('../types.js').IndentLines} IndentLines\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @type {IndentLines}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n * @typedef {import('../types.js').ConstructName} ConstructName\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').SafeConfig} SafeConfig\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * Make a string safe for embedding in markdown constructs.\n *\n * In markdown, almost all punctuation characters can, in certain cases,\n * result in something.\n * Whether they do is highly subjective to where they happen and in what\n * they happen.\n *\n * To solve this, `mdast-util-to-markdown` tracks:\n *\n * * Characters before and after something;\n * * What “constructs” we are in.\n *\n * This information is then used by this function to escape or encode\n * special characters.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {string | null | undefined} input\n *   Raw value to make safe.\n * @param {SafeConfig} config\n *   Configuration.\n * @returns {string}\n *   Serialized markdown safe for embedding.\n */\nexport function safe(state, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n\n    if (!patternInScope(state.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('../types.js').CreateTracker} CreateTracker\n * @typedef {import('../types.js').TrackCurrent} TrackCurrent\n * @typedef {import('../types.js').TrackMove} TrackMove\n * @typedef {import('../types.js').TrackShift} TrackShift\n */\n\n/**\n * Track positional info in the output.\n *\n * @type {CreateTracker}\n */\nexport function track(config) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = config || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @type {TrackCurrent}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @type {TrackShift}\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past some generated markdown.\n   *\n   * @type {TrackMove}\n   */\n  function move(input) {\n    // eslint-disable-next-line unicorn/prefer-default-parameters\n    const value = input || ''\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n// To do: next major: rename `context` -> `state`, `safeOptions` to `info`, use\n// utilities on `state`.\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = /** @type {FootnoteDefinition} */ (\n    this.stack[this.stack.length - 1]\n  )\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = /** @type {FootnoteDefinition} */ (\n    this.stack[this.stack.length - 1]\n  )\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  let value = tracker.move('[^')\n  const exit = context.enter('footnoteReference')\n  const subexit = context.enter('reference')\n  value += tracker.move(\n    safe(context, association(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  let value = tracker.move('[^')\n  const exit = context.enter('footnoteDefinition')\n  const subexit = context.enter('label')\n  value += tracker.move(\n    safe(context, association(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    indentLines(containerFlow(node, context, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').PhrasingContent} PhrasingContent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize the children of a parent that contains phrasing children.\n *\n * These children will be joined flush together.\n *\n * @param {Parent & {children: Array<PhrasingContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Info} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined together.\n */\nexport function containerPhrasing(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = info.before\n\n  indexStack.push(-1)\n  let tracker = state.createTracker(info)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = state.handle.handlers[children[index + 1].type]\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, state, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = info.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = state.createTracker(info)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: expose functions.\n// To do: next major: use `state`, state utilities.\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [\n    {\n      character: '~',\n      inConstruct: 'phrasing',\n      notInConstruct: constructsWithoutStrikethrough\n    }\n  ],\n  handlers: {delete: handleDelete}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|ReadonlyArray<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {ReadonlyArray<ReadonlyArray<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n *\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells.\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters.\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n// To do: next major: use `state` and `state` utilities from `mdast-util-to-markdown`.\n// To do: next major: use `defaultHandlers.inlineCode`.\n// To do: next major: expose functions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM tables.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  /** @type {Array<'left' | 'right' | 'center' | 'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      node.align\n    )\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parent | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\n/**\n * @typedef {Extract<Root | Content, Parent>} Parents\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: rename `context` -> `state`, `safeOptions` -> `info`, use\n// `track` from `state`.\n// To do: next major: replace exports with functions.\n// To do: next major: use `defaulthandlers.listItem`.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM task list items.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM task list items.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We’re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parents} */ (this.stack[this.stack.length - 2])\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","ace.define(\"ace/mode/css_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar lang = require(\"../lib/lang\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar supportType = exports.supportType = \"align-content|align-items|align-self|all|animation|animation-delay|animation-direction|animation-duration|animation-fill-mode|animation-iteration-count|animation-name|animation-play-state|animation-timing-function|backface-visibility|background|background-attachment|background-blend-mode|background-clip|background-color|background-image|background-origin|background-position|background-repeat|background-size|border|border-bottom|border-bottom-color|border-bottom-left-radius|border-bottom-right-radius|border-bottom-style|border-bottom-width|border-collapse|border-color|border-image|border-image-outset|border-image-repeat|border-image-slice|border-image-source|border-image-width|border-left|border-left-color|border-left-style|border-left-width|border-radius|border-right|border-right-color|border-right-style|border-right-width|border-spacing|border-style|border-top|border-top-color|border-top-left-radius|border-top-right-radius|border-top-style|border-top-width|border-width|bottom|box-shadow|box-sizing|caption-side|clear|clip|color|column-count|column-fill|column-gap|column-rule|column-rule-color|column-rule-style|column-rule-width|column-span|column-width|columns|content|counter-increment|counter-reset|cursor|direction|display|empty-cells|filter|flex|flex-basis|flex-direction|flex-flow|flex-grow|flex-shrink|flex-wrap|float|font|font-family|font-size|font-size-adjust|font-stretch|font-style|font-variant|font-weight|hanging-punctuation|height|justify-content|left|letter-spacing|line-height|list-style|list-style-image|list-style-position|list-style-type|margin|margin-bottom|margin-left|margin-right|margin-top|max-height|max-width|max-zoom|min-height|min-width|min-zoom|nav-down|nav-index|nav-left|nav-right|nav-up|opacity|order|outline|outline-color|outline-offset|outline-style|outline-width|overflow|overflow-x|overflow-y|padding|padding-bottom|padding-left|padding-right|padding-top|page-break-after|page-break-before|page-break-inside|perspective|perspective-origin|position|quotes|resize|right|tab-size|table-layout|text-align|text-align-last|text-decoration|text-decoration-color|text-decoration-line|text-decoration-style|text-indent|text-justify|text-overflow|text-shadow|text-transform|top|transform|transform-origin|transform-style|transition|transition-delay|transition-duration|transition-property|transition-timing-function|unicode-bidi|user-select|user-zoom|vertical-align|visibility|white-space|width|word-break|word-spacing|word-wrap|z-index\";\nvar supportFunction = exports.supportFunction = \"rgb|rgba|url|attr|counter|counters\";\nvar supportConstant = exports.supportConstant = \"absolute|after-edge|after|all-scroll|all|alphabetic|always|antialiased|armenian|auto|avoid-column|avoid-page|avoid|balance|baseline|before-edge|before|below|bidi-override|block-line-height|block|bold|bolder|border-box|both|bottom|box|break-all|break-word|capitalize|caps-height|caption|center|central|char|circle|cjk-ideographic|clone|close-quote|col-resize|collapse|column|consider-shifts|contain|content-box|cover|crosshair|cubic-bezier|dashed|decimal-leading-zero|decimal|default|disabled|disc|disregard-shifts|distribute-all-lines|distribute-letter|distribute-space|distribute|dotted|double|e-resize|ease-in|ease-in-out|ease-out|ease|ellipsis|end|exclude-ruby|flex-end|flex-start|fill|fixed|georgian|glyphs|grid-height|groove|hand|hanging|hebrew|help|hidden|hiragana-iroha|hiragana|horizontal|icon|ideograph-alpha|ideograph-numeric|ideograph-parenthesis|ideograph-space|ideographic|inactive|include-ruby|inherit|initial|inline-block|inline-box|inline-line-height|inline-table|inline|inset|inside|inter-ideograph|inter-word|invert|italic|justify|katakana-iroha|katakana|keep-all|last|left|lighter|line-edge|line-through|line|linear|list-item|local|loose|lower-alpha|lower-greek|lower-latin|lower-roman|lowercase|lr-tb|ltr|mathematical|max-height|max-size|medium|menu|message-box|middle|move|n-resize|ne-resize|newspaper|no-change|no-close-quote|no-drop|no-open-quote|no-repeat|none|normal|not-allowed|nowrap|nw-resize|oblique|open-quote|outset|outside|overline|padding-box|page|pointer|pre-line|pre-wrap|pre|preserve-3d|progress|relative|repeat-x|repeat-y|repeat|replaced|reset-size|ridge|right|round|row-resize|rtl|s-resize|scroll|se-resize|separate|slice|small-caps|small-caption|solid|space|square|start|static|status-bar|step-end|step-start|steps|stretch|strict|sub|super|sw-resize|table-caption|table-cell|table-column-group|table-column|table-footer-group|table-header-group|table-row-group|table-row|table|tb-rl|text-after-edge|text-before-edge|text-bottom|text-size|text-top|text|thick|thin|transparent|underline|upper-alpha|upper-latin|upper-roman|uppercase|use-script|vertical-ideographic|vertical-text|visible|w-resize|wait|whitespace|z-index|zero|zoom\";\nvar supportConstantColor = exports.supportConstantColor = \"aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|rebeccapurple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen\";\nvar supportConstantFonts = exports.supportConstantFonts = \"arial|century|comic|courier|cursive|fantasy|garamond|georgia|helvetica|impact|lucida|symbol|system|tahoma|times|trebuchet|utopia|verdana|webdings|sans-serif|serif|monospace\";\nvar numRe = exports.numRe = \"\\\\-?(?:(?:[0-9]+(?:\\\\.[0-9]+)?)|(?:\\\\.[0-9]+))\";\nvar pseudoElements = exports.pseudoElements = \"(\\\\:+)\\\\b(after|before|first-letter|first-line|moz-selection|selection)\\\\b\";\nvar pseudoClasses = exports.pseudoClasses = \"(:)\\\\b(active|checked|disabled|empty|enabled|first-child|first-of-type|focus|hover|indeterminate|invalid|last-child|last-of-type|link|not|nth-child|nth-last-child|nth-last-of-type|nth-of-type|only-child|only-of-type|required|root|target|valid|visited)\\\\b\";\nvar CssHighlightRules = function () {\n    var keywordMapper = this.createKeywordMapper({\n        \"support.function\": supportFunction,\n        \"support.constant\": supportConstant,\n        \"support.type\": supportType,\n        \"support.constant.color\": supportConstantColor,\n        \"support.constant.fonts\": supportConstantFonts\n    }, \"text\", true);\n    this.$rules = {\n        \"start\": [{\n                include: [\"strings\", \"url\", \"comments\"]\n            }, {\n                token: \"paren.lparen\",\n                regex: \"\\\\{\",\n                next: \"ruleset\"\n            }, {\n                token: \"paren.rparen\",\n                regex: \"\\\\}\"\n            }, {\n                token: \"string\",\n                regex: \"@(?!viewport)\",\n                next: \"media\"\n            }, {\n                token: \"keyword\",\n                regex: \"#[a-z0-9-_]+\"\n            }, {\n                token: \"keyword\",\n                regex: \"%\"\n            }, {\n                token: \"variable\",\n                regex: \"\\\\.[a-z0-9-_]+\"\n            }, {\n                token: \"string\",\n                regex: \":[a-z0-9-_]+\"\n            }, {\n                token: \"constant.numeric\",\n                regex: numRe\n            }, {\n                token: \"constant\",\n                regex: \"[a-z0-9-_]+\"\n            }, {\n                caseInsensitive: true\n            }],\n        \"media\": [{\n                include: [\"strings\", \"url\", \"comments\"]\n            }, {\n                token: \"paren.lparen\",\n                regex: \"\\\\{\",\n                next: \"start\"\n            }, {\n                token: \"paren.rparen\",\n                regex: \"\\\\}\",\n                next: \"start\"\n            }, {\n                token: \"string\",\n                regex: \";\",\n                next: \"start\"\n            }, {\n                token: \"keyword\",\n                regex: \"(?:media|supports|document|charset|import|namespace|media|supports|document\"\n                    + \"|page|font|keyframes|viewport|counter-style|font-feature-values\"\n                    + \"|swash|ornaments|annotation|stylistic|styleset|character-variant)\"\n            }],\n        \"comments\": [{\n                token: \"comment\",\n                regex: \"\\\\/\\\\*\",\n                push: [{\n                        token: \"comment\",\n                        regex: \"\\\\*\\\\/\",\n                        next: \"pop\"\n                    }, {\n                        defaultToken: \"comment\"\n                    }]\n            }],\n        \"ruleset\": [{\n                regex: \"-(webkit|ms|moz|o)-\",\n                token: \"text\"\n            }, {\n                token: \"punctuation.operator\",\n                regex: \"[:;]\"\n            }, {\n                token: \"paren.rparen\",\n                regex: \"\\\\}\",\n                next: \"start\"\n            }, {\n                include: [\"strings\", \"url\", \"comments\"]\n            }, {\n                token: [\"constant.numeric\", \"keyword\"],\n                regex: \"(\" + numRe + \")(ch|cm|deg|em|ex|fr|gd|grad|Hz|in|kHz|mm|ms|pc|pt|px|rad|rem|s|turn|vh|vmax|vmin|vm|vw|%)\"\n            }, {\n                token: \"constant.numeric\",\n                regex: numRe\n            }, {\n                token: \"constant.numeric\",\n                regex: \"#[a-f0-9]{6}\"\n            }, {\n                token: \"constant.numeric\",\n                regex: \"#[a-f0-9]{3}\"\n            }, {\n                token: [\"punctuation\", \"entity.other.attribute-name.pseudo-element.css\"],\n                regex: pseudoElements\n            }, {\n                token: [\"punctuation\", \"entity.other.attribute-name.pseudo-class.css\"],\n                regex: pseudoClasses\n            }, {\n                include: \"url\"\n            }, {\n                token: keywordMapper,\n                regex: \"\\\\-?[a-zA-Z_][a-zA-Z0-9_\\\\-]*\"\n            }, {\n                caseInsensitive: true\n            }],\n        url: [{\n                token: \"support.function\",\n                regex: \"(?:url(:?-prefix)?|domain|regexp)\\\\(\",\n                push: [{\n                        token: \"support.function\",\n                        regex: \"\\\\)\",\n                        next: \"pop\"\n                    }, {\n                        defaultToken: \"string\"\n                    }]\n            }],\n        strings: [{\n                token: \"string.start\",\n                regex: \"'\",\n                push: [{\n                        token: \"string.end\",\n                        regex: \"'|$\",\n                        next: \"pop\"\n                    }, {\n                        include: \"escapes\"\n                    }, {\n                        token: \"constant.language.escape\",\n                        regex: /\\\\$/,\n                        consumeLineEnd: true\n                    }, {\n                        defaultToken: \"string\"\n                    }]\n            }, {\n                token: \"string.start\",\n                regex: '\"',\n                push: [{\n                        token: \"string.end\",\n                        regex: '\"|$',\n                        next: \"pop\"\n                    }, {\n                        include: \"escapes\"\n                    }, {\n                        token: \"constant.language.escape\",\n                        regex: /\\\\$/,\n                        consumeLineEnd: true\n                    }, {\n                        defaultToken: \"string\"\n                    }]\n            }],\n        escapes: [{\n                token: \"constant.language.escape\",\n                regex: /\\\\([a-fA-F\\d]{1,6}|[^a-fA-F\\d])/\n            }]\n    };\n    this.normalizeRules();\n};\noop.inherits(CssHighlightRules, TextHighlightRules);\nexports.CssHighlightRules = CssHighlightRules;\n\n});\n\nace.define(\"ace/mode/jsdoc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar JsDocCommentHighlightRules = function () {\n    this.$rules = {\n        \"start\": [\n            {\n                token: [\"comment.doc.tag\", \"comment.doc.text\", \"lparen.doc\"],\n                regex: \"(@(?:param|member|typedef|property|namespace|var|const|callback))(\\\\s*)({)\",\n                push: [\n                    {\n                        token: \"lparen.doc\",\n                        regex: \"{\",\n                        push: [\n                            {\n                                include: \"doc-syntax\"\n                            }, {\n                                token: \"rparen.doc\",\n                                regex: \"}|(?=$)\",\n                                next: \"pop\"\n                            }\n                        ]\n                    }, {\n                        token: [\"rparen.doc\", \"text.doc\", \"variable.parameter.doc\", \"lparen.doc\", \"variable.parameter.doc\", \"rparen.doc\"],\n                        regex: /(})(\\s*)(?:([\\w=:\\/\\.]+)|(?:(\\[)([\\w=:\\/\\.]+)(\\])))/,\n                        next: \"pop\"\n                    }, {\n                        token: \"rparen.doc\",\n                        regex: \"}|(?=$)\",\n                        next: \"pop\"\n                    }, {\n                        include: \"doc-syntax\"\n                    }, {\n                        defaultToken: \"text.doc\"\n                    }\n                ]\n            }, {\n                token: [\"comment.doc.tag\", \"text.doc\", \"lparen.doc\"],\n                regex: \"(@(?:returns?|yields|type|this|suppress|public|protected|private|package|modifies|\"\n                    + \"implements|external|exception|throws|enum|define|extends))(\\\\s*)({)\",\n                push: [\n                    {\n                        token: \"lparen.doc\",\n                        regex: \"{\",\n                        push: [\n                            {\n                                include: \"doc-syntax\"\n                            }, {\n                                token: \"rparen.doc\",\n                                regex: \"}|(?=$)\",\n                                next: \"pop\"\n                            }\n                        ]\n                    }, {\n                        token: \"rparen.doc\",\n                        regex: \"}|(?=$)\",\n                        next: \"pop\"\n                    }, {\n                        include: \"doc-syntax\"\n                    }, {\n                        defaultToken: \"text.doc\"\n                    }\n                ]\n            }, {\n                token: [\"comment.doc.tag\", \"text.doc\", \"variable.parameter.doc\"],\n                regex: \"(@(?:alias|memberof|instance|module|name|lends|namespace|external|this|template|\"\n                    + \"requires|param|implements|function|extends|typedef|mixes|constructor|var|\"\n                    + \"memberof\\\\!|event|listens|exports|class|constructs|interface|emits|fires|\"\n                    + \"throws|const|callback|borrows|augments))(\\\\s+)(\\\\w[\\\\w#\\.:\\/~\\\"\\\\-]*)?\"\n            }, {\n                token: [\"comment.doc.tag\", \"text.doc\", \"variable.parameter.doc\"],\n                regex: \"(@method)(\\\\s+)(\\\\w[\\\\w\\.\\\\(\\\\)]*)\"\n            }, {\n                token: \"comment.doc.tag\",\n                regex: \"@access\\\\s+(?:private|public|protected)\"\n            }, {\n                token: \"comment.doc.tag\",\n                regex: \"@kind\\\\s+(?:class|constant|event|external|file|function|member|mixin|module|namespace|typedef)\"\n            }, {\n                token: \"comment.doc.tag\",\n                regex: \"@\\\\w+(?=\\\\s|$)\"\n            },\n            JsDocCommentHighlightRules.getTagRule(),\n            {\n                defaultToken: \"comment.doc\",\n                caseInsensitive: true\n            }\n        ],\n        \"doc-syntax\": [{\n                token: \"operator.doc\",\n                regex: /[|:]/\n            }, {\n                token: \"paren.doc\",\n                regex: /[\\[\\]]/\n            }]\n    };\n    this.normalizeRules();\n};\noop.inherits(JsDocCommentHighlightRules, TextHighlightRules);\nJsDocCommentHighlightRules.getTagRule = function (start) {\n    return {\n        token: \"comment.doc.tag.storage.type\",\n        regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n};\nJsDocCommentHighlightRules.getStartRule = function (start) {\n    return {\n        token: \"comment.doc\",\n        regex: \"\\\\/\\\\*(?=\\\\*)\",\n        next: start\n    };\n};\nJsDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token: \"comment.doc\",\n        regex: \"\\\\*\\\\/\",\n        next: start\n    };\n};\nexports.JsDocCommentHighlightRules = JsDocCommentHighlightRules;\n\n});\n\nace.define(\"ace/mode/javascript_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/jsdoc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar DocCommentHighlightRules = require(\"./jsdoc_comment_highlight_rules\").JsDocCommentHighlightRules;\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar identifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\";\nvar JavaScriptHighlightRules = function (options) {\n    var keywordMapper = this.createKeywordMapper({\n        \"variable.language\": \"Array|Boolean|Date|Function|Iterator|Number|Object|RegExp|String|Proxy|Symbol|\" + // Constructors\n            \"Namespace|QName|XML|XMLList|\" + // E4X\n            \"ArrayBuffer|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|\" +\n            \"Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray|\" +\n            \"Error|EvalError|InternalError|RangeError|ReferenceError|StopIteration|\" + // Errors\n            \"SyntaxError|TypeError|URIError|\" +\n            \"decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|eval|isFinite|\" + // Non-constructor functions\n            \"isNaN|parseFloat|parseInt|\" +\n            \"JSON|Math|\" + // Other\n            \"this|arguments|prototype|window|document\",\n        \"keyword\": \"const|yield|import|get|set|async|await|\" +\n            \"break|case|catch|continue|default|delete|do|else|finally|for|function|\" +\n            \"if|in|of|instanceof|new|return|switch|throw|try|typeof|let|var|while|with|debugger|\" +\n            \"__parent__|__count__|escape|unescape|with|__proto__|\" +\n            \"class|enum|extends|super|export|implements|private|public|interface|package|protected|static|constructor\",\n        \"storage.type\": \"const|let|var|function\",\n        \"constant.language\": \"null|Infinity|NaN|undefined\",\n        \"support.function\": \"alert\",\n        \"constant.language.boolean\": \"true|false\"\n    }, \"identifier\");\n    var kwBeforeRe = \"case|do|else|finally|in|instanceof|return|throw|try|typeof|yield|void\";\n    var escapedRe = \"\\\\\\\\(?:x[0-9a-fA-F]{2}|\" + // hex\n        \"u[0-9a-fA-F]{4}|\" + // unicode\n        \"u{[0-9a-fA-F]{1,6}}|\" + // es6 unicode\n        \"[0-2][0-7]{0,2}|\" + // oct\n        \"3[0-7][0-7]?|\" + // oct\n        \"[4-7][0-7]?|\" + //oct\n        \".)\";\n    this.$rules = {\n        \"no_regex\": [\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            comments(\"no_regex\"),\n            {\n                token: \"string\",\n                regex: \"'(?=.)\",\n                next: \"qstring\"\n            }, {\n                token: \"string\",\n                regex: '\"(?=.)',\n                next: \"qqstring\"\n            }, {\n                token: \"constant.numeric\",\n                regex: /0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/\n            }, {\n                token: \"constant.numeric\",\n                regex: /(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n            }, {\n                token: [\n                    \"storage.type\", \"punctuation.operator\", \"support.function\",\n                    \"punctuation.operator\", \"entity.name.function\", \"text\", \"keyword.operator\"\n                ],\n                regex: \"(\" + identifierRe + \")(\\\\.)(prototype)(\\\\.)(\" + identifierRe + \")(\\\\s*)(=)\",\n                next: \"function_arguments\"\n            }, {\n                token: [\n                    \"storage.type\", \"punctuation.operator\", \"entity.name.function\", \"text\",\n                    \"keyword.operator\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex: \"(\" + identifierRe + \")(\\\\.)(\" + identifierRe + \")(\\\\s*)(=)(\\\\s*)(function\\\\*?)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token: [\n                    \"entity.name.function\", \"text\", \"keyword.operator\", \"text\", \"storage.type\",\n                    \"text\", \"paren.lparen\"\n                ],\n                regex: \"(\" + identifierRe + \")(\\\\s*)(=)(\\\\s*)(function\\\\*?)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token: [\n                    \"storage.type\", \"punctuation.operator\", \"entity.name.function\", \"text\",\n                    \"keyword.operator\", \"text\",\n                    \"storage.type\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"\n                ],\n                regex: \"(\" + identifierRe + \")(\\\\.)(\" + identifierRe + \")(\\\\s*)(=)(\\\\s*)(function\\\\*?)(\\\\s+)(\\\\w+)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token: [\n                    \"storage.type\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"\n                ],\n                regex: \"(function\\\\*?)(\\\\s+)(\" + identifierRe + \")(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token: [\n                    \"entity.name.function\", \"text\", \"punctuation.operator\",\n                    \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex: \"(\" + identifierRe + \")(\\\\s*)(:)(\\\\s*)(function\\\\*?)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token: [\n                    \"text\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex: \"(:)(\\\\s*)(function\\\\*?)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token: \"keyword\",\n                regex: \"from(?=\\\\s*('|\\\"))\"\n            }, {\n                token: \"keyword\",\n                regex: \"(?:\" + kwBeforeRe + \")\\\\b\",\n                next: \"start\"\n            }, {\n                token: \"support.constant\",\n                regex: /that\\b/\n            }, {\n                token: [\"storage.type\", \"punctuation.operator\", \"support.function.firebug\"],\n                regex: /(console)(\\.)(warn|info|log|error|time|trace|timeEnd|assert)\\b/\n            }, {\n                token: keywordMapper,\n                regex: identifierRe\n            }, {\n                token: \"punctuation.operator\",\n                regex: /[.](?![.])/,\n                next: \"property\"\n            }, {\n                token: \"storage.type\",\n                regex: /=>/,\n                next: \"start\"\n            }, {\n                token: \"keyword.operator\",\n                regex: /--|\\+\\+|\\.{3}|===|==|=|!=|!==|<+=?|>+=?|!|&&|\\|\\||\\?:|[!$%&*+\\-~\\/^]=?/,\n                next: \"start\"\n            }, {\n                token: \"punctuation.operator\",\n                regex: /[?:,;.]/,\n                next: \"start\"\n            }, {\n                token: \"paren.lparen\",\n                regex: /[\\[({]/,\n                next: \"start\"\n            }, {\n                token: \"paren.rparen\",\n                regex: /[\\])}]/\n            }, {\n                token: \"comment\",\n                regex: /^#!.*$/\n            }\n        ],\n        property: [{\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }, {\n                token: [\n                    \"storage.type\", \"punctuation.operator\", \"entity.name.function\", \"text\",\n                    \"keyword.operator\", \"text\",\n                    \"storage.type\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"\n                ],\n                regex: \"(\" + identifierRe + \")(\\\\.)(\" + identifierRe + \")(\\\\s*)(=)(\\\\s*)(function\\\\*?)(?:(\\\\s+)(\\\\w+))?(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token: \"punctuation.operator\",\n                regex: /[.](?![.])/\n            }, {\n                token: \"support.function\",\n                regex: /(s(?:h(?:ift|ow(?:Mod(?:elessDialog|alDialog)|Help))|croll(?:X|By(?:Pages|Lines)?|Y|To)?|t(?:op|rike)|i(?:n|zeToContent|debar|gnText)|ort|u(?:p|b(?:str(?:ing)?)?)|pli(?:ce|t)|e(?:nd|t(?:Re(?:sizable|questHeader)|M(?:i(?:nutes|lliseconds)|onth)|Seconds|Ho(?:tKeys|urs)|Year|Cursor|Time(?:out)?|Interval|ZOptions|Date|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(?:ome|andleEvent)|navigate|c(?:har(?:CodeAt|At)|o(?:s|n(?:cat|textual|firm)|mpile)|eil|lear(?:Timeout|Interval)?|a(?:ptureEvents|ll)|reate(?:StyleSheet|Popup|EventObject))|t(?:o(?:GMTString|S(?:tring|ource)|U(?:TCString|pperCase)|Lo(?:caleString|werCase))|est|a(?:n|int(?:Enabled)?))|i(?:s(?:NaN|Finite)|ndexOf|talics)|d(?:isableExternalCapture|ump|etachEvent)|u(?:n(?:shift|taint|escape|watch)|pdateCommands)|j(?:oin|avaEnabled)|p(?:o(?:p|w)|ush|lugins.refresh|a(?:ddings|rse(?:Int|Float)?)|r(?:int|ompt|eference))|e(?:scape|nableExternalCapture|val|lementFromPoint|x(?:p|ec(?:Script|Command)?))|valueOf|UTC|queryCommand(?:State|Indeterm|Enabled|Value)|f(?:i(?:nd|lter|le(?:ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(?:nt(?:size|color)|rward|rEach)|loor|romCharCode)|watch|l(?:ink|o(?:ad|g)|astIndexOf)|a(?:sin|nchor|cos|t(?:tachEvent|ob|an(?:2)?)|pply|lert|b(?:s|ort))|r(?:ou(?:nd|teEvents)|e(?:size(?:By|To)|calc|turnValue|place|verse|l(?:oad|ease(?:Capture|Events)))|andom)|g(?:o|et(?:ResponseHeader|M(?:i(?:nutes|lliseconds)|onth)|Se(?:conds|lection)|Hours|Year|Time(?:zoneOffset)?|Da(?:y|te)|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Da(?:y|te)|FullYear)|FullYear|A(?:ttention|llResponseHeaders)))|m(?:in|ove(?:B(?:y|elow)|To(?:Absolute)?|Above)|ergeAttributes|a(?:tch|rgins|x))|b(?:toa|ig|o(?:ld|rderWidths)|link|ack))\\b(?=\\()/\n            }, {\n                token: \"support.function.dom\",\n                regex: /(s(?:ub(?:stringData|mit)|plitText|e(?:t(?:NamedItem|Attribute(?:Node)?)|lect))|has(?:ChildNodes|Feature)|namedItem|c(?:l(?:ick|o(?:se|neNode))|reate(?:C(?:omment|DATASection|aption)|T(?:Head|extNode|Foot)|DocumentFragment|ProcessingInstruction|E(?:ntityReference|lement)|Attribute))|tabIndex|i(?:nsert(?:Row|Before|Cell|Data)|tem)|open|delete(?:Row|C(?:ell|aption)|T(?:Head|Foot)|Data)|focus|write(?:ln)?|a(?:dd|ppend(?:Child|Data))|re(?:set|place(?:Child|Data)|move(?:NamedItem|Child|Attribute(?:Node)?)?)|get(?:NamedItem|Element(?:sBy(?:Name|TagName|ClassName)|ById)|Attribute(?:Node)?)|blur)\\b(?=\\()/\n            }, {\n                token: \"support.constant\",\n                regex: /(s(?:ystemLanguage|cr(?:ipts|ollbars|een(?:X|Y|Top|Left))|t(?:yle(?:Sheets)?|atus(?:Text|bar)?)|ibling(?:Below|Above)|ource|uffixes|e(?:curity(?:Policy)?|l(?:ection|f)))|h(?:istory|ost(?:name)?|as(?:h|Focus))|y|X(?:MLDocument|SLDocument)|n(?:ext|ame(?:space(?:s|URI)|Prop))|M(?:IN_VALUE|AX_VALUE)|c(?:haracterSet|o(?:n(?:structor|trollers)|okieEnabled|lorDepth|mp(?:onents|lete))|urrent|puClass|l(?:i(?:p(?:boardData)?|entInformation)|osed|asses)|alle(?:e|r)|rypto)|t(?:o(?:olbar|p)|ext(?:Transform|Indent|Decoration|Align)|ags)|SQRT(?:1_2|2)|i(?:n(?:ner(?:Height|Width)|put)|ds|gnoreCase)|zIndex|o(?:scpu|n(?:readystatechange|Line)|uter(?:Height|Width)|p(?:sProfile|ener)|ffscreenBuffering)|NEGATIVE_INFINITY|d(?:i(?:splay|alog(?:Height|Top|Width|Left|Arguments)|rectories)|e(?:scription|fault(?:Status|Ch(?:ecked|arset)|View)))|u(?:ser(?:Profile|Language|Agent)|n(?:iqueID|defined)|pdateInterval)|_content|p(?:ixelDepth|ort|ersonalbar|kcs11|l(?:ugins|atform)|a(?:thname|dding(?:Right|Bottom|Top|Left)|rent(?:Window|Layer)?|ge(?:X(?:Offset)?|Y(?:Offset)?))|r(?:o(?:to(?:col|type)|duct(?:Sub)?|mpter)|e(?:vious|fix)))|e(?:n(?:coding|abledPlugin)|x(?:ternal|pando)|mbeds)|v(?:isibility|endor(?:Sub)?|Linkcolor)|URLUnencoded|P(?:I|OSITIVE_INFINITY)|f(?:ilename|o(?:nt(?:Size|Family|Weight)|rmName)|rame(?:s|Element)|gColor)|E|whiteSpace|l(?:i(?:stStyleType|n(?:eHeight|kColor))|o(?:ca(?:tion(?:bar)?|lName)|wsrc)|e(?:ngth|ft(?:Context)?)|a(?:st(?:M(?:odified|atch)|Index|Paren)|yer(?:s|X)|nguage))|a(?:pp(?:MinorVersion|Name|Co(?:deName|re)|Version)|vail(?:Height|Top|Width|Left)|ll|r(?:ity|guments)|Linkcolor|bove)|r(?:ight(?:Context)?|e(?:sponse(?:XML|Text)|adyState))|global|x|m(?:imeTypes|ultiline|enubar|argin(?:Right|Bottom|Top|Left))|L(?:N(?:10|2)|OG(?:10E|2E))|b(?:o(?:ttom|rder(?:Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(?:Color|Image)))\\b/\n            }, {\n                token: \"identifier\",\n                regex: identifierRe\n            }, {\n                regex: \"\",\n                token: \"empty\",\n                next: \"no_regex\"\n            }\n        ],\n        \"start\": [\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            comments(\"start\"),\n            {\n                token: \"string.regexp\",\n                regex: \"\\\\/\",\n                next: \"regex\"\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+|^$\",\n                next: \"start\"\n            }, {\n                token: \"empty\",\n                regex: \"\",\n                next: \"no_regex\"\n            }\n        ],\n        \"regex\": [\n            {\n                token: \"regexp.keyword.operator\",\n                regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n            }, {\n                token: \"string.regexp\",\n                regex: \"/[sxngimy]*\",\n                next: \"no_regex\"\n            }, {\n                token: \"invalid\",\n                regex: /\\{\\d+\\b,?\\d*\\}[+*]|[+*$^?][+*]|[$^][?]|\\?{3,}/\n            }, {\n                token: \"constant.language.escape\",\n                regex: /\\(\\?[:=!]|\\)|\\{\\d+\\b,?\\d*\\}|[+*]\\?|[()$^+*?.]/\n            }, {\n                token: \"constant.language.delimiter\",\n                regex: /\\|/\n            }, {\n                token: \"constant.language.escape\",\n                regex: /\\[\\^?/,\n                next: \"regex_character_class\"\n            }, {\n                token: \"empty\",\n                regex: \"$\",\n                next: \"no_regex\"\n            }, {\n                defaultToken: \"string.regexp\"\n            }\n        ],\n        \"regex_character_class\": [\n            {\n                token: \"regexp.charclass.keyword.operator\",\n                regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n            }, {\n                token: \"constant.language.escape\",\n                regex: \"]\",\n                next: \"regex\"\n            }, {\n                token: \"constant.language.escape\",\n                regex: \"-\"\n            }, {\n                token: \"empty\",\n                regex: \"$\",\n                next: \"no_regex\"\n            }, {\n                defaultToken: \"string.regexp.charachterclass\"\n            }\n        ],\n        \"default_parameter\": [\n            {\n                token: \"string\",\n                regex: \"'(?=.)\",\n                push: [\n                    {\n                        token: \"string\",\n                        regex: \"'|$\",\n                        next: \"pop\"\n                    }, {\n                        include: \"qstring\"\n                    }\n                ]\n            }, {\n                token: \"string\",\n                regex: '\"(?=.)',\n                push: [\n                    {\n                        token: \"string\",\n                        regex: '\"|$',\n                        next: \"pop\"\n                    }, {\n                        include: \"qqstring\"\n                    }\n                ]\n            }, {\n                token: \"constant.language\",\n                regex: \"null|Infinity|NaN|undefined\"\n            }, {\n                token: \"constant.numeric\",\n                regex: /0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/\n            }, {\n                token: \"constant.numeric\",\n                regex: /(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n            }, {\n                token: \"punctuation.operator\",\n                regex: \",\",\n                next: \"function_arguments\"\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }, {\n                token: \"punctuation.operator\",\n                regex: \"$\"\n            }, {\n                token: \"empty\",\n                regex: \"\",\n                next: \"no_regex\"\n            }\n        ],\n        \"function_arguments\": [\n            comments(\"function_arguments\"),\n            {\n                token: \"variable.parameter\",\n                regex: identifierRe\n            }, {\n                token: \"punctuation.operator\",\n                regex: \",\"\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }, {\n                token: \"punctuation.operator\",\n                regex: \"$\"\n            }, {\n                token: \"empty\",\n                regex: \"\",\n                next: \"no_regex\"\n            }\n        ],\n        \"qqstring\": [\n            {\n                token: \"constant.language.escape\",\n                regex: escapedRe\n            }, {\n                token: \"string\",\n                regex: \"\\\\\\\\$\",\n                consumeLineEnd: true\n            }, {\n                token: \"string\",\n                regex: '\"|$',\n                next: \"no_regex\"\n            }, {\n                defaultToken: \"string\"\n            }\n        ],\n        \"qstring\": [\n            {\n                token: \"constant.language.escape\",\n                regex: escapedRe\n            }, {\n                token: \"string\",\n                regex: \"\\\\\\\\$\",\n                consumeLineEnd: true\n            }, {\n                token: \"string\",\n                regex: \"'|$\",\n                next: \"no_regex\"\n            }, {\n                defaultToken: \"string\"\n            }\n        ]\n    };\n    if (!options || !options.noES6) {\n        this.$rules.no_regex.unshift({\n            regex: \"[{}]\", onMatch: function (val, state, stack) {\n                this.next = val == \"{\" ? this.nextState : \"\";\n                if (val == \"{\" && stack.length) {\n                    stack.unshift(\"start\", state);\n                }\n                else if (val == \"}\" && stack.length) {\n                    stack.shift();\n                    this.next = stack.shift();\n                    if (this.next.indexOf(\"string\") != -1 || this.next.indexOf(\"jsx\") != -1)\n                        return \"paren.quasi.end\";\n                }\n                return val == \"{\" ? \"paren.lparen\" : \"paren.rparen\";\n            },\n            nextState: \"start\"\n        }, {\n            token: \"string.quasi.start\",\n            regex: /`/,\n            push: [{\n                    token: \"constant.language.escape\",\n                    regex: escapedRe\n                }, {\n                    token: \"paren.quasi.start\",\n                    regex: /\\${/,\n                    push: \"start\"\n                }, {\n                    token: \"string.quasi.end\",\n                    regex: /`/,\n                    next: \"pop\"\n                }, {\n                    defaultToken: \"string.quasi\"\n                }]\n        }, {\n            token: [\"variable.parameter\", \"text\"],\n            regex: \"(\" + identifierRe + \")(\\\\s*)(?=\\\\=>)\"\n        }, {\n            token: \"paren.lparen\",\n            regex: \"(\\\\()(?=.+\\\\s*=>)\",\n            next: \"function_arguments\"\n        }, {\n            token: \"variable.language\",\n            regex: \"(?:(?:(?:Weak)?(?:Set|Map))|Promise)\\\\b\"\n        });\n        this.$rules[\"function_arguments\"].unshift({\n            token: \"keyword.operator\",\n            regex: \"=\",\n            next: \"default_parameter\"\n        }, {\n            token: \"keyword.operator\",\n            regex: \"\\\\.{3}\"\n        });\n        this.$rules[\"property\"].unshift({\n            token: \"support.function\",\n            regex: \"(findIndex|repeat|startsWith|endsWith|includes|isSafeInteger|trunc|cbrt|log2|log10|sign|then|catch|\"\n                + \"finally|resolve|reject|race|any|all|allSettled|keys|entries|isInteger)\\\\b(?=\\\\()\"\n        }, {\n            token: \"constant.language\",\n            regex: \"(?:MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|EPSILON)\\\\b\"\n        });\n        if (!options || options.jsx != false)\n            JSX.call(this);\n    }\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"no_regex\")]);\n    this.normalizeRules();\n};\noop.inherits(JavaScriptHighlightRules, TextHighlightRules);\nfunction JSX() {\n    var tagRegex = identifierRe.replace(\"\\\\d\", \"\\\\d\\\\-\");\n    var jsxTag = {\n        onMatch: function (val, state, stack) {\n            var offset = val.charAt(1) == \"/\" ? 2 : 1;\n            if (offset == 1) {\n                if (state != this.nextState)\n                    stack.unshift(this.next, this.nextState, 0);\n                else\n                    stack.unshift(this.next);\n                stack[2]++;\n            }\n            else if (offset == 2) {\n                if (state == this.nextState) {\n                    stack[1]--;\n                    if (!stack[1] || stack[1] < 0) {\n                        stack.shift();\n                        stack.shift();\n                    }\n                }\n            }\n            return [{\n                    type: \"meta.tag.punctuation.\" + (offset == 1 ? \"\" : \"end-\") + \"tag-open.xml\",\n                    value: val.slice(0, offset)\n                }, {\n                    type: \"meta.tag.tag-name.xml\",\n                    value: val.substr(offset)\n                }];\n        },\n        regex: \"</?\" + tagRegex + \"\",\n        next: \"jsxAttributes\",\n        nextState: \"jsx\"\n    };\n    this.$rules.start.unshift(jsxTag);\n    var jsxJsRule = {\n        regex: \"{\",\n        token: \"paren.quasi.start\",\n        push: \"start\"\n    };\n    this.$rules.jsx = [\n        jsxJsRule,\n        jsxTag,\n        { include: \"reference\" },\n        { defaultToken: \"string\" }\n    ];\n    this.$rules.jsxAttributes = [{\n            token: \"meta.tag.punctuation.tag-close.xml\",\n            regex: \"/?>\",\n            onMatch: function (value, currentState, stack) {\n                if (currentState == stack[0])\n                    stack.shift();\n                if (value.length == 2) {\n                    if (stack[0] == this.nextState)\n                        stack[1]--;\n                    if (!stack[1] || stack[1] < 0) {\n                        stack.splice(0, 2);\n                    }\n                }\n                this.next = stack[0] || \"start\";\n                return [{ type: this.token, value: value }];\n            },\n            nextState: \"jsx\"\n        },\n        jsxJsRule,\n        comments(\"jsxAttributes\"),\n        {\n            token: \"entity.other.attribute-name.xml\",\n            regex: tagRegex\n        }, {\n            token: \"keyword.operator.attribute-equals.xml\",\n            regex: \"=\"\n        }, {\n            token: \"text.tag-whitespace.xml\",\n            regex: \"\\\\s+\"\n        }, {\n            token: \"string.attribute-value.xml\",\n            regex: \"'\",\n            stateName: \"jsx_attr_q\",\n            push: [\n                { token: \"string.attribute-value.xml\", regex: \"'\", next: \"pop\" },\n                { include: \"reference\" },\n                { defaultToken: \"string.attribute-value.xml\" }\n            ]\n        }, {\n            token: \"string.attribute-value.xml\",\n            regex: '\"',\n            stateName: \"jsx_attr_qq\",\n            push: [\n                { token: \"string.attribute-value.xml\", regex: '\"', next: \"pop\" },\n                { include: \"reference\" },\n                { defaultToken: \"string.attribute-value.xml\" }\n            ]\n        },\n        jsxTag\n    ];\n    this.$rules.reference = [{\n            token: \"constant.language.escape.reference.xml\",\n            regex: \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n        }];\n}\nfunction comments(next) {\n    return [\n        {\n            token: \"comment\",\n            regex: /\\/\\*/,\n            next: [\n                DocCommentHighlightRules.getTagRule(),\n                { token: \"comment\", regex: \"\\\\*\\\\/\", next: next || \"pop\" },\n                { defaultToken: \"comment\", caseInsensitive: true }\n            ]\n        }, {\n            token: \"comment\",\n            regex: \"\\\\/\\\\/\",\n            next: [\n                DocCommentHighlightRules.getTagRule(),\n                { token: \"comment\", regex: \"$|^\", next: next || \"pop\" },\n                { defaultToken: \"comment\", caseInsensitive: true }\n            ]\n        }\n    ];\n}\nexports.JavaScriptHighlightRules = JavaScriptHighlightRules;\n\n});\n\nace.define(\"ace/mode/xml_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar XmlHighlightRules = function (normalize) {\n    var tagRegex = \"[_:a-zA-Z\\xc0-\\uffff][-_:.a-zA-Z0-9\\xc0-\\uffff]*\";\n    this.$rules = {\n        start: [\n            { token: \"string.cdata.xml\", regex: \"<\\\\!\\\\[CDATA\\\\[\", next: \"cdata\" },\n            {\n                token: [\"punctuation.instruction.xml\", \"keyword.instruction.xml\"],\n                regex: \"(<\\\\?)(\" + tagRegex + \")\", next: \"processing_instruction\"\n            },\n            { token: \"comment.start.xml\", regex: \"<\\\\!--\", next: \"comment\" },\n            {\n                token: [\"xml-pe.doctype.xml\", \"xml-pe.doctype.xml\"],\n                regex: \"(<\\\\!)(DOCTYPE)(?=[\\\\s])\", next: \"doctype\", caseInsensitive: true\n            },\n            { include: \"tag\" },\n            { token: \"text.end-tag-open.xml\", regex: \"</\" },\n            { token: \"text.tag-open.xml\", regex: \"<\" },\n            { include: \"reference\" },\n            { defaultToken: \"text.xml\" }\n        ],\n        processing_instruction: [{\n                token: \"entity.other.attribute-name.decl-attribute-name.xml\",\n                regex: tagRegex\n            }, {\n                token: \"keyword.operator.decl-attribute-equals.xml\",\n                regex: \"=\"\n            }, {\n                include: \"whitespace\"\n            }, {\n                include: \"string\"\n            }, {\n                token: \"punctuation.xml-decl.xml\",\n                regex: \"\\\\?>\",\n                next: \"start\"\n            }],\n        doctype: [\n            { include: \"whitespace\" },\n            { include: \"string\" },\n            { token: \"xml-pe.doctype.xml\", regex: \">\", next: \"start\" },\n            { token: \"xml-pe.xml\", regex: \"[-_a-zA-Z0-9:]+\" },\n            { token: \"punctuation.int-subset\", regex: \"\\\\[\", push: \"int_subset\" }\n        ],\n        int_subset: [{\n                token: \"text.xml\",\n                regex: \"\\\\s+\"\n            }, {\n                token: \"punctuation.int-subset.xml\",\n                regex: \"]\",\n                next: \"pop\"\n            }, {\n                token: [\"punctuation.markup-decl.xml\", \"keyword.markup-decl.xml\"],\n                regex: \"(<\\\\!)(\" + tagRegex + \")\",\n                push: [{\n                        token: \"text\",\n                        regex: \"\\\\s+\"\n                    },\n                    {\n                        token: \"punctuation.markup-decl.xml\",\n                        regex: \">\",\n                        next: \"pop\"\n                    },\n                    { include: \"string\" }]\n            }],\n        cdata: [\n            { token: \"string.cdata.xml\", regex: \"\\\\]\\\\]>\", next: \"start\" },\n            { token: \"text.xml\", regex: \"\\\\s+\" },\n            { token: \"text.xml\", regex: \"(?:[^\\\\]]|\\\\](?!\\\\]>))+\" }\n        ],\n        comment: [\n            { token: \"comment.end.xml\", regex: \"-->\", next: \"start\" },\n            { defaultToken: \"comment.xml\" }\n        ],\n        reference: [{\n                token: \"constant.language.escape.reference.xml\",\n                regex: \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n            }],\n        attr_reference: [{\n                token: \"constant.language.escape.reference.attribute-value.xml\",\n                regex: \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n            }],\n        tag: [{\n                token: [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.tag-name.xml\"],\n                regex: \"(?:(<)|(</))((?:\" + tagRegex + \":)?\" + tagRegex + \")\",\n                next: [\n                    { include: \"attributes\" },\n                    { token: \"meta.tag.punctuation.tag-close.xml\", regex: \"/?>\", next: \"start\" }\n                ]\n            }],\n        tag_whitespace: [\n            { token: \"text.tag-whitespace.xml\", regex: \"\\\\s+\" }\n        ],\n        whitespace: [\n            { token: \"text.whitespace.xml\", regex: \"\\\\s+\" }\n        ],\n        string: [{\n                token: \"string.xml\",\n                regex: \"'\",\n                push: [\n                    { token: \"string.xml\", regex: \"'\", next: \"pop\" },\n                    { defaultToken: \"string.xml\" }\n                ]\n            }, {\n                token: \"string.xml\",\n                regex: '\"',\n                push: [\n                    { token: \"string.xml\", regex: '\"', next: \"pop\" },\n                    { defaultToken: \"string.xml\" }\n                ]\n            }],\n        attributes: [{\n                token: \"entity.other.attribute-name.xml\",\n                regex: tagRegex\n            }, {\n                token: \"keyword.operator.attribute-equals.xml\",\n                regex: \"=\"\n            }, {\n                include: \"tag_whitespace\"\n            }, {\n                include: \"attribute_value\"\n            }],\n        attribute_value: [{\n                token: \"string.attribute-value.xml\",\n                regex: \"'\",\n                push: [\n                    { token: \"string.attribute-value.xml\", regex: \"'\", next: \"pop\" },\n                    { include: \"attr_reference\" },\n                    { defaultToken: \"string.attribute-value.xml\" }\n                ]\n            }, {\n                token: \"string.attribute-value.xml\",\n                regex: '\"',\n                push: [\n                    { token: \"string.attribute-value.xml\", regex: '\"', next: \"pop\" },\n                    { include: \"attr_reference\" },\n                    { defaultToken: \"string.attribute-value.xml\" }\n                ]\n            }]\n    };\n    if (this.constructor === XmlHighlightRules)\n        this.normalizeRules();\n};\n(function () {\n    this.embedTagRules = function (HighlightRules, prefix, tag) {\n        this.$rules.tag.unshift({\n            token: [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n            regex: \"(<)(\" + tag + \"(?=\\\\s|>|$))\",\n            next: [\n                { include: \"attributes\" },\n                { token: \"meta.tag.punctuation.tag-close.xml\", regex: \"/?>\", next: prefix + \"start\" }\n            ]\n        });\n        this.$rules[tag + \"-end\"] = [\n            { include: \"attributes\" },\n            { token: \"meta.tag.punctuation.tag-close.xml\", regex: \"/?>\", next: \"start\",\n                onMatch: function (value, currentState, stack) {\n                    stack.splice(0);\n                    return this.token;\n                } }\n        ];\n        this.embedRules(HighlightRules, prefix, [{\n                token: [\"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n                regex: \"(</)(\" + tag + \"(?=\\\\s|>|$))\",\n                next: tag + \"-end\"\n            }, {\n                token: \"string.cdata.xml\",\n                regex: \"<\\\\!\\\\[CDATA\\\\[\"\n            }, {\n                token: \"string.cdata.xml\",\n                regex: \"\\\\]\\\\]>\"\n            }]);\n    };\n}).call(TextHighlightRules.prototype);\noop.inherits(XmlHighlightRules, TextHighlightRules);\nexports.XmlHighlightRules = XmlHighlightRules;\n\n});\n\nace.define(\"ace/mode/html_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/css_highlight_rules\",\"ace/mode/javascript_highlight_rules\",\"ace/mode/xml_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar lang = require(\"../lib/lang\");\nvar CssHighlightRules = require(\"./css_highlight_rules\").CssHighlightRules;\nvar JavaScriptHighlightRules = require(\"./javascript_highlight_rules\").JavaScriptHighlightRules;\nvar XmlHighlightRules = require(\"./xml_highlight_rules\").XmlHighlightRules;\nvar tagMap = lang.createMap({\n    a: 'anchor',\n    button: 'form',\n    form: 'form',\n    img: 'image',\n    input: 'form',\n    label: 'form',\n    option: 'form',\n    script: 'script',\n    select: 'form',\n    textarea: 'form',\n    style: 'style',\n    table: 'table',\n    tbody: 'table',\n    td: 'table',\n    tfoot: 'table',\n    th: 'table',\n    tr: 'table'\n});\nvar HtmlHighlightRules = function () {\n    XmlHighlightRules.call(this);\n    this.addRules({\n        attributes: [{\n                include: \"tag_whitespace\"\n            }, {\n                token: \"entity.other.attribute-name.xml\",\n                regex: \"[-_a-zA-Z0-9:.]+\"\n            }, {\n                token: \"keyword.operator.attribute-equals.xml\",\n                regex: \"=\",\n                push: [{\n                        include: \"tag_whitespace\"\n                    }, {\n                        token: \"string.unquoted.attribute-value.html\",\n                        regex: \"[^<>='\\\"`\\\\s]+\",\n                        next: \"pop\"\n                    }, {\n                        token: \"empty\",\n                        regex: \"\",\n                        next: \"pop\"\n                    }]\n            }, {\n                include: \"attribute_value\"\n            }],\n        tag: [{\n                token: function (start, tag) {\n                    var group = tagMap[tag];\n                    return [\"meta.tag.punctuation.\" + (start == \"<\" ? \"\" : \"end-\") + \"tag-open.xml\",\n                        \"meta.tag\" + (group ? \".\" + group : \"\") + \".tag-name.xml\"];\n                },\n                regex: \"(</?)([-_a-zA-Z0-9:.]+)\",\n                next: \"tag_stuff\"\n            }],\n        tag_stuff: [\n            { include: \"attributes\" },\n            { token: \"meta.tag.punctuation.tag-close.xml\", regex: \"/?>\", next: \"start\" }\n        ]\n    });\n    this.embedTagRules(CssHighlightRules, \"css-\", \"style\");\n    this.embedTagRules(new JavaScriptHighlightRules({ jsx: false }).getRules(), \"js-\", \"script\");\n    if (this.constructor === HtmlHighlightRules)\n        this.normalizeRules();\n};\noop.inherits(HtmlHighlightRules, XmlHighlightRules);\nexports.HtmlHighlightRules = HtmlHighlightRules;\n\n});\n\nace.define(\"ace/mode/markdown_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/config\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text_highlight_rules\",\"ace/mode/html_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar modes = require(\"../config\").$modes;\nvar oop = require(\"../lib/oop\");\nvar lang = require(\"../lib/lang\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar HtmlHighlightRules = require(\"./html_highlight_rules\").HtmlHighlightRules;\nvar escaped = function (ch) {\n    return \"(?:[^\" + lang.escapeRegExp(ch) + \"\\\\\\\\]|\\\\\\\\.)*\";\n};\nvar MarkdownHighlightRules = function () {\n    HtmlHighlightRules.call(this);\n    var codeBlockStartRule = {\n        token: \"support.function\",\n        regex: /^\\s*(```+[^`]*|~~~+[^~]*)$/,\n        onMatch: function (value, state, stack, line) {\n            var m = value.match(/^(\\s*)([`~]+)(.*)/);\n            var language = /[\\w-]+|$/.exec(m[3])[0];\n            if (!modes[language])\n                language = \"\";\n            stack.unshift(\"githubblock\", [], [m[1], m[2], language], state);\n            return this.token;\n        },\n        next: \"githubblock\"\n    };\n    var codeBlockRules = [{\n            token: \"support.function\",\n            regex: \".*\",\n            onMatch: function (value, state, stack, line) {\n                var embedState = stack[1];\n                var indent = stack[2][0];\n                var endMarker = stack[2][1];\n                var language = stack[2][2];\n                var m = /^(\\s*)(`+|~+)\\s*$/.exec(value);\n                if (m && m[1].length < indent.length + 3\n                    && m[2].length >= endMarker.length && m[2][0] == endMarker[0]) {\n                    stack.splice(0, 3);\n                    this.next = stack.shift();\n                    return this.token;\n                }\n                this.next = \"\";\n                if (language && modes[language]) {\n                    var data = modes[language].getTokenizer().getLineTokens(value, embedState.slice(0));\n                    stack[1] = data.state;\n                    return data.tokens;\n                }\n                return this.token;\n            }\n        }];\n    this.$rules[\"start\"].unshift({\n        token: \"empty_line\",\n        regex: '^$',\n        next: \"allowBlock\"\n    }, {\n        token: \"markup.heading.1\",\n        regex: \"^=+(?=\\\\s*$)\"\n    }, {\n        token: \"markup.heading.2\",\n        regex: \"^\\\\-+(?=\\\\s*$)\"\n    }, {\n        token: function (value) {\n            return \"markup.heading.\" + value.length;\n        },\n        regex: /^#{1,6}(?=\\s|$)/,\n        next: \"header\"\n    }, codeBlockStartRule, {\n        token: \"string.blockquote\",\n        regex: \"^\\\\s*>\\\\s*(?:[*+-]|\\\\d+\\\\.)?\\\\s+\",\n        next: \"blockquote\"\n    }, {\n        token: \"constant\",\n        regex: \"^ {0,3}(?:(?:\\\\* ?){3,}|(?:\\\\- ?){3,}|(?:\\\\_ ?){3,})\\\\s*$\",\n        next: \"allowBlock\"\n    }, {\n        token: \"markup.list\",\n        regex: \"^\\\\s{0,3}(?:[*+-]|\\\\d+\\\\.)\\\\s+\",\n        next: \"listblock-start\"\n    }, {\n        include: \"basic\"\n    });\n    this.addRules({\n        \"basic\": [{\n                token: \"constant.language.escape\",\n                regex: /\\\\[\\\\`*_{}\\[\\]()#+\\-.!]/\n            }, {\n                token: \"support.function\",\n                regex: \"(`+)(.*?[^`])(\\\\1)\"\n            }, {\n                token: [\"text\", \"constant\", \"text\", \"url\", \"string\", \"text\"],\n                regex: \"^([ ]{0,3}\\\\[)([^\\\\]]+)(\\\\]:\\\\s*)([^ ]+)(\\\\s*(?:[\\\"][^\\\"]+[\\\"])?(\\\\s*))$\"\n            }, {\n                token: [\"text\", \"string\", \"text\", \"constant\", \"text\"],\n                regex: \"(\\\\[)(\" + escaped(\"]\") + \")(\\\\]\\\\s*\\\\[)(\" + escaped(\"]\") + \")(\\\\])\"\n            }, {\n                token: [\"text\", \"string\", \"text\", \"markup.underline\", \"string\", \"text\"],\n                regex: \"(\\\\!?\\\\[)(\" + // [\n                    escaped(\"]\") + // link text or alt text\n                    \")(\\\\]\\\\()\" + // ](\n                    '((?:[^\\\\)\\\\s\\\\\\\\]|\\\\\\\\.|\\\\s(?=[^\"]))*)' + // href or image\n                    '(\\\\s*\"' + escaped('\"') + '\"\\\\s*)?' + // \"title\"\n                    \"(\\\\))\" // )\n            }, {\n                token: \"string.strong\",\n                regex: \"([*]{2}|[_]{2}(?=\\\\S))(.*?\\\\S[*_]*)(\\\\1)\"\n            }, {\n                token: \"string.emphasis\",\n                regex: \"([*]|[_](?=\\\\S))(.*?\\\\S[*_]*)(\\\\1)\"\n            }, {\n                token: [\"text\", \"url\", \"text\"],\n                regex: \"(<)(\" +\n                    \"(?:https?|ftp|dict):[^'\\\">\\\\s]+\" +\n                    \"|\" +\n                    \"(?:mailto:)?[-.\\\\w]+\\\\@[-a-z0-9]+(?:\\\\.[-a-z0-9]+)*\\\\.[a-z]+\" +\n                    \")(>)\"\n            }],\n        \"allowBlock\": [\n            { token: \"support.function\", regex: \"^ {4}.+\", next: \"allowBlock\" },\n            { token: \"empty_line\", regex: '^$', next: \"allowBlock\" },\n            { token: \"empty\", regex: \"\", next: \"start\" }\n        ],\n        \"header\": [{\n                regex: \"$\",\n                next: \"start\"\n            }, {\n                include: \"basic\"\n            }, {\n                defaultToken: \"heading\"\n            }],\n        \"listblock-start\": [{\n                token: \"support.variable\",\n                regex: /(?:\\[[ x]\\])?/,\n                next: \"listblock\"\n            }],\n        \"listblock\": [{\n                token: \"empty_line\",\n                regex: \"^$\",\n                next: \"start\"\n            }, {\n                token: \"markup.list\",\n                regex: \"^\\\\s{0,3}(?:[*+-]|\\\\d+\\\\.)\\\\s+\",\n                next: \"listblock-start\"\n            }, {\n                include: \"basic\", noEscape: true\n            },\n            codeBlockStartRule,\n            {\n                defaultToken: \"list\" //do not use markup.list to allow stling leading `*` differntly\n            }],\n        \"blockquote\": [{\n                token: \"empty_line\",\n                regex: \"^\\\\s*$\",\n                next: \"start\"\n            }, {\n                token: \"string.blockquote\",\n                regex: \"^\\\\s*>\\\\s*(?:[*+-]|\\\\d+\\\\.)?\\\\s+\",\n                next: \"blockquote\"\n            }, {\n                include: \"basic\", noEscape: true\n            }, {\n                defaultToken: \"string.blockquote\"\n            }],\n        \"githubblock\": codeBlockRules\n    });\n    this.normalizeRules();\n};\noop.inherits(MarkdownHighlightRules, TextHighlightRules);\nexports.MarkdownHighlightRules = MarkdownHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/markdown\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\nvar FoldMode = exports.FoldMode = function () { };\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /^(?:[=-]+\\s*$|#{1,6} |`{3})/;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (!this.foldingStartMarker.test(line))\n            return \"\";\n        if (line[0] == \"`\") {\n            if (session.bgTokenizer.getState(row) == \"start\")\n                return \"end\";\n            return \"start\";\n        }\n        return \"start\";\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n        if (!line.match(this.foldingStartMarker))\n            return;\n        if (line[0] == \"`\") {\n            if (session.bgTokenizer.getState(row) !== \"start\") {\n                while (++row < maxRow) {\n                    line = session.getLine(row);\n                    if (line[0] == \"`\" & line.substring(0, 3) == \"```\")\n                        break;\n                }\n                return new Range(startRow, startColumn, row, 0);\n            }\n            else {\n                while (row-- > 0) {\n                    line = session.getLine(row);\n                    if (line[0] == \"`\" & line.substring(0, 3) == \"```\")\n                        break;\n                }\n                return new Range(row, line.length, startRow, 0);\n            }\n        }\n        var token;\n        function isHeading(row) {\n            token = session.getTokens(row)[0];\n            return token && token.type.lastIndexOf(heading, 0) === 0;\n        }\n        var heading = \"markup.heading\";\n        function getLevel() {\n            var ch = token.value[0];\n            if (ch == \"=\")\n                return 6;\n            if (ch == \"-\")\n                return 5;\n            return 7 - token.value.search(/[^#]|$/);\n        }\n        if (isHeading(row)) {\n            var startHeadingLevel = getLevel();\n            while (++row < maxRow) {\n                if (!isHeading(row))\n                    continue;\n                var level = getLevel();\n                if (level >= startHeadingLevel)\n                    break;\n            }\n            endRow = row - (!token || [\"=\", \"-\"].indexOf(token.value[0]) == -1 ? 1 : 2);\n            if (endRow > startRow) {\n                while (endRow > startRow && /^\\s*$/.test(session.getLine(endRow)))\n                    endRow--;\n            }\n            if (endRow > startRow) {\n                var endColumn = session.getLine(endRow).length;\n                return new Range(startRow, startColumn, endRow, endColumn);\n            }\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module){\"use strict\";\nvar Range = require(\"../range\").Range;\nvar MatchingBraceOutdent = function () { };\n(function () {\n    this.checkOutdent = function (line, input) {\n        if (!/^\\s+$/.test(line))\n            return false;\n        return /^\\s*\\}/.test(input);\n    };\n    this.autoOutdent = function (doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n        if (!match)\n            return 0;\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({ row: row, column: column });\n        if (!openBracePos || openBracePos.row == row)\n            return 0;\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n    this.$getIndent = function (line) {\n        return line.match(/^\\s*/)[0];\n    };\n}).call(MatchingBraceOutdent.prototype);\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n        this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n        return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                }\n                else if (foldStyle != \"all\")\n                    range = null;\n            }\n            return range;\n        }\n        if (foldStyle === \"markbegin\")\n            return;\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    this.getSectionRange = function (session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                }\n                else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                }\n                else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m)\n                continue;\n            if (m[1])\n                depth--;\n            else\n                depth++;\n            if (!depth)\n                break;\n        }\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/javascript\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/javascript_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/worker/worker_client\",\"ace/mode/behaviour/cstyle\",\"ace/mode/folding/cstyle\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar JavaScriptHighlightRules = require(\"./javascript_highlight_rules\").JavaScriptHighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar WorkerClient = require(\"../worker/worker_client\").WorkerClient;\nvar CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = JavaScriptHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n    this.foldingRules = new CStyleFoldMode();\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = { start: \"/*\", end: \"*/\" };\n    this.$quotes = { '\"': '\"', \"'\": \"'\", \"`\": \"`\" };\n    this.$pairQuotesAfter = {\n        \"`\": /\\w/\n    };\n    this.getNextLineIndent = function (state, line, tab) {\n        var indent = this.$getIndent(line);\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        var endState = tokenizedLine.state;\n        if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n            return indent;\n        }\n        if (state == \"start\" || state == \"no_regex\") {\n            var match = line.match(/^.*(?:\\bcase\\b.*:|[\\{\\(\\[])\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n        else if (state == \"doc-start\") {\n            if (endState == \"start\" || endState == \"no_regex\") {\n                return \"\";\n            }\n            var match = line.match(/^\\s*(\\/?)\\*/);\n            if (match) {\n                if (match[1]) {\n                    indent += \" \";\n                }\n                indent += \"* \";\n            }\n        }\n        return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n    this.autoOutdent = function (state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n    this.createWorker = function (session) {\n        var worker = new WorkerClient([\"ace\"], \"ace/mode/javascript_worker\", \"JavaScriptWorker\");\n        worker.attachToDocument(session.getDocument());\n        worker.on(\"annotate\", function (results) {\n            session.setAnnotations(results.data);\n        });\n        worker.on(\"terminate\", function () {\n            session.clearAnnotations();\n        });\n        return worker;\n    };\n    this.$id = \"ace/mode/javascript\";\n    this.snippetFileId = \"ace/snippets/javascript\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});\n\nace.define(\"ace/mode/css_completions\",[\"require\",\"exports\",\"module\"], function(require, exports, module){\"use strict\";\nvar propertyMap = {\n    \"background\": { \"#$0\": 1 },\n    \"background-color\": { \"#$0\": 1, \"transparent\": 1, \"fixed\": 1 },\n    \"background-image\": { \"url('/$0')\": 1 },\n    \"background-repeat\": { \"repeat\": 1, \"repeat-x\": 1, \"repeat-y\": 1, \"no-repeat\": 1, \"inherit\": 1 },\n    \"background-position\": { \"bottom\": 2, \"center\": 2, \"left\": 2, \"right\": 2, \"top\": 2, \"inherit\": 2 },\n    \"background-attachment\": { \"scroll\": 1, \"fixed\": 1 },\n    \"background-size\": { \"cover\": 1, \"contain\": 1 },\n    \"background-clip\": { \"border-box\": 1, \"padding-box\": 1, \"content-box\": 1 },\n    \"background-origin\": { \"border-box\": 1, \"padding-box\": 1, \"content-box\": 1 },\n    \"border\": { \"solid $0\": 1, \"dashed $0\": 1, \"dotted $0\": 1, \"#$0\": 1 },\n    \"border-color\": { \"#$0\": 1 },\n    \"border-style\": { \"solid\": 2, \"dashed\": 2, \"dotted\": 2, \"double\": 2, \"groove\": 2, \"hidden\": 2, \"inherit\": 2, \"inset\": 2, \"none\": 2, \"outset\": 2, \"ridged\": 2 },\n    \"border-collapse\": { \"collapse\": 1, \"separate\": 1 },\n    \"bottom\": { \"px\": 1, \"em\": 1, \"%\": 1 },\n    \"clear\": { \"left\": 1, \"right\": 1, \"both\": 1, \"none\": 1 },\n    \"color\": { \"#$0\": 1, \"rgb(#$00,0,0)\": 1 },\n    \"cursor\": { \"default\": 1, \"pointer\": 1, \"move\": 1, \"text\": 1, \"wait\": 1, \"help\": 1, \"progress\": 1, \"n-resize\": 1, \"ne-resize\": 1, \"e-resize\": 1, \"se-resize\": 1, \"s-resize\": 1, \"sw-resize\": 1, \"w-resize\": 1, \"nw-resize\": 1 },\n    \"display\": { \"none\": 1, \"block\": 1, \"inline\": 1, \"inline-block\": 1, \"table-cell\": 1 },\n    \"empty-cells\": { \"show\": 1, \"hide\": 1 },\n    \"float\": { \"left\": 1, \"right\": 1, \"none\": 1 },\n    \"font-family\": { \"Arial\": 2, \"Comic Sans MS\": 2, \"Consolas\": 2, \"Courier New\": 2, \"Courier\": 2, \"Georgia\": 2, \"Monospace\": 2, \"Sans-Serif\": 2, \"Segoe UI\": 2, \"Tahoma\": 2, \"Times New Roman\": 2, \"Trebuchet MS\": 2, \"Verdana\": 1 },\n    \"font-size\": { \"px\": 1, \"em\": 1, \"%\": 1 },\n    \"font-weight\": { \"bold\": 1, \"normal\": 1 },\n    \"font-style\": { \"italic\": 1, \"normal\": 1 },\n    \"font-variant\": { \"normal\": 1, \"small-caps\": 1 },\n    \"height\": { \"px\": 1, \"em\": 1, \"%\": 1 },\n    \"left\": { \"px\": 1, \"em\": 1, \"%\": 1 },\n    \"letter-spacing\": { \"normal\": 1 },\n    \"line-height\": { \"normal\": 1 },\n    \"list-style-type\": { \"none\": 1, \"disc\": 1, \"circle\": 1, \"square\": 1, \"decimal\": 1, \"decimal-leading-zero\": 1, \"lower-roman\": 1, \"upper-roman\": 1, \"lower-greek\": 1, \"lower-latin\": 1, \"upper-latin\": 1, \"georgian\": 1, \"lower-alpha\": 1, \"upper-alpha\": 1 },\n    \"margin\": { \"px\": 1, \"em\": 1, \"%\": 1 },\n    \"margin-right\": { \"px\": 1, \"em\": 1, \"%\": 1 },\n    \"margin-left\": { \"px\": 1, \"em\": 1, \"%\": 1 },\n    \"margin-top\": { \"px\": 1, \"em\": 1, \"%\": 1 },\n    \"margin-bottom\": { \"px\": 1, \"em\": 1, \"%\": 1 },\n    \"max-height\": { \"px\": 1, \"em\": 1, \"%\": 1 },\n    \"max-width\": { \"px\": 1, \"em\": 1, \"%\": 1 },\n    \"min-height\": { \"px\": 1, \"em\": 1, \"%\": 1 },\n    \"min-width\": { \"px\": 1, \"em\": 1, \"%\": 1 },\n    \"overflow\": { \"hidden\": 1, \"visible\": 1, \"auto\": 1, \"scroll\": 1 },\n    \"overflow-x\": { \"hidden\": 1, \"visible\": 1, \"auto\": 1, \"scroll\": 1 },\n    \"overflow-y\": { \"hidden\": 1, \"visible\": 1, \"auto\": 1, \"scroll\": 1 },\n    \"padding\": { \"px\": 1, \"em\": 1, \"%\": 1 },\n    \"padding-top\": { \"px\": 1, \"em\": 1, \"%\": 1 },\n    \"padding-right\": { \"px\": 1, \"em\": 1, \"%\": 1 },\n    \"padding-bottom\": { \"px\": 1, \"em\": 1, \"%\": 1 },\n    \"padding-left\": { \"px\": 1, \"em\": 1, \"%\": 1 },\n    \"page-break-after\": { \"auto\": 1, \"always\": 1, \"avoid\": 1, \"left\": 1, \"right\": 1 },\n    \"page-break-before\": { \"auto\": 1, \"always\": 1, \"avoid\": 1, \"left\": 1, \"right\": 1 },\n    \"position\": { \"absolute\": 1, \"relative\": 1, \"fixed\": 1, \"static\": 1 },\n    \"right\": { \"px\": 1, \"em\": 1, \"%\": 1 },\n    \"table-layout\": { \"fixed\": 1, \"auto\": 1 },\n    \"text-decoration\": { \"none\": 1, \"underline\": 1, \"line-through\": 1, \"blink\": 1 },\n    \"text-align\": { \"left\": 1, \"right\": 1, \"center\": 1, \"justify\": 1 },\n    \"text-transform\": { \"capitalize\": 1, \"uppercase\": 1, \"lowercase\": 1, \"none\": 1 },\n    \"top\": { \"px\": 1, \"em\": 1, \"%\": 1 },\n    \"vertical-align\": { \"top\": 1, \"bottom\": 1 },\n    \"visibility\": { \"hidden\": 1, \"visible\": 1 },\n    \"white-space\": { \"nowrap\": 1, \"normal\": 1, \"pre\": 1, \"pre-line\": 1, \"pre-wrap\": 1 },\n    \"width\": { \"px\": 1, \"em\": 1, \"%\": 1 },\n    \"word-spacing\": { \"normal\": 1 },\n    \"filter\": { \"alpha(opacity=$0100)\": 1 },\n    \"text-shadow\": { \"$02px 2px 2px #777\": 1 },\n    \"text-overflow\": { \"ellipsis-word\": 1, \"clip\": 1, \"ellipsis\": 1 },\n    \"-moz-border-radius\": 1,\n    \"-moz-border-radius-topright\": 1,\n    \"-moz-border-radius-bottomright\": 1,\n    \"-moz-border-radius-topleft\": 1,\n    \"-moz-border-radius-bottomleft\": 1,\n    \"-webkit-border-radius\": 1,\n    \"-webkit-border-top-right-radius\": 1,\n    \"-webkit-border-top-left-radius\": 1,\n    \"-webkit-border-bottom-right-radius\": 1,\n    \"-webkit-border-bottom-left-radius\": 1,\n    \"-moz-box-shadow\": 1,\n    \"-webkit-box-shadow\": 1,\n    \"transform\": { \"rotate($00deg)\": 1, \"skew($00deg)\": 1 },\n    \"-moz-transform\": { \"rotate($00deg)\": 1, \"skew($00deg)\": 1 },\n    \"-webkit-transform\": { \"rotate($00deg)\": 1, \"skew($00deg)\": 1 }\n};\nvar CssCompletions = function () {\n};\n(function () {\n    this.completionsDefined = false;\n    this.defineCompletions = function () {\n        if (document) {\n            var style = document.createElement('c').style;\n            for (var i in style) {\n                if (typeof style[i] !== 'string')\n                    continue;\n                var name = i.replace(/[A-Z]/g, function (x) {\n                    return '-' + x.toLowerCase();\n                });\n                if (!propertyMap.hasOwnProperty(name))\n                    propertyMap[name] = 1;\n            }\n        }\n        this.completionsDefined = true;\n    };\n    this.getCompletions = function (state, session, pos, prefix) {\n        if (!this.completionsDefined) {\n            this.defineCompletions();\n        }\n        if (state === 'ruleset' || session.$mode.$id == \"ace/mode/scss\") {\n            var line = session.getLine(pos.row).substr(0, pos.column);\n            var inParens = /\\([^)]*$/.test(line);\n            if (inParens) {\n                line = line.substr(line.lastIndexOf('(') + 1);\n            }\n            if (/:[^;]+$/.test(line)) {\n                /([\\w\\-]+):[^:]*$/.test(line);\n                return this.getPropertyValueCompletions(state, session, pos, prefix);\n            }\n            else {\n                return this.getPropertyCompletions(state, session, pos, prefix, inParens);\n            }\n        }\n        return [];\n    };\n    this.getPropertyCompletions = function (state, session, pos, prefix, skipSemicolon) {\n        skipSemicolon = skipSemicolon || false;\n        var properties = Object.keys(propertyMap);\n        return properties.map(function (property) {\n            return {\n                caption: property,\n                snippet: property + ': $0' + (skipSemicolon ? '' : ';'),\n                meta: \"property\",\n                score: 1000000\n            };\n        });\n    };\n    this.getPropertyValueCompletions = function (state, session, pos, prefix) {\n        var line = session.getLine(pos.row).substr(0, pos.column);\n        var property = (/([\\w\\-]+):[^:]*$/.exec(line) || {})[1];\n        if (!property)\n            return [];\n        var values = [];\n        if (property in propertyMap && typeof propertyMap[property] === \"object\") {\n            values = Object.keys(propertyMap[property]);\n        }\n        return values.map(function (value) {\n            return {\n                caption: value,\n                snippet: value,\n                meta: \"property value\",\n                score: 1000000\n            };\n        });\n    };\n}).call(CssCompletions.prototype);\nexports.CssCompletions = CssCompletions;\n\n});\n\nace.define(\"ace/mode/behaviour/css\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/behaviour\",\"ace/mode/behaviour/cstyle\",\"ace/token_iterator\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Behaviour = require(\"../behaviour\").Behaviour;\nvar CstyleBehaviour = require(\"./cstyle\").CstyleBehaviour;\nvar TokenIterator = require(\"../../token_iterator\").TokenIterator;\nvar CssBehaviour = function () {\n    this.inherit(CstyleBehaviour);\n    this.add(\"colon\", \"insertion\", function (state, action, editor, session, text) {\n        if (text === ':' && editor.selection.isEmpty()) {\n            var cursor = editor.getCursorPosition();\n            var iterator = new TokenIterator(session, cursor.row, cursor.column);\n            var token = iterator.getCurrentToken();\n            if (token && token.value.match(/\\s+/)) {\n                token = iterator.stepBackward();\n            }\n            if (token && token.type === 'support.type') {\n                var line = session.doc.getLine(cursor.row);\n                var rightChar = line.substring(cursor.column, cursor.column + 1);\n                if (rightChar === ':') {\n                    return {\n                        text: '',\n                        selection: [1, 1]\n                    };\n                }\n                if (/^(\\s+[^;]|\\s*$)/.test(line.substring(cursor.column))) {\n                    return {\n                        text: ':;',\n                        selection: [1, 1]\n                    };\n                }\n            }\n        }\n    });\n    this.add(\"colon\", \"deletion\", function (state, action, editor, session, range) {\n        var selected = session.doc.getTextRange(range);\n        if (!range.isMultiLine() && selected === ':') {\n            var cursor = editor.getCursorPosition();\n            var iterator = new TokenIterator(session, cursor.row, cursor.column);\n            var token = iterator.getCurrentToken();\n            if (token && token.value.match(/\\s+/)) {\n                token = iterator.stepBackward();\n            }\n            if (token && token.type === 'support.type') {\n                var line = session.doc.getLine(range.start.row);\n                var rightChar = line.substring(range.end.column, range.end.column + 1);\n                if (rightChar === ';') {\n                    range.end.column++;\n                    return range;\n                }\n            }\n        }\n    });\n    this.add(\"semicolon\", \"insertion\", function (state, action, editor, session, text) {\n        if (text === ';' && editor.selection.isEmpty()) {\n            var cursor = editor.getCursorPosition();\n            var line = session.doc.getLine(cursor.row);\n            var rightChar = line.substring(cursor.column, cursor.column + 1);\n            if (rightChar === ';') {\n                return {\n                    text: '',\n                    selection: [1, 1]\n                };\n            }\n        }\n    });\n    this.add(\"!important\", \"insertion\", function (state, action, editor, session, text) {\n        if (text === '!' && editor.selection.isEmpty()) {\n            var cursor = editor.getCursorPosition();\n            var line = session.doc.getLine(cursor.row);\n            if (/^\\s*(;|}|$)/.test(line.substring(cursor.column))) {\n                return {\n                    text: '!important',\n                    selection: [10, 10]\n                };\n            }\n        }\n    });\n};\noop.inherits(CssBehaviour, CstyleBehaviour);\nexports.CssBehaviour = CssBehaviour;\n\n});\n\nace.define(\"ace/mode/css\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/css_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/worker/worker_client\",\"ace/mode/css_completions\",\"ace/mode/behaviour/css\",\"ace/mode/folding/cstyle\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar CssHighlightRules = require(\"./css_highlight_rules\").CssHighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar WorkerClient = require(\"../worker/worker_client\").WorkerClient;\nvar CssCompletions = require(\"./css_completions\").CssCompletions;\nvar CssBehaviour = require(\"./behaviour/css\").CssBehaviour;\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = CssHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CssBehaviour();\n    this.$completer = new CssCompletions();\n    this.foldingRules = new CStyleFoldMode();\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.foldingRules = \"cStyle\";\n    this.blockComment = { start: \"/*\", end: \"*/\" };\n    this.getNextLineIndent = function (state, line, tab) {\n        var indent = this.$getIndent(line);\n        var tokens = this.getTokenizer().getLineTokens(line, state).tokens;\n        if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n            return indent;\n        }\n        var match = line.match(/^.*\\{\\s*$/);\n        if (match) {\n            indent += tab;\n        }\n        return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n    this.autoOutdent = function (state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n    this.getCompletions = function (state, session, pos, prefix) {\n        return this.$completer.getCompletions(state, session, pos, prefix);\n    };\n    this.createWorker = function (session) {\n        var worker = new WorkerClient([\"ace\"], \"ace/mode/css_worker\", \"Worker\");\n        worker.attachToDocument(session.getDocument());\n        worker.on(\"annotate\", function (e) {\n            session.setAnnotations(e.data);\n        });\n        worker.on(\"terminate\", function () {\n            session.clearAnnotations();\n        });\n        return worker;\n    };\n    this.$id = \"ace/mode/css\";\n    this.snippetFileId = \"ace/snippets/css\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});\n\nace.define(\"ace/mode/behaviour/xml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/behaviour\",\"ace/token_iterator\",\"ace/lib/lang\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Behaviour = require(\"../behaviour\").Behaviour;\nvar TokenIterator = require(\"../../token_iterator\").TokenIterator;\nvar lang = require(\"../../lib/lang\");\nfunction is(token, type) {\n    return token && token.type.lastIndexOf(type + \".xml\") > -1;\n}\nvar XmlBehaviour = function () {\n    this.add(\"string_dquotes\", \"insertion\", function (state, action, editor, session, text) {\n        if (text == '\"' || text == \"'\") {\n            var quote = text;\n            var selected = session.doc.getTextRange(editor.getSelectionRange());\n            if (selected !== \"\" && selected !== \"'\" && selected != '\"' && editor.getWrapBehavioursEnabled()) {\n                return {\n                    text: quote + selected + quote,\n                    selection: false\n                };\n            }\n            var cursor = editor.getCursorPosition();\n            var line = session.doc.getLine(cursor.row);\n            var rightChar = line.substring(cursor.column, cursor.column + 1);\n            var iterator = new TokenIterator(session, cursor.row, cursor.column);\n            var token = iterator.getCurrentToken();\n            if (rightChar == quote && (is(token, \"attribute-value\") || is(token, \"string\"))) {\n                return {\n                    text: \"\",\n                    selection: [1, 1]\n                };\n            }\n            if (!token)\n                token = iterator.stepBackward();\n            if (!token)\n                return;\n            while (is(token, \"tag-whitespace\") || is(token, \"whitespace\")) {\n                token = iterator.stepBackward();\n            }\n            var rightSpace = !rightChar || rightChar.match(/\\s/);\n            if (is(token, \"attribute-equals\") && (rightSpace || rightChar == '>') || (is(token, \"decl-attribute-equals\") && (rightSpace || rightChar == '?'))) {\n                return {\n                    text: quote + quote,\n                    selection: [1, 1]\n                };\n            }\n        }\n    });\n    this.add(\"string_dquotes\", \"deletion\", function (state, action, editor, session, range) {\n        var selected = session.doc.getTextRange(range);\n        if (!range.isMultiLine() && (selected == '\"' || selected == \"'\")) {\n            var line = session.doc.getLine(range.start.row);\n            var rightChar = line.substring(range.start.column + 1, range.start.column + 2);\n            if (rightChar == selected) {\n                range.end.column++;\n                return range;\n            }\n        }\n    });\n    this.add(\"autoclosing\", \"insertion\", function (state, action, editor, session, text) {\n        if (text == '>') {\n            var position = editor.getSelectionRange().start;\n            var iterator = new TokenIterator(session, position.row, position.column);\n            var token = iterator.getCurrentToken() || iterator.stepBackward();\n            if (!token || !(is(token, \"tag-name\") || is(token, \"tag-whitespace\") || is(token, \"attribute-name\") || is(token, \"attribute-equals\") || is(token, \"attribute-value\")))\n                return;\n            if (is(token, \"reference.attribute-value\"))\n                return;\n            if (is(token, \"attribute-value\")) {\n                var tokenEndColumn = iterator.getCurrentTokenColumn() + token.value.length;\n                if (position.column < tokenEndColumn)\n                    return;\n                if (position.column == tokenEndColumn) {\n                    var nextToken = iterator.stepForward();\n                    if (nextToken && is(nextToken, \"attribute-value\"))\n                        return;\n                    iterator.stepBackward();\n                }\n            }\n            if (/^\\s*>/.test(session.getLine(position.row).slice(position.column)))\n                return;\n            while (!is(token, \"tag-name\")) {\n                token = iterator.stepBackward();\n                if (token.value == \"<\") {\n                    token = iterator.stepForward();\n                    break;\n                }\n            }\n            var tokenRow = iterator.getCurrentTokenRow();\n            var tokenColumn = iterator.getCurrentTokenColumn();\n            if (is(iterator.stepBackward(), \"end-tag-open\"))\n                return;\n            var element = token.value;\n            if (tokenRow == position.row)\n                element = element.substring(0, position.column - tokenColumn);\n            if (this.voidElements.hasOwnProperty(element.toLowerCase()))\n                return;\n            return {\n                text: \">\" + \"</\" + element + \">\",\n                selection: [1, 1]\n            };\n        }\n    });\n    this.add(\"autoindent\", \"insertion\", function (state, action, editor, session, text) {\n        if (text == \"\\n\") {\n            var cursor = editor.getCursorPosition();\n            var line = session.getLine(cursor.row);\n            var iterator = new TokenIterator(session, cursor.row, cursor.column);\n            var token = iterator.getCurrentToken();\n            if (token && token.type.indexOf(\"tag-close\") !== -1) {\n                if (token.value == \"/>\")\n                    return;\n                while (token && token.type.indexOf(\"tag-name\") === -1) {\n                    token = iterator.stepBackward();\n                }\n                if (!token) {\n                    return;\n                }\n                var tag = token.value;\n                var row = iterator.getCurrentTokenRow();\n                token = iterator.stepBackward();\n                if (!token || token.type.indexOf(\"end-tag\") !== -1) {\n                    return;\n                }\n                if (this.voidElements && !this.voidElements[tag]) {\n                    var nextToken = session.getTokenAt(cursor.row, cursor.column + 1);\n                    var line = session.getLine(row);\n                    var nextIndent = this.$getIndent(line);\n                    var indent = nextIndent + session.getTabString();\n                    if (nextToken && nextToken.value === \"</\") {\n                        return {\n                            text: \"\\n\" + indent + \"\\n\" + nextIndent,\n                            selection: [1, indent.length, 1, indent.length]\n                        };\n                    }\n                    else {\n                        return {\n                            text: \"\\n\" + indent\n                        };\n                    }\n                }\n            }\n        }\n    });\n};\noop.inherits(XmlBehaviour, Behaviour);\nexports.XmlBehaviour = XmlBehaviour;\n\n});\n\nace.define(\"ace/mode/folding/mixed\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (defaultMode, subModes) {\n    this.defaultMode = defaultMode;\n    this.subModes = subModes;\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.$getMode = function (state) {\n        if (typeof state != \"string\")\n            state = state[0];\n        for (var key in this.subModes) {\n            if (state.indexOf(key) === 0)\n                return this.subModes[key];\n        }\n        return null;\n    };\n    this.$tryMode = function (state, session, foldStyle, row) {\n        var mode = this.$getMode(state);\n        return (mode ? mode.getFoldWidget(session, foldStyle, row) : \"\");\n    };\n    this.getFoldWidget = function (session, foldStyle, row) {\n        return (this.$tryMode(session.getState(row - 1), session, foldStyle, row) ||\n            this.$tryMode(session.getState(row), session, foldStyle, row) ||\n            this.defaultMode.getFoldWidget(session, foldStyle, row));\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n        var mode = this.$getMode(session.getState(row - 1));\n        if (!mode || !mode.getFoldWidget(session, foldStyle, row))\n            mode = this.$getMode(session.getState(row));\n        if (!mode || !mode.getFoldWidget(session, foldStyle, row))\n            mode = this.defaultMode;\n        return mode.getFoldWidgetRange(session, foldStyle, row);\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/folding/xml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (voidElements, optionalEndTags) {\n    BaseFoldMode.call(this);\n    this.voidElements = voidElements || {};\n    this.optionalEndTags = oop.mixin({}, this.voidElements);\n    if (optionalEndTags)\n        oop.mixin(this.optionalEndTags, optionalEndTags);\n};\noop.inherits(FoldMode, BaseFoldMode);\nvar Tag = function () {\n    this.tagName = \"\";\n    this.closing = false;\n    this.selfClosing = false;\n    this.start = { row: 0, column: 0 };\n    this.end = { row: 0, column: 0 };\n};\nfunction is(token, type) {\n    return token.type.lastIndexOf(type + \".xml\") > -1;\n}\n(function () {\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var tag = this._getFirstTagInLine(session, row);\n        if (!tag)\n            return this.getCommentFoldWidget(session, row);\n        if (tag.closing || (!tag.tagName && tag.selfClosing))\n            return foldStyle === \"markbeginend\" ? \"end\" : \"\";\n        if (!tag.tagName || tag.selfClosing || this.voidElements.hasOwnProperty(tag.tagName.toLowerCase()))\n            return \"\";\n        if (this._findEndTagInLine(session, row, tag.tagName, tag.end.column))\n            return \"\";\n        return \"start\";\n    };\n    this.getCommentFoldWidget = function (session, row) {\n        if (/comment/.test(session.getState(row)) && /<!-/.test(session.getLine(row)))\n            return \"start\";\n        return \"\";\n    };\n    this._getFirstTagInLine = function (session, row) {\n        var tokens = session.getTokens(row);\n        var tag = new Tag();\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (is(token, \"tag-open\")) {\n                tag.end.column = tag.start.column + token.value.length;\n                tag.closing = is(token, \"end-tag-open\");\n                token = tokens[++i];\n                if (!token)\n                    return null;\n                tag.tagName = token.value;\n                tag.end.column += token.value.length;\n                for (i++; i < tokens.length; i++) {\n                    token = tokens[i];\n                    tag.end.column += token.value.length;\n                    if (is(token, \"tag-close\")) {\n                        tag.selfClosing = token.value == '/>';\n                        break;\n                    }\n                }\n                return tag;\n            }\n            else if (is(token, \"tag-close\")) {\n                tag.selfClosing = token.value == '/>';\n                return tag;\n            }\n            tag.start.column += token.value.length;\n        }\n        return null;\n    };\n    this._findEndTagInLine = function (session, row, tagName, startColumn) {\n        var tokens = session.getTokens(row);\n        var column = 0;\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            column += token.value.length;\n            if (column < startColumn)\n                continue;\n            if (is(token, \"end-tag-open\")) {\n                token = tokens[i + 1];\n                if (token && token.value == tagName)\n                    return true;\n            }\n        }\n        return false;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n        var tags = session.getMatchingTags({ row: row, column: 0 });\n        if (tags) {\n            return new Range(tags.openTag.end.row, tags.openTag.end.column, tags.closeTag.start.row, tags.closeTag.start.column);\n        }\n        else {\n            return this.getCommentFoldWidget(session, row)\n                && session.getCommentFoldRange(row, session.getLine(row).length);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/folding/html\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/mixed\",\"ace/mode/folding/xml\",\"ace/mode/folding/cstyle\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar MixedFoldMode = require(\"./mixed\").FoldMode;\nvar XmlFoldMode = require(\"./xml\").FoldMode;\nvar CStyleFoldMode = require(\"./cstyle\").FoldMode;\nvar FoldMode = exports.FoldMode = function (voidElements, optionalTags) {\n    MixedFoldMode.call(this, new XmlFoldMode(voidElements, optionalTags), {\n        \"js-\": new CStyleFoldMode(),\n        \"css-\": new CStyleFoldMode()\n    });\n};\noop.inherits(FoldMode, MixedFoldMode);\n\n});\n\nace.define(\"ace/mode/html_completions\",[\"require\",\"exports\",\"module\",\"ace/token_iterator\"], function(require, exports, module){\"use strict\";\nvar TokenIterator = require(\"../token_iterator\").TokenIterator;\nvar commonAttributes = [\n    \"accesskey\",\n    \"class\",\n    \"contenteditable\",\n    \"contextmenu\",\n    \"dir\",\n    \"draggable\",\n    \"dropzone\",\n    \"hidden\",\n    \"id\",\n    \"inert\",\n    \"itemid\",\n    \"itemprop\",\n    \"itemref\",\n    \"itemscope\",\n    \"itemtype\",\n    \"lang\",\n    \"spellcheck\",\n    \"style\",\n    \"tabindex\",\n    \"title\",\n    \"translate\"\n];\nvar eventAttributes = [\n    \"onabort\",\n    \"onblur\",\n    \"oncancel\",\n    \"oncanplay\",\n    \"oncanplaythrough\",\n    \"onchange\",\n    \"onclick\",\n    \"onclose\",\n    \"oncontextmenu\",\n    \"oncuechange\",\n    \"ondblclick\",\n    \"ondrag\",\n    \"ondragend\",\n    \"ondragenter\",\n    \"ondragleave\",\n    \"ondragover\",\n    \"ondragstart\",\n    \"ondrop\",\n    \"ondurationchange\",\n    \"onemptied\",\n    \"onended\",\n    \"onerror\",\n    \"onfocus\",\n    \"oninput\",\n    \"oninvalid\",\n    \"onkeydown\",\n    \"onkeypress\",\n    \"onkeyup\",\n    \"onload\",\n    \"onloadeddata\",\n    \"onloadedmetadata\",\n    \"onloadstart\",\n    \"onmousedown\",\n    \"onmousemove\",\n    \"onmouseout\",\n    \"onmouseover\",\n    \"onmouseup\",\n    \"onmousewheel\",\n    \"onpause\",\n    \"onplay\",\n    \"onplaying\",\n    \"onprogress\",\n    \"onratechange\",\n    \"onreset\",\n    \"onscroll\",\n    \"onseeked\",\n    \"onseeking\",\n    \"onselect\",\n    \"onshow\",\n    \"onstalled\",\n    \"onsubmit\",\n    \"onsuspend\",\n    \"ontimeupdate\",\n    \"onvolumechange\",\n    \"onwaiting\"\n];\nvar globalAttributes = commonAttributes.concat(eventAttributes);\nvar attributeMap = {\n    \"a\": { \"href\": 1, \"target\": { \"_blank\": 1, \"top\": 1 }, \"ping\": 1, \"rel\": { \"nofollow\": 1, \"alternate\": 1, \"author\": 1, \"bookmark\": 1, \"help\": 1, \"license\": 1, \"next\": 1, \"noreferrer\": 1, \"prefetch\": 1, \"prev\": 1, \"search\": 1, \"tag\": 1 }, \"media\": 1, \"hreflang\": 1, \"type\": 1 },\n    \"abbr\": {},\n    \"address\": {},\n    \"area\": { \"shape\": 1, \"coords\": 1, \"href\": 1, \"hreflang\": 1, \"alt\": 1, \"target\": 1, \"media\": 1, \"rel\": 1, \"ping\": 1, \"type\": 1 },\n    \"article\": { \"pubdate\": 1 },\n    \"aside\": {},\n    \"audio\": { \"src\": 1, \"autobuffer\": 1, \"autoplay\": { \"autoplay\": 1 }, \"loop\": { \"loop\": 1 }, \"controls\": { \"controls\": 1 }, \"muted\": { \"muted\": 1 }, \"preload\": { \"auto\": 1, \"metadata\": 1, \"none\": 1 } },\n    \"b\": {},\n    \"base\": { \"href\": 1, \"target\": 1 },\n    \"bdi\": {},\n    \"bdo\": {},\n    \"blockquote\": { \"cite\": 1 },\n    \"body\": { \"onafterprint\": 1, \"onbeforeprint\": 1, \"onbeforeunload\": 1, \"onhashchange\": 1, \"onmessage\": 1, \"onoffline\": 1, \"onpopstate\": 1, \"onredo\": 1, \"onresize\": 1, \"onstorage\": 1, \"onundo\": 1, \"onunload\": 1 },\n    \"br\": {},\n    \"button\": { \"autofocus\": 1, \"disabled\": { \"disabled\": 1 }, \"form\": 1, \"formaction\": 1, \"formenctype\": 1, \"formmethod\": 1, \"formnovalidate\": 1, \"formtarget\": 1, \"name\": 1, \"value\": 1, \"type\": { \"button\": 1, \"submit\": 1 } },\n    \"canvas\": { \"width\": 1, \"height\": 1 },\n    \"caption\": {},\n    \"cite\": {},\n    \"code\": {},\n    \"col\": { \"span\": 1 },\n    \"colgroup\": { \"span\": 1 },\n    \"command\": { \"type\": 1, \"label\": 1, \"icon\": 1, \"disabled\": 1, \"checked\": 1, \"radiogroup\": 1, \"command\": 1 },\n    \"data\": {},\n    \"datalist\": {},\n    \"dd\": {},\n    \"del\": { \"cite\": 1, \"datetime\": 1 },\n    \"details\": { \"open\": 1 },\n    \"dfn\": {},\n    \"dialog\": { \"open\": 1 },\n    \"div\": {},\n    \"dl\": {},\n    \"dt\": {},\n    \"em\": {},\n    \"embed\": { \"src\": 1, \"height\": 1, \"width\": 1, \"type\": 1 },\n    \"fieldset\": { \"disabled\": 1, \"form\": 1, \"name\": 1 },\n    \"figcaption\": {},\n    \"figure\": {},\n    \"footer\": {},\n    \"form\": { \"accept-charset\": 1, \"action\": 1, \"autocomplete\": 1, \"enctype\": { \"multipart/form-data\": 1, \"application/x-www-form-urlencoded\": 1 }, \"method\": { \"get\": 1, \"post\": 1 }, \"name\": 1, \"novalidate\": 1, \"target\": { \"_blank\": 1, \"top\": 1 } },\n    \"h1\": {},\n    \"h2\": {},\n    \"h3\": {},\n    \"h4\": {},\n    \"h5\": {},\n    \"h6\": {},\n    \"head\": {},\n    \"header\": {},\n    \"hr\": {},\n    \"html\": { \"manifest\": 1 },\n    \"i\": {},\n    \"iframe\": { \"name\": 1, \"src\": 1, \"height\": 1, \"width\": 1, \"sandbox\": { \"allow-same-origin\": 1, \"allow-top-navigation\": 1, \"allow-forms\": 1, \"allow-scripts\": 1 }, \"seamless\": { \"seamless\": 1 } },\n    \"img\": { \"alt\": 1, \"src\": 1, \"height\": 1, \"width\": 1, \"usemap\": 1, \"ismap\": 1 },\n    \"input\": {\n        \"type\": { \"text\": 1, \"password\": 1, \"hidden\": 1, \"checkbox\": 1, \"submit\": 1, \"radio\": 1, \"file\": 1, \"button\": 1, \"reset\": 1, \"image\": 31, \"color\": 1, \"date\": 1, \"datetime\": 1, \"datetime-local\": 1, \"email\": 1, \"month\": 1, \"number\": 1, \"range\": 1, \"search\": 1, \"tel\": 1, \"time\": 1, \"url\": 1, \"week\": 1 },\n        \"accept\": 1, \"alt\": 1, \"autocomplete\": { \"on\": 1, \"off\": 1 }, \"autofocus\": { \"autofocus\": 1 }, \"checked\": { \"checked\": 1 }, \"disabled\": { \"disabled\": 1 }, \"form\": 1, \"formaction\": 1, \"formenctype\": { \"application/x-www-form-urlencoded\": 1, \"multipart/form-data\": 1, \"text/plain\": 1 }, \"formmethod\": { \"get\": 1, \"post\": 1 }, \"formnovalidate\": { \"formnovalidate\": 1 }, \"formtarget\": { \"_blank\": 1, \"_self\": 1, \"_parent\": 1, \"_top\": 1 }, \"height\": 1, \"list\": 1, \"max\": 1, \"maxlength\": 1, \"min\": 1, \"multiple\": { \"multiple\": 1 }, \"name\": 1, \"pattern\": 1, \"placeholder\": 1, \"readonly\": { \"readonly\": 1 }, \"required\": { \"required\": 1 }, \"size\": 1, \"src\": 1, \"step\": 1, \"width\": 1, \"files\": 1, \"value\": 1\n    },\n    \"ins\": { \"cite\": 1, \"datetime\": 1 },\n    \"kbd\": {},\n    \"keygen\": { \"autofocus\": 1, \"challenge\": { \"challenge\": 1 }, \"disabled\": { \"disabled\": 1 }, \"form\": 1, \"keytype\": { \"rsa\": 1, \"dsa\": 1, \"ec\": 1 }, \"name\": 1 },\n    \"label\": { \"form\": 1, \"for\": 1 },\n    \"legend\": {},\n    \"li\": { \"value\": 1 },\n    \"link\": { \"href\": 1, \"hreflang\": 1, \"rel\": { \"stylesheet\": 1, \"icon\": 1 }, \"media\": { \"all\": 1, \"screen\": 1, \"print\": 1 }, \"type\": { \"text/css\": 1, \"image/png\": 1, \"image/jpeg\": 1, \"image/gif\": 1 }, \"sizes\": 1 },\n    \"main\": {},\n    \"map\": { \"name\": 1 },\n    \"mark\": {},\n    \"math\": {},\n    \"menu\": { \"type\": 1, \"label\": 1 },\n    \"meta\": { \"http-equiv\": { \"content-type\": 1 }, \"name\": { \"description\": 1, \"keywords\": 1 }, \"content\": { \"text/html; charset=UTF-8\": 1 }, \"charset\": 1 },\n    \"meter\": { \"value\": 1, \"min\": 1, \"max\": 1, \"low\": 1, \"high\": 1, \"optimum\": 1 },\n    \"nav\": {},\n    \"noscript\": { \"href\": 1 },\n    \"object\": { \"param\": 1, \"data\": 1, \"type\": 1, \"height\": 1, \"width\": 1, \"usemap\": 1, \"name\": 1, \"form\": 1, \"classid\": 1 },\n    \"ol\": { \"start\": 1, \"reversed\": 1 },\n    \"optgroup\": { \"disabled\": 1, \"label\": 1 },\n    \"option\": { \"disabled\": 1, \"selected\": 1, \"label\": 1, \"value\": 1 },\n    \"output\": { \"for\": 1, \"form\": 1, \"name\": 1 },\n    \"p\": {},\n    \"param\": { \"name\": 1, \"value\": 1 },\n    \"pre\": {},\n    \"progress\": { \"value\": 1, \"max\": 1 },\n    \"q\": { \"cite\": 1 },\n    \"rp\": {},\n    \"rt\": {},\n    \"ruby\": {},\n    \"s\": {},\n    \"samp\": {},\n    \"script\": { \"charset\": 1, \"type\": { \"text/javascript\": 1 }, \"src\": 1, \"defer\": 1, \"async\": 1 },\n    \"select\": { \"autofocus\": 1, \"disabled\": 1, \"form\": 1, \"multiple\": { \"multiple\": 1 }, \"name\": 1, \"size\": 1, \"readonly\": { \"readonly\": 1 } },\n    \"small\": {},\n    \"source\": { \"src\": 1, \"type\": 1, \"media\": 1 },\n    \"span\": {},\n    \"strong\": {},\n    \"style\": { \"type\": 1, \"media\": { \"all\": 1, \"screen\": 1, \"print\": 1 }, \"scoped\": 1 },\n    \"sub\": {},\n    \"sup\": {},\n    \"svg\": {},\n    \"table\": { \"summary\": 1 },\n    \"tbody\": {},\n    \"td\": { \"headers\": 1, \"rowspan\": 1, \"colspan\": 1 },\n    \"textarea\": { \"autofocus\": { \"autofocus\": 1 }, \"disabled\": { \"disabled\": 1 }, \"form\": 1, \"maxlength\": 1, \"name\": 1, \"placeholder\": 1, \"readonly\": { \"readonly\": 1 }, \"required\": { \"required\": 1 }, \"rows\": 1, \"cols\": 1, \"wrap\": { \"on\": 1, \"off\": 1, \"hard\": 1, \"soft\": 1 } },\n    \"tfoot\": {},\n    \"th\": { \"headers\": 1, \"rowspan\": 1, \"colspan\": 1, \"scope\": 1 },\n    \"thead\": {},\n    \"time\": { \"datetime\": 1 },\n    \"title\": {},\n    \"tr\": {},\n    \"track\": { \"kind\": 1, \"src\": 1, \"srclang\": 1, \"label\": 1, \"default\": 1 },\n    \"section\": {},\n    \"summary\": {},\n    \"u\": {},\n    \"ul\": {},\n    \"var\": {},\n    \"video\": { \"src\": 1, \"autobuffer\": 1, \"autoplay\": { \"autoplay\": 1 }, \"loop\": { \"loop\": 1 }, \"controls\": { \"controls\": 1 }, \"width\": 1, \"height\": 1, \"poster\": 1, \"muted\": { \"muted\": 1 }, \"preload\": { \"auto\": 1, \"metadata\": 1, \"none\": 1 } },\n    \"wbr\": {}\n};\nvar elements = Object.keys(attributeMap);\nfunction is(token, type) {\n    return token.type.lastIndexOf(type + \".xml\") > -1;\n}\nfunction findTagName(session, pos) {\n    var iterator = new TokenIterator(session, pos.row, pos.column);\n    var token = iterator.getCurrentToken();\n    while (token && !is(token, \"tag-name\")) {\n        token = iterator.stepBackward();\n    }\n    if (token)\n        return token.value;\n}\nfunction findAttributeName(session, pos) {\n    var iterator = new TokenIterator(session, pos.row, pos.column);\n    var token = iterator.getCurrentToken();\n    while (token && !is(token, \"attribute-name\")) {\n        token = iterator.stepBackward();\n    }\n    if (token)\n        return token.value;\n}\nvar HtmlCompletions = function () {\n};\n(function () {\n    this.getCompletions = function (state, session, pos, prefix) {\n        var token = session.getTokenAt(pos.row, pos.column);\n        if (!token)\n            return [];\n        if (is(token, \"tag-name\") || is(token, \"tag-open\") || is(token, \"end-tag-open\"))\n            return this.getTagCompletions(state, session, pos, prefix);\n        if (is(token, \"tag-whitespace\") || is(token, \"attribute-name\"))\n            return this.getAttributeCompletions(state, session, pos, prefix);\n        if (is(token, \"attribute-value\"))\n            return this.getAttributeValueCompletions(state, session, pos, prefix);\n        var line = session.getLine(pos.row).substr(0, pos.column);\n        if (/&[a-z]*$/i.test(line))\n            return this.getHTMLEntityCompletions(state, session, pos, prefix);\n        return [];\n    };\n    this.getTagCompletions = function (state, session, pos, prefix) {\n        return elements.map(function (element) {\n            return {\n                value: element,\n                meta: \"tag\",\n                score: 1000000\n            };\n        });\n    };\n    this.getAttributeCompletions = function (state, session, pos, prefix) {\n        var tagName = findTagName(session, pos);\n        if (!tagName)\n            return [];\n        var attributes = globalAttributes;\n        if (tagName in attributeMap) {\n            attributes = attributes.concat(Object.keys(attributeMap[tagName]));\n        }\n        return attributes.map(function (attribute) {\n            return {\n                caption: attribute,\n                snippet: attribute + '=\"$0\"',\n                meta: \"attribute\",\n                score: 1000000\n            };\n        });\n    };\n    this.getAttributeValueCompletions = function (state, session, pos, prefix) {\n        var tagName = findTagName(session, pos);\n        var attributeName = findAttributeName(session, pos);\n        if (!tagName)\n            return [];\n        var values = [];\n        if (tagName in attributeMap && attributeName in attributeMap[tagName] && typeof attributeMap[tagName][attributeName] === \"object\") {\n            values = Object.keys(attributeMap[tagName][attributeName]);\n        }\n        return values.map(function (value) {\n            return {\n                caption: value,\n                snippet: value,\n                meta: \"attribute value\",\n                score: 1000000\n            };\n        });\n    };\n    this.getHTMLEntityCompletions = function (state, session, pos, prefix) {\n        var values = ['Aacute;', 'aacute;', 'Acirc;', 'acirc;', 'acute;', 'AElig;', 'aelig;', 'Agrave;', 'agrave;', 'alefsym;', 'Alpha;', 'alpha;', 'amp;', 'and;', 'ang;', 'Aring;', 'aring;', 'asymp;', 'Atilde;', 'atilde;', 'Auml;', 'auml;', 'bdquo;', 'Beta;', 'beta;', 'brvbar;', 'bull;', 'cap;', 'Ccedil;', 'ccedil;', 'cedil;', 'cent;', 'Chi;', 'chi;', 'circ;', 'clubs;', 'cong;', 'copy;', 'crarr;', 'cup;', 'curren;', 'Dagger;', 'dagger;', 'dArr;', 'darr;', 'deg;', 'Delta;', 'delta;', 'diams;', 'divide;', 'Eacute;', 'eacute;', 'Ecirc;', 'ecirc;', 'Egrave;', 'egrave;', 'empty;', 'emsp;', 'ensp;', 'Epsilon;', 'epsilon;', 'equiv;', 'Eta;', 'eta;', 'ETH;', 'eth;', 'Euml;', 'euml;', 'euro;', 'exist;', 'fnof;', 'forall;', 'frac12;', 'frac14;', 'frac34;', 'frasl;', 'Gamma;', 'gamma;', 'ge;', 'gt;', 'hArr;', 'harr;', 'hearts;', 'hellip;', 'Iacute;', 'iacute;', 'Icirc;', 'icirc;', 'iexcl;', 'Igrave;', 'igrave;', 'image;', 'infin;', 'int;', 'Iota;', 'iota;', 'iquest;', 'isin;', 'Iuml;', 'iuml;', 'Kappa;', 'kappa;', 'Lambda;', 'lambda;', 'lang;', 'laquo;', 'lArr;', 'larr;', 'lceil;', 'ldquo;', 'le;', 'lfloor;', 'lowast;', 'loz;', 'lrm;', 'lsaquo;', 'lsquo;', 'lt;', 'macr;', 'mdash;', 'micro;', 'middot;', 'minus;', 'Mu;', 'mu;', 'nabla;', 'nbsp;', 'ndash;', 'ne;', 'ni;', 'not;', 'notin;', 'nsub;', 'Ntilde;', 'ntilde;', 'Nu;', 'nu;', 'Oacute;', 'oacute;', 'Ocirc;', 'ocirc;', 'OElig;', 'oelig;', 'Ograve;', 'ograve;', 'oline;', 'Omega;', 'omega;', 'Omicron;', 'omicron;', 'oplus;', 'or;', 'ordf;', 'ordm;', 'Oslash;', 'oslash;', 'Otilde;', 'otilde;', 'otimes;', 'Ouml;', 'ouml;', 'para;', 'part;', 'permil;', 'perp;', 'Phi;', 'phi;', 'Pi;', 'pi;', 'piv;', 'plusmn;', 'pound;', 'Prime;', 'prime;', 'prod;', 'prop;', 'Psi;', 'psi;', 'quot;', 'radic;', 'rang;', 'raquo;', 'rArr;', 'rarr;', 'rceil;', 'rdquo;', 'real;', 'reg;', 'rfloor;', 'Rho;', 'rho;', 'rlm;', 'rsaquo;', 'rsquo;', 'sbquo;', 'Scaron;', 'scaron;', 'sdot;', 'sect;', 'shy;', 'Sigma;', 'sigma;', 'sigmaf;', 'sim;', 'spades;', 'sub;', 'sube;', 'sum;', 'sup;', 'sup1;', 'sup2;', 'sup3;', 'supe;', 'szlig;', 'Tau;', 'tau;', 'there4;', 'Theta;', 'theta;', 'thetasym;', 'thinsp;', 'THORN;', 'thorn;', 'tilde;', 'times;', 'trade;', 'Uacute;', 'uacute;', 'uArr;', 'uarr;', 'Ucirc;', 'ucirc;', 'Ugrave;', 'ugrave;', 'uml;', 'upsih;', 'Upsilon;', 'upsilon;', 'Uuml;', 'uuml;', 'weierp;', 'Xi;', 'xi;', 'Yacute;', 'yacute;', 'yen;', 'Yuml;', 'yuml;', 'Zeta;', 'zeta;', 'zwj;', 'zwnj;'];\n        return values.map(function (value) {\n            return {\n                caption: value,\n                snippet: value,\n                meta: \"html entity\",\n                score: 1000000\n            };\n        });\n    };\n}).call(HtmlCompletions.prototype);\nexports.HtmlCompletions = HtmlCompletions;\n\n});\n\nace.define(\"ace/mode/html\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text\",\"ace/mode/javascript\",\"ace/mode/css\",\"ace/mode/html_highlight_rules\",\"ace/mode/behaviour/xml\",\"ace/mode/folding/html\",\"ace/mode/html_completions\",\"ace/worker/worker_client\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar lang = require(\"../lib/lang\");\nvar TextMode = require(\"./text\").Mode;\nvar JavaScriptMode = require(\"./javascript\").Mode;\nvar CssMode = require(\"./css\").Mode;\nvar HtmlHighlightRules = require(\"./html_highlight_rules\").HtmlHighlightRules;\nvar XmlBehaviour = require(\"./behaviour/xml\").XmlBehaviour;\nvar HtmlFoldMode = require(\"./folding/html\").FoldMode;\nvar HtmlCompletions = require(\"./html_completions\").HtmlCompletions;\nvar WorkerClient = require(\"../worker/worker_client\").WorkerClient;\nvar voidElements = [\"area\", \"base\", \"br\", \"col\", \"embed\", \"hr\", \"img\", \"input\", \"keygen\", \"link\", \"meta\", \"menuitem\", \"param\", \"source\", \"track\", \"wbr\"];\nvar optionalEndTags = [\"li\", \"dt\", \"dd\", \"p\", \"rt\", \"rp\", \"optgroup\", \"option\", \"colgroup\", \"td\", \"th\"];\nvar Mode = function (options) {\n    this.fragmentContext = options && options.fragmentContext;\n    this.HighlightRules = HtmlHighlightRules;\n    this.$behaviour = new XmlBehaviour();\n    this.$completer = new HtmlCompletions();\n    this.createModeDelegates({\n        \"js-\": JavaScriptMode,\n        \"css-\": CssMode\n    });\n    this.foldingRules = new HtmlFoldMode(this.voidElements, lang.arrayToMap(optionalEndTags));\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.blockComment = { start: \"<!--\", end: \"-->\" };\n    this.voidElements = lang.arrayToMap(voidElements);\n    this.getNextLineIndent = function (state, line, tab) {\n        return this.$getIndent(line);\n    };\n    this.checkOutdent = function (state, line, input) {\n        return false;\n    };\n    this.getCompletions = function (state, session, pos, prefix) {\n        return this.$completer.getCompletions(state, session, pos, prefix);\n    };\n    this.createWorker = function (session) {\n        if (this.constructor != Mode)\n            return;\n        var worker = new WorkerClient([\"ace\"], \"ace/mode/html_worker\", \"Worker\");\n        worker.attachToDocument(session.getDocument());\n        if (this.fragmentContext)\n            worker.call(\"setOptions\", [{ context: this.fragmentContext }]);\n        worker.on(\"error\", function (e) {\n            session.setAnnotations(e.data);\n        });\n        worker.on(\"terminate\", function () {\n            session.clearAnnotations();\n        });\n        return worker;\n    };\n    this.$id = \"ace/mode/html\";\n    this.snippetFileId = \"ace/snippets/html\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});\n\nace.define(\"ace/mode/sh_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar reservedKeywords = exports.reservedKeywords = ('!|{|}|case|do|done|elif|else|' +\n    'esac|fi|for|if|in|then|until|while|' +\n    '&|;|export|local|read|typeset|unset|' +\n    'elif|select|set|function|declare|readonly');\nvar languageConstructs = exports.languageConstructs = ('[|]|alias|bg|bind|break|builtin|' +\n    'cd|command|compgen|complete|continue|' +\n    'dirs|disown|echo|enable|eval|exec|' +\n    'exit|fc|fg|getopts|hash|help|history|' +\n    'jobs|kill|let|logout|popd|printf|pushd|' +\n    'pwd|return|set|shift|shopt|source|' +\n    'suspend|test|times|trap|type|ulimit|' +\n    'umask|unalias|wait');\nvar ShHighlightRules = function () {\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword\": reservedKeywords,\n        \"support.function.builtin\": languageConstructs,\n        \"invalid.deprecated\": \"debugger\"\n    }, \"identifier\");\n    var integer = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\n    var fraction = \"(?:\\\\.\\\\d+)\";\n    var intPart = \"(?:\\\\d+)\";\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\n    var exponentFloat = \"(?:(?:\" + pointFloat + \"|\" + intPart + \")\" + \")\";\n    var floatNumber = \"(?:\" + exponentFloat + \"|\" + pointFloat + \")\";\n    var fileDescriptor = \"(?:&\" + intPart + \")\";\n    var variableName = \"[a-zA-Z_][a-zA-Z0-9_]*\";\n    var variable = \"(?:\" + variableName + \"(?==))\";\n    var builtinVariable = \"(?:\\\\$(?:SHLVL|\\\\$|\\\\!|\\\\?))\";\n    var func = \"(?:\" + variableName + \"\\\\s*\\\\(\\\\))\";\n    this.$rules = {\n        \"start\": [{\n                token: \"constant\",\n                regex: /\\\\./\n            }, {\n                token: [\"text\", \"comment\"],\n                regex: /(^|\\s)(#.*)$/\n            }, {\n                token: \"string.start\",\n                regex: '\"',\n                push: [{\n                        token: \"constant.language.escape\",\n                        regex: /\\\\(?:[$`\"\\\\]|$)/\n                    }, {\n                        include: \"variables\"\n                    }, {\n                        token: \"keyword.operator\",\n                        regex: /`/ // TODO highlight `\n                    }, {\n                        token: \"string.end\",\n                        regex: '\"',\n                        next: \"pop\"\n                    }, {\n                        defaultToken: \"string\"\n                    }]\n            }, {\n                token: \"string\",\n                regex: \"\\\\$'\",\n                push: [{\n                        token: \"constant.language.escape\",\n                        regex: /\\\\(?:[abeEfnrtv\\\\'\"]|x[a-fA-F\\d]{1,2}|u[a-fA-F\\d]{4}([a-fA-F\\d]{4})?|c.|\\d{1,3})/\n                    }, {\n                        token: \"string\",\n                        regex: \"'\",\n                        next: \"pop\"\n                    }, {\n                        defaultToken: \"string\"\n                    }]\n            }, {\n                regex: \"<<<\",\n                token: \"keyword.operator\"\n            }, {\n                stateName: \"heredoc\",\n                regex: \"(<<-?)(\\\\s*)(['\\\"`]?)([\\\\w\\\\-]+)(['\\\"`]?)\",\n                onMatch: function (value, currentState, stack) {\n                    var next = value[2] == '-' ? \"indentedHeredoc\" : \"heredoc\";\n                    var tokens = value.split(this.splitRegex);\n                    stack.push(next, tokens[4]);\n                    return [\n                        { type: \"constant\", value: tokens[1] },\n                        { type: \"text\", value: tokens[2] },\n                        { type: \"string\", value: tokens[3] },\n                        { type: \"support.class\", value: tokens[4] },\n                        { type: \"string\", value: tokens[5] }\n                    ];\n                },\n                rules: {\n                    heredoc: [{\n                            onMatch: function (value, currentState, stack) {\n                                if (value === stack[1]) {\n                                    stack.shift();\n                                    stack.shift();\n                                    this.next = stack[0] || \"start\";\n                                    return \"support.class\";\n                                }\n                                this.next = \"\";\n                                return \"string\";\n                            },\n                            regex: \".*$\",\n                            next: \"start\"\n                        }],\n                    indentedHeredoc: [{\n                            token: \"string\",\n                            regex: \"^\\t+\"\n                        }, {\n                            onMatch: function (value, currentState, stack) {\n                                if (value === stack[1]) {\n                                    stack.shift();\n                                    stack.shift();\n                                    this.next = stack[0] || \"start\";\n                                    return \"support.class\";\n                                }\n                                this.next = \"\";\n                                return \"string\";\n                            },\n                            regex: \".*$\",\n                            next: \"start\"\n                        }]\n                }\n            }, {\n                regex: \"$\",\n                token: \"empty\",\n                next: function (currentState, stack) {\n                    if (stack[0] === \"heredoc\" || stack[0] === \"indentedHeredoc\")\n                        return stack[0];\n                    return currentState;\n                }\n            }, {\n                token: [\"keyword\", \"text\", \"text\", \"text\", \"variable\"],\n                regex: /(declare|local|readonly)(\\s+)(?:(-[fixar]+)(\\s+))?([a-zA-Z_][a-zA-Z0-9_]*\\b)/\n            }, {\n                token: \"variable.language\",\n                regex: builtinVariable\n            }, {\n                token: \"variable\",\n                regex: variable\n            }, {\n                include: \"variables\"\n            }, {\n                token: \"support.function\",\n                regex: func\n            }, {\n                token: \"support.function\",\n                regex: fileDescriptor\n            }, {\n                token: \"string\",\n                start: \"'\", end: \"'\"\n            }, {\n                token: \"constant.numeric\",\n                regex: floatNumber\n            }, {\n                token: \"constant.numeric\",\n                regex: integer + \"\\\\b\"\n            }, {\n                token: keywordMapper,\n                regex: \"[a-zA-Z_][a-zA-Z0-9_]*\\\\b\"\n            }, {\n                token: \"keyword.operator\",\n                regex: \"\\\\+|\\\\-|\\\\*|\\\\*\\\\*|\\\\/|\\\\/\\\\/|~|<|>|<=|=>|=|!=|[%&|`]\"\n            }, {\n                token: \"punctuation.operator\",\n                regex: \";\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"[\\\\[\\\\(\\\\{]\"\n            }, {\n                token: \"paren.rparen\",\n                regex: \"[\\\\]]\"\n            }, {\n                token: \"paren.rparen\",\n                regex: \"[\\\\)\\\\}]\",\n                next: \"pop\"\n            }],\n        variables: [{\n                token: \"variable\",\n                regex: /(\\$)(\\w+)/\n            }, {\n                token: [\"variable\", \"paren.lparen\"],\n                regex: /(\\$)(\\()/,\n                push: \"start\"\n            }, {\n                token: [\"variable\", \"paren.lparen\", \"keyword.operator\", \"variable\", \"keyword.operator\"],\n                regex: /(\\$)(\\{)([#!]?)(\\w+|[*@#?\\-$!0_])(:[?+\\-=]?|##?|%%?|,,?\\/|\\^\\^?)?/,\n                push: \"start\"\n            }, {\n                token: \"variable\",\n                regex: /\\$[*@#?\\-$!0_]/\n            }, {\n                token: [\"variable\", \"paren.lparen\"],\n                regex: /(\\$)(\\{)/,\n                push: \"start\"\n            }]\n    };\n    this.normalizeRules();\n};\noop.inherits(ShHighlightRules, TextHighlightRules);\nexports.ShHighlightRules = ShHighlightRules;\n\n});\n\nace.define(\"ace/mode/sh\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/sh_highlight_rules\",\"ace/range\",\"ace/mode/folding/cstyle\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar ShHighlightRules = require(\"./sh_highlight_rules\").ShHighlightRules;\nvar Range = require(\"../range\").Range;\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = ShHighlightRules;\n    this.foldingRules = new CStyleFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"#\";\n    this.getNextLineIndent = function (state, line, tab) {\n        var indent = this.$getIndent(line);\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n            return indent;\n        }\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[:]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n        return indent;\n    };\n    var outdents = {\n        \"pass\": 1,\n        \"return\": 1,\n        \"raise\": 1,\n        \"break\": 1,\n        \"continue\": 1\n    };\n    this.checkOutdent = function (state, line, input) {\n        if (input !== \"\\r\\n\" && input !== \"\\r\" && input !== \"\\n\")\n            return false;\n        var tokens = this.getTokenizer().getLineTokens(line.trim(), state).tokens;\n        if (!tokens)\n            return false;\n        do {\n            var last = tokens.pop();\n        } while (last && (last.type == \"comment\" || (last.type == \"text\" && last.value.match(/^\\s+$/))));\n        if (!last)\n            return false;\n        return (last.type == \"keyword\" && outdents[last.value]);\n    };\n    this.autoOutdent = function (state, doc, row) {\n        row += 1;\n        var indent = this.$getIndent(doc.getLine(row));\n        var tab = doc.getTabString();\n        if (indent.slice(-tab.length) == tab)\n            doc.remove(new Range(row, indent.length - tab.length, row, indent.length));\n    };\n    this.$id = \"ace/mode/sh\";\n    this.snippetFileId = \"ace/snippets/sh\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});\n\nace.define(\"ace/mode/xml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text\",\"ace/mode/xml_highlight_rules\",\"ace/mode/behaviour/xml\",\"ace/mode/folding/xml\",\"ace/worker/worker_client\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar lang = require(\"../lib/lang\");\nvar TextMode = require(\"./text\").Mode;\nvar XmlHighlightRules = require(\"./xml_highlight_rules\").XmlHighlightRules;\nvar XmlBehaviour = require(\"./behaviour/xml\").XmlBehaviour;\nvar XmlFoldMode = require(\"./folding/xml\").FoldMode;\nvar WorkerClient = require(\"../worker/worker_client\").WorkerClient;\nvar Mode = function () {\n    this.HighlightRules = XmlHighlightRules;\n    this.$behaviour = new XmlBehaviour();\n    this.foldingRules = new XmlFoldMode();\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.voidElements = lang.arrayToMap([]);\n    this.blockComment = { start: \"<!--\", end: \"-->\" };\n    this.createWorker = function (session) {\n        var worker = new WorkerClient([\"ace\"], \"ace/mode/xml_worker\", \"Worker\");\n        worker.attachToDocument(session.getDocument());\n        worker.on(\"error\", function (e) {\n            session.setAnnotations(e.data);\n        });\n        worker.on(\"terminate\", function () {\n            session.clearAnnotations();\n        });\n        return worker;\n    };\n    this.$id = \"ace/mode/xml\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});\n\nace.define(\"ace/mode/markdown\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/behaviour/cstyle\",\"ace/mode/text\",\"ace/mode/markdown_highlight_rules\",\"ace/mode/folding/markdown\",\"ace/mode/javascript\",\"ace/mode/html\",\"ace/mode/sh\",\"ace/mode/sh\",\"ace/mode/xml\",\"ace/mode/css\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\nvar TextMode = require(\"./text\").Mode;\nvar MarkdownHighlightRules = require(\"./markdown_highlight_rules\").MarkdownHighlightRules;\nvar MarkdownFoldMode = require(\"./folding/markdown\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = MarkdownHighlightRules;\n    this.createModeDelegates({\n        javascript: require(\"./javascript\").Mode,\n        html: require(\"./html\").Mode,\n        bash: require(\"./sh\").Mode,\n        sh: require(\"./sh\").Mode,\n        xml: require(\"./xml\").Mode,\n        css: require(\"./css\").Mode\n    });\n    this.foldingRules = new MarkdownFoldMode();\n    this.$behaviour = new CstyleBehaviour({ braces: true });\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.type = \"text\";\n    this.blockComment = { start: \"<!--\", end: \"-->\" };\n    this.$quotes = { '\"': '\"', \"`\": \"`\" };\n    this.getNextLineIndent = function (state, line, tab) {\n        if (state == \"listblock\") {\n            var match = /^(\\s*)(?:([-+*])|(\\d+)\\.)(\\s+)/.exec(line);\n            if (!match)\n                return \"\";\n            var marker = match[2];\n            if (!marker)\n                marker = parseInt(match[3], 10) + 1 + \".\";\n            return match[1] + marker + match[4];\n        }\n        else {\n            return this.$getIndent(line);\n        }\n    };\n    this.$id = \"ace/mode/markdown\";\n    this.snippetFileId = \"ace/snippets/markdown\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/markdown\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            ","import { Box } from '@mui/system';\nimport { Col, Row } from 'antd';\nimport { useState } from 'react';\nimport AceEditor from 'react-ace';\nimport type { AceOptions } from 'react-ace/types';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\n\nimport 'ace-builds/src-noconflict/ext-searchbox';\nimport 'ace-builds/src-noconflict/mode-markdown';\nimport 'ace-builds/src-noconflict/theme-textmate';\n\nexport default function Markdown() {\n  const [markdown, setMarkdown] = useState<string>('');\n\n  const markdownOptions: AceOptions = {\n    useWorker: false,\n    showLineNumbers: true,\n    wrap: true,\n    fontSize: 14,\n  };\n  return (\n    <Box sx={{ height: '100vh' }}>\n      <Row>\n        <Col xs={24} md={12} style={{ height: '100vh' }}>\n          <AceEditor\n            theme=\"textmate\"\n            placeholder=\"Input\"\n            setOptions={markdownOptions}\n            value={markdown}\n            onChange={setMarkdown}\n            mode=\"markdown\"\n            width=\"100%\"\n            height=\"calc(100% - 37px)\"\n          />\n        </Col>\n        <Col xs={24} md={12} style={{ height: '100vh' }}>\n          <Box height=\"calc(100% - 37px)\" sx={{ width: '100%', px: 1 }}>\n            <ReactMarkdown remarkPlugins={[remarkGfm]}>{markdown}</ReactMarkdown>\n          </Box>\n        </Col>\n      </Row>\n    </Box>\n  );\n}\n"],"names":["b","c","d","e","f","g","h","k","l","m","n","p","q","t","u","v","a","r","reactIs_production_min","reactIsModule","require$$0","protocols","uriTransformer","uri","url","first","colon","index","protocol","isBuffer","obj","stringifyPosition","value","position","point","pos","VFileMessage","reason","place","origin","parts","path","basename","dirname","extname","join","ext","assertPath","start","end","seenNonSlash","firstNonSlashEnd","extIndex","unmatchedSlash","startPart","startDot","preDotState","code","segments","joined","normalize","absolute","normalizeString","allowAboveRoot","result","lastSegmentLength","lastSlash","dots","lastSlashIndex","proc","cwd","isUrl","fileUrlOrPath","urlToPath","error","getPathFromURLPosix","pathname","third","order","VFile","options","buffer","prop","assertNonEmpty","assertPart","stem","encoding","message","part","name","bufferLike","bail","hasOwn","toStr","defineProperty","gOPD","isArray","arr","isPlainObject","hasOwnConstructor","hasIsPrototypeOf","key","setProperty","target","getProperty","extend","src","copy","copyIsArray","clone","i","length","deep","prototype","trough","fns","pipeline","run","use","values","middlewareIndex","callback","next","output","fn","wrap","middelware","middleware","called","wrapped","parameters","fnExpectsCallback","done","exception","then","unified","base","own","transformers","attachers","namespace","frozen","freezeIndex","processor","data","freeze","parse","stringify","runSync","process","processSync","destination","assertUnfrozen","attacher","transformer","settings","addPlugin","addList","addPreset","add","plugin","plugins","thing","entry","isPlainObj","doc","file","vfile","Parser","assertParser","newable","node","Compiler","assertCompiler","assertNode","executor","resolve","reject","tree","complete","assertDone","looksLikeAVFileValue","keys","asyncName","looksLikeAVFile","toString","includeImageAlt","one","all","splice","list","remove","items","chunkStart","push","hasOwnProperty","combineExtensions","extensions","syntaxExtension","extension","hook","left","right","constructs","existing","before","unicodePunctuationRegex","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","check","factorySpace","effects","ok","type","max","limit","size","prefix","content","initializeContent","contentStart","afterContentStartConstruct","paragraphInitial","previous","lineStart","token","document","initializeDocument","containerConstruct","tokenizeContainer","self","stack","continued","childFlow","childToken","lineStartOffset","item","documentContinue","checkNewContainers","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","flowStart","thereIsANewContainer","thereIsNoNewContainer","containerContinue","flowContinue","writeToChild","eof","stream","seen","nok","classifyCharacter","resolveAll","events","context","attention","tokenizeAttention","resolveAllAttention","open","group","text","openingSequence","closingSequence","nextEvents","offset","movePoint","attentionMarkers","marker","sequence","after","close","autolink","tokenizeAutolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","blankLine","tokenizeBlankLine","afterWhitespace","blockQuote","tokenizeBlockQuoteStart","tokenizeBlockQuoteContinuation","exit","state","characterEscape","tokenizeCharacterEscape","element","decodeNamedCharacterReference","characterReference","char","tokenizeCharacterReference","test","numeric","codeFenced","tokenizeCodeFenced","closingFenceConstruct","tokenizeClosingFence","nonLazyLine","tokenizeNonLazyLine","tail","initialPrefix","sizeOpen","sequenceOpen","infoOpen","openAfter","info","infoAfter","meta","contentContinue","closingSequenceStart","closingSequenceEnd","codeIndented","tokenizeCodeIndented","indentedContent","tokenizeIndentedContent","afterStartPrefix","afterPrefix","codeText","tokenizeCodeText","resolveCodeText","tailExitIndex","headEnterIndex","enter","gap","subtokenize","jumps","event","lineIndex","otherIndex","otherEvent","subevents","more","subcontent","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","slice","tokenizeContent","resolveContent","continuationConstruct","tokenizeContinuation","contentEnd","startLookahead","prefixed","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","atBreak","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","normalizeIdentifier","definition","tokenizeDefinition","titleConstruct","tokenizeTitle","identifier","labelAfter","hardBreakEscape","tokenizeHardBreakEscape","headingAtx","tokenizeHeadingAtx","resolveHeadingAtx","fenceOpenInside","headingBreak","htmlBlockNames","htmlRawNames","htmlFlow","tokenizeHtmlFlow","resolveToHtmlFlow","nextBlankConstruct","tokenizeNextBlank","kind","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","continuation","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","htmlContinueStart","htmlLineEnd","continuationRawEndTag","htmlText","tokenizeHtmlText","returnState","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelEnd","tokenizeLabelEnd","resolveToLabelEnd","resolveAllLabelEnd","resourceConstruct","tokenizeResource","fullReferenceConstruct","tokenizeFullReference","collapsedReferenceConstruct","tokenizeCollapsedReference","media","labelStart","defined","balanced","afterLabelEnd","destinationAfter","between","afterLabel","labelStartImage","tokenizeLabelStartImage","labelStartLink","tokenizeLabelStartLink","lineEnding","tokenizeLineEnding","thematicBreak","tokenizeThematicBreak","tokenizeListStart","tokenizeListContinuation","tokenizeListEnd","listItemPrefixWhitespaceConstruct","tokenizeListItemPrefixWhitespace","indentConstruct","tokenizeIndent","initialSize","atMarker","inside","onBlank","endOfPrefix","otherPrefix","notBlank","notInCurrentItem","setextUnderline","tokenizeSetextUnderline","resolveToSetextUnderline","heading","paragraph","flow","initializeFlow","initial","atBlankEnding","afterConstruct","resolver","createResolver","string","initializeFactory","field","initializeText","resolveAllLineSuffixes","notText","extraResolver","resolveAllText","chunks","bufferIndex","tabs","chunk","createTokenizer","parser","initialize","from","columnStart","resolveAllConstructs","consume","constructFactory","onsuccessfulconstruct","onsuccessfulcheck","sliceStream","sliceSerialize","now","defineSkip","write","main","addResult","expandTabs","serializeChunks","sliceChunks","accountForPotentialSkip","chunkIndex","go","fields","construct","onreturn","bogusState","listOfConstructs","constructIndex","currentConstruct","handleListOfConstructs","handleMapOfConstructs","map","def","handleConstruct","store","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","restore","startIndex","startBufferIndex","endIndex","endBufferIndex","view","atTab","contentInitial","flowInitial","insideSpan","resolveText","disable","defaultConstructs","create","creator","search","preprocess","column","atCarriageReturn","preprocessor","match","endPosition","postprocess","decodeNumericCharacterReference","characterEscapeOrReference","decodeString","decode","$0","$1","$2","head","hex","fromMarkdown","compiler","config","opener","link","onenterdata","codeFlow","emphasis","hardBreak","html","image","listItem","onenterlistitemvalue","onenterlistordered","onenterreference","strong","closer","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","onexitdata","onexitcharacterreferencemarker","onexitcharacterreferencevalue","onexitcodefenced","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","onexitsetextheadinglinesequence","onexitsetextheadingtext","configure","compile","resume","setData","getData","listStack","prepareList","handler","defaultOnError","containerBalance","listSpread","firstBlankLineIndex","tailIndex","tailEvent","and","errorHandler","onExitError","ancestor","depth","referenceType","fragment","children","combined","remarkParse","blockquote","lang","properties","strikethrough","normalizeUri","skip","replace","footnoteReference","id","safeId","counter","reuseCounter","sup","footnote","footnoteById","no","revert","subtype","suffix","contents","imageReference","inlineCode","linkReference","parent","results","loose","listLoose","listItemLoose","child","spread","root","pointStart","pointEnd","table","rows","firstRow","tableContent","body","tableRow","siblings","align","cellIndex","cells","cell","alignValue","tableCell","tab","space","trimLines","source","last","lines","trimLine","handlers","ignore","convert","typeFactory","anyFactory","propsFactory","castFactory","tests","checks","any","assertion","CONTINUE","EXIT","SKIP","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","overload","generated","definitions","cache","clean","createState","dangerous","patch","applyData","oneBound","allBound","augment","ctx","props","to","hName","hChildren","hProperties","defaultUnknownHandler","nodes","footer","listItems","referenceIndex","backReferences","backReference","tailTail","toHast","foot","remarkRehype","bridge","mutate","remarkRehype$1","Schema","property","normal","merge","Info","attribute","powers","boolean","increment","booleanish","overloadedBoolean","number","spaceSeparated","commaSeparated","commaOrSpaceSeparated","types","DefinedInfo","mask","mark","xlink","_","xml","caseSensitiveTransform","attributes","caseInsensitiveTransform","xmlns","aria","svg","valid","dash","cap","find","schema","Type","rest","camelcase","dashes","kebab","hastToReact","htmlBase","svgBase","rehypeFilter","parent_","whitespace","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","NEWLINE","FORWARD_SLASH","ASTERISK","EMPTY_STRING","TYPE_COMMENT","TYPE_DECLARATION","inlineStyleParser","style","lineno","updatePosition","str","Position","msg","err","re","comments","rules","val","ret","trim","declarations","decls","decl","StyleToObject","iterator","hasIterator","len","styleToObjectModule","tableElements","childrenToReact","childIndex","toReact","transform","parentSchema","addProperty","component","basic","React","ReactIs","input","getInputElement","getElementsBeforeCount","flattenPosition","count","commas","spaces","parseStyle","styleReplacer","changelog","deprecated","ReactMarkdown","deprecation","hastNode","PropTypes","www","tokenizeWww","domain","tokenizeDomain","tokenizePath","punctuation","tokenizePunctuation","namedCharacterReference","tokenizeNamedCharacterReference","wwwAutolink","tokenizeWwwAutolink","previousWww","httpAutolink","tokenizeHttpAutolink","previousHttp","emailAutolink","tokenizeEmailAutolink","previousEmail","gfmAutolinkLiteral","hasDot","hasDigitInLastSegment","gfmAtext","previousUnbalanced","atext","dotContinuation","dashOrUnderscoreContinuation","afterDashOrUnderscore","t1","t2","s","slash1","slash2","w2","w3","dot","hasUnderscoreInLastSegment","hasUnderscoreInLastLastSegment","punctuationContinuation","inPath","continuedPunctuation","parenAtPathEnd","pathEnd","trailingPunctuation","indent","gfmFootnote","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveToPotentialGfmFootnoteCall","call","replacement","callStart","callData","callEscape","gfmStrikethrough","single","tokenizeStrikethrough","resolveAllStrikethrough","gfmTable","tokenizeTable","resolveTable","nextPrefixedOrBlank","tokenizeNextPrefixedOrBlank","inHead","inDelimiterRow","inRow","cellStart","seenCellInRow","tableHeaderCount","seenDelimiter","hasDash","cellDividerHead","inCellContentHead","cellBreakHead","atRowEndHead","inWhitespaceHead","inCellContentEscapeHead","originalInterrupt","tokenizeRowEnd","atDelimiterRowBreak","rowEndDelimiter","inWhitespaceDelimiter","inFillerDelimiter","afterLeftAlignment","afterRightAlignment","tableClose","bodyStart","rowStartBody","cellDividerBody","inCellContentBody","cellBreakBody","atRowEndBody","inWhitespaceBody","inCellContentEscapeBody","tableBodyClose","tasklistCheck","tokenizeTasklistCheck","gfmTaskListItem","spaceThenNonSpace","gfm","ccount","character","escapeStringRegexp","findAndReplace","ignored","pairs","toPairs","pairIndex","grandparent","change","matchObject","toExpression","toFunction","escape","inConstruct","notInConstruct","gfmAutolinkLiteralFromMarkdown","transformGfmAutolinkLiterals","enterLiteralAutolink","enterLiteralAutolinkValue","exitLiteralAutolink","exitLiteralAutolinkEmail","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","gfmAutolinkLiteralToMarkdown","findUrl","findEmail","isCorrectDomain","splitUrl","trailExec","trail","closingParenIndex","openingParens","closingParens","email","association","containerFlow","indexStack","tracker","eol","indentLines","line","patternCompile","pattern","patternInScope","listInScope","none","safe","positions","infos","expression","numerical","escapeBackslashes","whole","track","lineShift","move","shift","footnoteReferencePeek","gfmFootnoteFromMarkdown","enterFootnoteDefinition","enterFootnoteDefinitionLabelString","enterFootnoteCall","enterFootnoteCallString","exitFootnoteDefinition","exitFootnoteDefinitionLabelString","exitFootnoteCall","exitFootnoteCallString","gfmFootnoteToMarkdown","footnoteDefinition","safeOptions","subexit","blank","containerPhrasing","handle","constructsWithoutStrikethrough","handleDelete","peekDelete","gfmStrikethroughFromMarkdown","enterStrikethrough","exitStrikethrough","gfmStrikethroughToMarkdown","inlineCodePeek","markdownTable","stringLength","defaultStringLength","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","row","sizes","columnIndex","serialize","toAlignment","gfmTableFromMarkdown","enterTable","enterCell","enterRow","exitCodeText","exitTable","gfmTableToMarkdown","padding","alignDelimiters","around","handleTable","handleTableRow","handleTableCell","inlineCodeWithTable","serializeData","handleTableAsData","handleTableRowAsData","matrix","checkBullet","checkListItemIndent","listItemIndent","bullet","gfmTaskListItemFromMarkdown","exitCheck","exitParagraphWithTaskListItem","gfmTaskListItemToMarkdown","listItemWithTaskListItem","firstParaghraph","sibling","checkable","checkbox","gfmFromMarkdown","gfmToMarkdown","remarkGfm","require","exports","module","oop","TextHighlightRules","supportType","supportFunction","supportConstant","supportConstantColor","supportConstantFonts","numRe","pseudoElements","pseudoClasses","CssHighlightRules","keywordMapper","JsDocCommentHighlightRules","DocCommentHighlightRules","identifierRe","JavaScriptHighlightRules","kwBeforeRe","escapedRe","JSX","tagRegex","jsxTag","jsxJsRule","currentState","XmlHighlightRules","HighlightRules","tag","tagMap","HtmlHighlightRules","modes","escaped","ch","MarkdownHighlightRules","codeBlockStartRule","language","codeBlockRules","embedState","endMarker","BaseFoldMode","Range","FoldMode","session","foldStyle","startColumn","maxRow","startRow","endRow","isHeading","getLevel","startHeadingLevel","level","endColumn","MatchingBraceOutdent","openBracePos","commentRegex","fw","forceMultiline","range","startIndent","subRange","TextMode","WorkerClient","CstyleBehaviour","CStyleFoldMode","Mode","tokenizedLine","tokens","endState","worker","propertyMap","CssCompletions","x","inParens","skipSemicolon","TokenIterator","CssBehaviour","action","editor","cursor","rightChar","selected","Behaviour","XmlBehaviour","quote","rightSpace","tokenEndColumn","nextToken","tokenRow","tokenColumn","nextIndent","defaultMode","subModes","mode","voidElements","optionalEndTags","Tag","tags","MixedFoldMode","XmlFoldMode","optionalTags","commonAttributes","eventAttributes","globalAttributes","attributeMap","elements","findTagName","findAttributeName","HtmlCompletions","attributeName","JavaScriptMode","CssMode","HtmlFoldMode","reservedKeywords","languageConstructs","ShHighlightRules","integer","fraction","intPart","pointFloat","exponentFloat","floatNumber","fileDescriptor","variableName","variable","builtinVariable","func","outdents","MarkdownFoldMode","Markdown","markdown","setMarkdown","useState","markdownOptions","jsx","Box","Row","Col","AceEditor"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160]}